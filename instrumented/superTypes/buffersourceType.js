function cov_24tv8o6xo1(){var path="/Users/brett/jsoe/src/superTypes/buffersourceType.js";var hash="e61d43f3b6d304e22e7f56e62b21176a27a1bd27";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/superTypes/buffersourceType.js",statementMap:{"0":{start:{line:5,column:46},end:{line:16,column:1}},"1":{start:{line:18,column:42},end:{line:22,column:1}},"2":{start:{line:28,column:31},end:{line:58,column:1}},"3":{start:{line:29,column:2},end:{line:57,column:3}},"4":{start:{line:31,column:4},end:{line:31,column:33}},"5":{start:{line:33,column:4},end:{line:33,column:30}},"6":{start:{line:35,column:4},end:{line:35,column:30}},"7":{start:{line:37,column:4},end:{line:37,column:37}},"8":{start:{line:39,column:4},end:{line:39,column:32}},"9":{start:{line:41,column:4},end:{line:41,column:47}},"10":{start:{line:43,column:4},end:{line:43,column:37}},"11":{start:{line:45,column:4},end:{line:45,column:39}},"12":{start:{line:48,column:4},end:{line:48,column:41}},"13":{start:{line:50,column:4},end:{line:50,column:49}},"14":{start:{line:52,column:4},end:{line:52,column:40}},"15":{start:{line:82,column:22},end:{line:111,column:1}},"16":{start:{line:83,column:2},end:{line:110,column:3}},"17":{start:{line:85,column:4},end:{line:85,column:21}},"18":{start:{line:87,column:4},end:{line:87,column:22}},"19":{start:{line:89,column:4},end:{line:89,column:29}},"20":{start:{line:91,column:4},end:{line:91,column:22}},"21":{start:{line:93,column:4},end:{line:93,column:23}},"22":{start:{line:95,column:4},end:{line:95,column:22}},"23":{start:{line:97,column:4},end:{line:97,column:23}},"24":{start:{line:99,column:4},end:{line:99,column:24}},"25":{start:{line:101,column:4},end:{line:101,column:24}},"26":{start:{line:103,column:4},end:{line:103,column:25}},"27":{start:{line:105,column:4},end:{line:105,column:26}},"28":{start:{line:113,column:10},end:{line:113,column:11}},"29":{start:{line:118,column:25},end:{line:1496,column:1}},"30":{start:{line:133,column:52},end:{line:133,column:68}},"31":{start:{line:136,column:14},end:{line:136,column:27}},"32":{start:{line:141,column:8},end:{line:141,column:9}},"33":{start:{line:143,column:19},end:{line:143,column:63}},"34":{start:{line:146,column:4},end:{line:174,column:5}},"35":{start:{line:147,column:6},end:{line:149,column:8}},"36":{start:{line:151,column:6},end:{line:151,column:62}},"37":{start:{line:153,column:6},end:{line:173,column:7}},"38":{start:{line:154,column:8},end:{line:165,column:10}},"39":{start:{line:161,column:12},end:{line:163,column:13}},"40":{start:{line:162,column:14},end:{line:162,column:38}},"41":{start:{line:166,column:8},end:{line:172,column:24}},"42":{start:{line:178,column:4},end:{line:200,column:5}},"43":{start:{line:179,column:6},end:{line:179,column:25}},"44":{start:{line:181,column:6},end:{line:181,column:74}},"45":{start:{line:182,column:6},end:{line:199,column:9}},"46":{start:{line:183,column:8},end:{line:198,column:10}},"47":{start:{line:192,column:12},end:{line:194,column:13}},"48":{start:{line:193,column:14},end:{line:193,column:40}},"49":{start:{line:196,column:12},end:{line:196,column:32}},"50":{start:{line:201,column:4},end:{line:207,column:6}},"51":{start:{line:215,column:11},end:{line:215,column:34}},"52":{start:{line:216,column:4},end:{line:216,column:22}},"53":{start:{line:219,column:22},end:{line:219,column:40}},"54":{start:{line:220,column:4},end:{line:229,column:5}},"55":{start:{line:221,column:6},end:{line:221,column:72}},"56":{start:{line:223,column:6},end:{line:223,column:70}},"57":{start:{line:225,column:8},end:{line:225,column:45}},"58":{start:{line:227,column:6},end:{line:227,column:36}},"59":{start:{line:228,column:6},end:{line:228,column:53}},"60":{start:{line:236,column:11},end:{line:236,column:34}},"61":{start:{line:238,column:4},end:{line:238,column:30}},"62":{start:{line:240,column:19},end:{line:240,column:69}},"63":{start:{line:241,column:4},end:{line:241,column:41}},"64":{start:{line:242,column:4},end:{line:242,column:50}},"65":{start:{line:245,column:6},end:{line:245,column:32}},"66":{start:{line:247,column:4},end:{line:247,column:47}},"67":{start:{line:248,column:4},end:{line:248,column:53}},"68":{start:{line:250,column:4},end:{line:274,column:5}},"69":{start:{line:252,column:8},end:{line:252,column:39}},"70":{start:{line:254,column:6},end:{line:254,column:50}},"71":{start:{line:255,column:6},end:{line:255,column:60}},"72":{start:{line:258,column:8},end:{line:258,column:39}},"73":{start:{line:260,column:6},end:{line:260,column:50}},"74":{start:{line:261,column:6},end:{line:261,column:60}},"75":{start:{line:262,column:11},end:{line:274,column:5}},"76":{start:{line:264,column:8},end:{line:264,column:41}},"77":{start:{line:266,column:6},end:{line:266,column:52}},"78":{start:{line:267,column:6},end:{line:267,column:62}},"79":{start:{line:270,column:8},end:{line:270,column:37}},"80":{start:{line:272,column:6},end:{line:272,column:44}},"81":{start:{line:273,column:6},end:{line:273,column:58}},"82":{start:{line:277,column:4},end:{line:279,column:13}},"83":{start:{line:282,column:22},end:{line:282,column:40}},"84":{start:{line:283,column:19},end:{line:283,column:69}},"85":{start:{line:285,column:4},end:{line:390,column:7}},"86":{start:{line:326,column:12},end:{line:326,column:31}},"87":{start:{line:327,column:27},end:{line:377,column:14}},"88":{start:{line:335,column:77},end:{line:337,column:29}},"89":{start:{line:338,column:41},end:{line:340,column:23}},"90":{start:{line:341,column:41},end:{line:341,column:63}},"91":{start:{line:342,column:73},end:{line:346,column:23}},"92":{start:{line:347,column:22},end:{line:347,column:54}},"93":{start:{line:348,column:22},end:{line:363,column:24}},"94":{start:{line:352,column:26},end:{line:361,column:29}},"95":{start:{line:367,column:18},end:{line:371,column:35}},"96":{start:{line:379,column:45},end:{line:383,column:14}},"97":{start:{line:393,column:4},end:{line:393,column:10}},"98":{start:{line:399,column:16},end:{line:1480,column:6}},"99":{start:{line:410,column:16},end:{line:410,column:41}},"100":{start:{line:420,column:16},end:{line:420,column:20}},"101":{start:{line:421,column:60},end:{line:421,column:78}},"102":{start:{line:422,column:61},end:{line:425,column:13}},"103":{start:{line:435,column:16},end:{line:435,column:43}},"104":{start:{line:437,column:34},end:{line:437,column:67}},"105":{start:{line:438,column:34},end:{line:442,column:13}},"106":{start:{line:444,column:27},end:{line:447,column:13}},"107":{start:{line:449,column:74},end:{line:452,column:20}},"108":{start:{line:453,column:39},end:{line:455,column:17}},"109":{start:{line:457,column:74},end:{line:460,column:20}},"110":{start:{line:461,column:39},end:{line:463,column:25}},"111":{start:{line:465,column:29},end:{line:467,column:13}},"112":{start:{line:470,column:14},end:{line:470,column:60}},"113":{start:{line:473,column:31},end:{line:475,column:13}},"114":{start:{line:477,column:46},end:{line:480,column:22}},"115":{start:{line:481,column:41},end:{line:483,column:17}},"116":{start:{line:486,column:46},end:{line:489,column:22}},"117":{start:{line:490,column:37},end:{line:492,column:29}},"118":{start:{line:494,column:31},end:{line:496,column:13}},"119":{start:{line:498,column:12},end:{line:498,column:44}},"120":{start:{line:499,column:12},end:{line:499,column:48}},"121":{start:{line:501,column:37},end:{line:512,column:14}},"122":{start:{line:505,column:14},end:{line:511,column:18}},"123":{start:{line:515,column:12},end:{line:515,column:60}},"124":{start:{line:517,column:12},end:{line:527,column:13}},"125":{start:{line:519,column:14},end:{line:519,column:41}},"126":{start:{line:520,column:14},end:{line:520,column:20}},"127":{start:{line:522,column:14},end:{line:522,column:43}},"128":{start:{line:523,column:14},end:{line:523,column:20}},"129":{start:{line:525,column:14},end:{line:525,column:45}},"130":{start:{line:526,column:14},end:{line:526,column:20}},"131":{start:{line:535,column:41},end:{line:538,column:31}},"132":{start:{line:539,column:41},end:{line:542,column:32}},"133":{start:{line:561,column:41},end:{line:564,column:31}},"134":{start:{line:565,column:41},end:{line:568,column:32}},"135":{start:{line:585,column:41},end:{line:588,column:32}},"136":{start:{line:589,column:41},end:{line:592,column:31}},"137":{start:{line:611,column:61},end:{line:611,column:65}},"138":{start:{line:613,column:16},end:{line:613,column:49}},"139":{start:{line:623,column:17},end:{line:626,column:17}},"140":{start:{line:629,column:14},end:{line:629,column:75}},"141":{start:{line:637,column:18},end:{line:637,column:51}},"142":{start:{line:639,column:14},end:{line:641,column:15}},"143":{start:{line:640,column:16},end:{line:640,column:23}},"144":{start:{line:643,column:14},end:{line:646,column:16}},"145":{start:{line:648,column:14},end:{line:648,column:51}},"146":{start:{line:650,column:43},end:{line:654,column:15}},"147":{start:{line:659,column:18},end:{line:659,column:69}},"148":{start:{line:663,column:10},end:{line:663,column:42}},"149":{start:{line:673,column:16},end:{line:673,column:64}},"150":{start:{line:693,column:20},end:{line:693,column:24}},"151":{start:{line:697,column:20},end:{line:698,column:80}},"152":{start:{line:706,column:22},end:{line:706,column:55}},"153":{start:{line:708,column:18},end:{line:710,column:19}},"154":{start:{line:709,column:20},end:{line:709,column:27}},"155":{start:{line:712,column:73},end:{line:716,column:19}},"156":{start:{line:717,column:30},end:{line:717,column:40}},"157":{start:{line:719,column:18},end:{line:727,column:19}},"158":{start:{line:720,column:20},end:{line:723,column:22}},"159":{start:{line:724,column:20},end:{line:724,column:40}},"160":{start:{line:725,column:20},end:{line:725,column:42}},"161":{start:{line:726,column:20},end:{line:726,column:27}},"162":{start:{line:728,column:18},end:{line:728,column:45}},"163":{start:{line:729,column:18},end:{line:729,column:40}},"164":{start:{line:731,column:18},end:{line:735,column:19}},"165":{start:{line:734,column:20},end:{line:734,column:46}},"166":{start:{line:738,column:21},end:{line:738,column:69}},"167":{start:{line:744,column:22},end:{line:747,column:49}},"168":{start:{line:753,column:22},end:{line:757,column:51}},"169":{start:{line:772,column:64},end:{line:772,column:68}},"170":{start:{line:773,column:70},end:{line:777,column:19}},"171":{start:{line:778,column:30},end:{line:778,column:40}},"172":{start:{line:779,column:18},end:{line:789,column:19}},"173":{start:{line:783,column:20},end:{line:785,column:22}},"174":{start:{line:786,column:20},end:{line:786,column:40}},"175":{start:{line:788,column:20},end:{line:788,column:47}},"176":{start:{line:790,column:18},end:{line:790,column:40}},"177":{start:{line:817,column:22},end:{line:817,column:26}},"178":{start:{line:820,column:21},end:{line:820,column:69}},"179":{start:{line:822,column:37},end:{line:827,column:24}},"180":{start:{line:829,column:78},end:{line:833,column:28}},"181":{start:{line:834,column:43},end:{line:838,column:23}},"182":{start:{line:840,column:37},end:{line:844,column:38}},"183":{start:{line:846,column:18},end:{line:854,column:19}},"184":{start:{line:847,column:20},end:{line:850,column:22}},"185":{start:{line:851,column:20},end:{line:851,column:40}},"186":{start:{line:853,column:20},end:{line:853,column:47}},"187":{start:{line:855,column:18},end:{line:855,column:40}},"188":{start:{line:864,column:22},end:{line:866,column:48}},"189":{start:{line:882,column:20},end:{line:882,column:24}},"190":{start:{line:885,column:21},end:{line:885,column:69}},"191":{start:{line:891,column:22},end:{line:894,column:49}},"192":{start:{line:921,column:22},end:{line:921,column:26}},"193":{start:{line:923,column:20},end:{line:924,column:80}},"194":{start:{line:928,column:20},end:{line:928,column:66}},"195":{start:{line:931,column:37},end:{line:933,column:19}},"196":{start:{line:934,column:18},end:{line:946,column:19}},"197":{start:{line:937,column:20},end:{line:942,column:22}},"198":{start:{line:943,column:20},end:{line:943,column:40}},"199":{start:{line:945,column:20},end:{line:945,column:47}},"200":{start:{line:947,column:18},end:{line:947,column:40}},"201":{start:{line:952,column:64},end:{line:952,column:68}},"202":{start:{line:954,column:20},end:{line:955,column:80}},"203":{start:{line:963,column:22},end:{line:963,column:55}},"204":{start:{line:965,column:18},end:{line:967,column:19}},"205":{start:{line:966,column:20},end:{line:966,column:27}},"206":{start:{line:972,column:22},end:{line:972,column:57}},"207":{start:{line:1002,column:33},end:{line:1002,column:67}},"208":{start:{line:1004,column:48},end:{line:1018,column:17}},"209":{start:{line:1014,column:16},end:{line:1015,column:61}},"210":{start:{line:1016,column:16},end:{line:1016,column:50}},"211":{start:{line:1017,column:16},end:{line:1017,column:50}},"212":{start:{line:1032,column:18},end:{line:1032,column:22}},"213":{start:{line:1033,column:33},end:{line:1035,column:15}},"214":{start:{line:1037,column:66},end:{line:1041,column:15}},"215":{start:{line:1042,column:40},end:{line:1046,column:19}},"216":{start:{line:1047,column:14},end:{line:1055,column:15}},"217":{start:{line:1048,column:16},end:{line:1051,column:18}},"218":{start:{line:1052,column:16},end:{line:1052,column:36}},"219":{start:{line:1054,column:16},end:{line:1054,column:49}},"220":{start:{line:1056,column:14},end:{line:1056,column:42}},"221":{start:{line:1068,column:18},end:{line:1068,column:22}},"222":{start:{line:1072,column:16},end:{line:1073,column:61}},"223":{start:{line:1077,column:47},end:{line:1081,column:36}},"224":{start:{line:1089,column:18},end:{line:1089,column:51}},"225":{start:{line:1091,column:14},end:{line:1093,column:15}},"226":{start:{line:1092,column:16},end:{line:1092,column:23}},"227":{start:{line:1095,column:14},end:{line:1095,column:49}},"228":{start:{line:1097,column:14},end:{line:1097,column:76}},"229":{start:{line:1099,column:43},end:{line:1103,column:15}},"230":{start:{line:1108,column:18},end:{line:1108,column:69}},"231":{start:{line:1114,column:18},end:{line:1118,column:35}},"232":{start:{line:1122,column:10},end:{line:1122,column:42}},"233":{start:{line:1147,column:20},end:{line:1147,column:24}},"234":{start:{line:1150,column:18},end:{line:1150,column:66}},"235":{start:{line:1152,column:76},end:{line:1156,column:26}},"236":{start:{line:1157,column:41},end:{line:1161,column:21}},"237":{start:{line:1163,column:31},end:{line:1165,column:36}},"238":{start:{line:1168,column:18},end:{line:1168,column:64}},"239":{start:{line:1171,column:35},end:{line:1173,column:17}},"240":{start:{line:1176,column:50},end:{line:1179,column:26}},"241":{start:{line:1180,column:45},end:{line:1182,column:21}},"242":{start:{line:1184,column:16},end:{line:1196,column:17}},"243":{start:{line:1189,column:18},end:{line:1192,column:20}},"244":{start:{line:1193,column:18},end:{line:1193,column:38}},"245":{start:{line:1194,column:18},end:{line:1194,column:40}},"246":{start:{line:1195,column:18},end:{line:1195,column:31}},"247":{start:{line:1198,column:16},end:{line:1198,column:43}},"248":{start:{line:1199,column:16},end:{line:1199,column:38}},"249":{start:{line:1200,column:16},end:{line:1200,column:28}},"250":{start:{line:1214,column:20},end:{line:1214,column:24}},"251":{start:{line:1215,column:31},end:{line:1215,column:58}},"252":{start:{line:1217,column:18},end:{line:1217,column:51}},"253":{start:{line:1221,column:18},end:{line:1221,column:66}},"254":{start:{line:1228,column:23},end:{line:1231,column:19}},"255":{start:{line:1233,column:67},end:{line:1235,column:17}},"256":{start:{line:1237,column:16},end:{line:1247,column:19}},"257":{start:{line:1238,column:65},end:{line:1238,column:73}},"258":{start:{line:1239,column:18},end:{line:1246,column:21}},"259":{start:{line:1249,column:18},end:{line:1249,column:67}},"260":{start:{line:1251,column:35},end:{line:1253,column:17}},"261":{start:{line:1255,column:16},end:{line:1255,column:48}},"262":{start:{line:1256,column:16},end:{line:1279,column:18}},"263":{start:{line:1258,column:20},end:{line:1277,column:23}},"264":{start:{line:1291,column:20},end:{line:1291,column:24}},"265":{start:{line:1294,column:18},end:{line:1294,column:51}},"266":{start:{line:1297,column:16},end:{line:1299,column:17}},"267":{start:{line:1298,column:18},end:{line:1298,column:25}},"268":{start:{line:1302,column:18},end:{line:1302,column:67}},"269":{start:{line:1305,column:31},end:{line:1305,column:58}},"270":{start:{line:1306,column:16},end:{line:1317,column:17}},"271":{start:{line:1307,column:37},end:{line:1309,column:19}},"272":{start:{line:1311,column:18},end:{line:1311,column:41}},"273":{start:{line:1313,column:18},end:{line:1313,column:75}},"274":{start:{line:1314,column:18},end:{line:1314,column:38}},"275":{start:{line:1315,column:18},end:{line:1315,column:40}},"276":{start:{line:1316,column:18},end:{line:1316,column:25}},"277":{start:{line:1318,column:16},end:{line:1318,column:43}},"278":{start:{line:1319,column:16},end:{line:1319,column:38}},"279":{start:{line:1325,column:20},end:{line:1329,column:37}},"280":{start:{line:1331,column:16},end:{line:1331,column:40}},"281":{start:{line:1347,column:66},end:{line:1349,column:15}},"282":{start:{line:1351,column:59},end:{line:1351,column:71}},"283":{start:{line:1353,column:16},end:{line:1353,column:38}},"284":{start:{line:1356,column:14},end:{line:1356,column:44}},"285":{start:{line:1357,column:14},end:{line:1466,column:16}},"286":{start:{line:1395,column:22},end:{line:1395,column:41}},"287":{start:{line:1397,column:24},end:{line:1397,column:42}},"288":{start:{line:1401,column:59},end:{line:1403,column:34}},"289":{start:{line:1407,column:24},end:{line:1410,column:33}},"290":{start:{line:1412,column:56},end:{line:1415,column:32}},"291":{start:{line:1417,column:61},end:{line:1420,column:35}},"292":{start:{line:1428,column:26},end:{line:1432,column:27}},"293":{start:{line:1435,column:22},end:{line:1450,column:23}},"294":{start:{line:1439,column:24},end:{line:1443,column:26}},"295":{start:{line:1445,column:24},end:{line:1449,column:26}},"296":{start:{line:1457,column:29},end:{line:1461,column:25}},"297":{start:{line:1462,column:22},end:{line:1462,column:58}},"298":{start:{line:1472,column:12},end:{line:1474,column:14}},"299":{start:{line:1482,column:4},end:{line:1492,column:5}},"300":{start:{line:1483,column:6},end:{line:1483,column:40}},"301":{start:{line:1490,column:11},end:{line:1490,column:33}},"302":{start:{line:1491,column:6},end:{line:1491,column:45}},"303":{start:{line:1494,column:4},end:{line:1494,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:31},end:{line:28,column:32}},loc:{start:{line:28,column:47},end:{line:58,column:1}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:82,column:22},end:{line:82,column:23}},loc:{start:{line:82,column:32},end:{line:111,column:1}},line:82},"2":{name:"(anonymous_2)",decl:{start:{line:128,column:2},end:{line:128,column:3}},loc:{start:{line:128,column:24},end:{line:208,column:3}},line:128},"3":{name:"(anonymous_3)",decl:{start:{line:160,column:10},end:{line:160,column:11}},loc:{start:{line:160,column:20},end:{line:164,column:11}},line:160},"4":{name:"(anonymous_4)",decl:{start:{line:178,column:65},end:{line:178,column:66}},loc:{start:{line:178,column:77},end:{line:180,column:5}},line:178},"5":{name:"(anonymous_5)",decl:{start:{line:182,column:30},end:{line:182,column:31}},loc:{start:{line:182,column:40},end:{line:199,column:7}},line:182},"6":{name:"(anonymous_6)",decl:{start:{line:191,column:10},end:{line:191,column:11}},loc:{start:{line:191,column:20},end:{line:197,column:11}},line:191},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:2},end:{line:209,column:3}},loc:{start:{line:209,column:20},end:{line:217,column:3}},line:209},"8":{name:"(anonymous_8)",decl:{start:{line:218,column:2},end:{line:218,column:3}},loc:{start:{line:218,column:27},end:{line:275,column:3}},line:218},"9":{name:"(anonymous_9)",decl:{start:{line:276,column:2},end:{line:276,column:3}},loc:{start:{line:276,column:20},end:{line:280,column:3}},line:276},"10":{name:"(anonymous_10)",decl:{start:{line:281,column:2},end:{line:281,column:3}},loc:{start:{line:281,column:41},end:{line:391,column:3}},line:281},"11":{name:"(anonymous_11)",decl:{start:{line:325,column:10},end:{line:325,column:11}},loc:{start:{line:325,column:26},end:{line:387,column:11}},line:325},"12":{name:"(anonymous_12)",decl:{start:{line:334,column:20},end:{line:334,column:21}},loc:{start:{line:334,column:30},end:{line:364,column:21}},line:334},"13":{name:"(anonymous_13)",decl:{start:{line:351,column:27},end:{line:351,column:28}},loc:{start:{line:351,column:40},end:{line:362,column:25}},line:351},"14":{name:"(anonymous_14)",decl:{start:{line:366,column:35},end:{line:366,column:36}},loc:{start:{line:366,column:51},end:{line:372,column:17}},line:366},"15":{name:"(anonymous_15)",decl:{start:{line:392,column:2},end:{line:392,column:3}},loc:{start:{line:392,column:34},end:{line:1495,column:3}},line:392},"16":{name:"(anonymous_16)",decl:{start:{line:405,column:10},end:{line:405,column:11}},loc:{start:{line:405,column:20},end:{line:411,column:11}},line:405},"17":{name:"(anonymous_17)",decl:{start:{line:415,column:10},end:{line:415,column:11}},loc:{start:{line:415,column:29},end:{line:528,column:11}},line:415},"18":{name:"(anonymous_18)",decl:{start:{line:503,column:18},end:{line:503,column:19}},loc:{start:{line:503,column:29},end:{line:512,column:13}},line:503},"19":{name:"(anonymous_19)",decl:{start:{line:534,column:12},end:{line:534,column:13}},loc:{start:{line:534,column:21},end:{line:543,column:13}},line:534},"20":{name:"(anonymous_20)",decl:{start:{line:560,column:12},end:{line:560,column:13}},loc:{start:{line:560,column:21},end:{line:569,column:13}},line:560},"21":{name:"(anonymous_21)",decl:{start:{line:584,column:12},end:{line:584,column:13}},loc:{start:{line:584,column:21},end:{line:593,column:13}},line:584},"22":{name:"(anonymous_22)",decl:{start:{line:610,column:12},end:{line:610,column:13}},loc:{start:{line:610,column:23},end:{line:660,column:13}},line:610},"23":{name:"(anonymous_23)",decl:{start:{line:662,column:27},end:{line:662,column:28}},loc:{start:{line:662,column:43},end:{line:664,column:9}},line:662},"24":{name:"(anonymous_24)",decl:{start:{line:668,column:10},end:{line:668,column:11}},loc:{start:{line:668,column:20},end:{line:674,column:11}},line:668},"25":{name:"(anonymous_25)",decl:{start:{line:691,column:16},end:{line:691,column:17}},loc:{start:{line:691,column:27},end:{line:758,column:17}},line:691},"26":{name:"(anonymous_26)",decl:{start:{line:771,column:16},end:{line:771,column:17}},loc:{start:{line:771,column:27},end:{line:791,column:17}},line:771},"27":{name:"(anonymous_27)",decl:{start:{line:811,column:16},end:{line:811,column:17}},loc:{start:{line:811,column:45},end:{line:856,column:17}},line:811},"28":{name:"(anonymous_28)",decl:{start:{line:859,column:16},end:{line:859,column:17}},loc:{start:{line:859,column:27},end:{line:867,column:17}},line:859},"29":{name:"(anonymous_29)",decl:{start:{line:880,column:16},end:{line:880,column:17}},loc:{start:{line:880,column:27},end:{line:895,column:17}},line:880},"30":{name:"(anonymous_30)",decl:{start:{line:916,column:16},end:{line:916,column:17}},loc:{start:{line:916,column:45},end:{line:948,column:17}},line:916},"31":{name:"(anonymous_31)",decl:{start:{line:951,column:16},end:{line:951,column:17}},loc:{start:{line:951,column:27},end:{line:973,column:17}},line:951},"32":{name:"(anonymous_32)",decl:{start:{line:1001,column:12},end:{line:1001,column:13}},loc:{start:{line:1001,column:42},end:{line:1019,column:13}},line:1001},"33":{name:"(anonymous_33)",decl:{start:{line:1013,column:24},end:{line:1013,column:25}},loc:{start:{line:1013,column:45},end:{line:1018,column:15}},line:1013},"34":{name:"(anonymous_34)",decl:{start:{line:1026,column:12},end:{line:1026,column:13}},loc:{start:{line:1026,column:43},end:{line:1057,column:13}},line:1026},"35":{name:"(anonymous_35)",decl:{start:{line:1060,column:12},end:{line:1060,column:13}},loc:{start:{line:1060,column:23},end:{line:1119,column:13}},line:1060},"36":{name:"(anonymous_36)",decl:{start:{line:1121,column:27},end:{line:1121,column:28}},loc:{start:{line:1121,column:43},end:{line:1123,column:9}},line:1121},"37":{name:"(anonymous_37)",decl:{start:{line:1141,column:14},end:{line:1141,column:15}},loc:{start:{line:1141,column:37},end:{line:1201,column:15}},line:1141},"38":{name:"(anonymous_38)",decl:{start:{line:1208,column:14},end:{line:1208,column:15}},loc:{start:{line:1208,column:34},end:{line:1280,column:15}},line:1208},"39":{name:"(anonymous_39)",decl:{start:{line:1237,column:58},end:{line:1237,column:59}},loc:{start:{line:1237,column:65},end:{line:1247,column:17}},line:1237},"40":{name:"(anonymous_40)",decl:{start:{line:1257,column:42},end:{line:1257,column:43}},loc:{start:{line:1257,column:55},end:{line:1278,column:19}},line:1257},"41":{name:"(anonymous_41)",decl:{start:{line:1283,column:14},end:{line:1283,column:15}},loc:{start:{line:1283,column:25},end:{line:1332,column:15}},line:1283},"42":{name:"(anonymous_42)",decl:{start:{line:1346,column:12},end:{line:1346,column:13}},loc:{start:{line:1346,column:22},end:{line:1467,column:13}},line:1346},"43":{name:"(anonymous_43)",decl:{start:{line:1394,column:20},end:{line:1394,column:21}},loc:{start:{line:1394,column:30},end:{line:1463,column:21}},line:1394},"44":{name:"(anonymous_44)",decl:{start:{line:1471,column:33},end:{line:1471,column:34}},loc:{start:{line:1471,column:53},end:{line:1475,column:11}},line:1471}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:57,column:3}},type:"switch",locations:[{start:{line:30,column:2},end:{line:31,column:33}},{start:{line:32,column:2},end:{line:33,column:30}},{start:{line:34,column:2},end:{line:35,column:30}},{start:{line:36,column:2},end:{line:37,column:37}},{start:{line:38,column:2},end:{line:39,column:32}},{start:{line:40,column:2},end:{line:41,column:47}},{start:{line:42,column:2},end:{line:43,column:37}},{start:{line:44,column:2},end:{line:45,column:39}},{start:{line:46,column:2},end:{line:48,column:41}},{start:{line:49,column:2},end:{line:50,column:49}},{start:{line:51,column:2},end:{line:52,column:40}}],line:29},"1":{loc:{start:{line:83,column:2},end:{line:110,column:3}},type:"switch",locations:[{start:{line:84,column:2},end:{line:85,column:21}},{start:{line:86,column:2},end:{line:87,column:22}},{start:{line:88,column:2},end:{line:89,column:29}},{start:{line:90,column:2},end:{line:91,column:22}},{start:{line:92,column:2},end:{line:93,column:23}},{start:{line:94,column:2},end:{line:95,column:22}},{start:{line:96,column:2},end:{line:97,column:23}},{start:{line:98,column:2},end:{line:99,column:24}},{start:{line:100,column:2},end:{line:101,column:24}},{start:{line:102,column:2},end:{line:103,column:25}},{start:{line:104,column:2},end:{line:105,column:26}}],line:83},"2":{loc:{start:{line:129,column:19},end:{line:132,column:10}},type:"default-arg",locations:[{start:{line:132,column:8},end:{line:132,column:10}}],line:129},"3":{loc:{start:{line:146,column:4},end:{line:174,column:5}},type:"if",locations:[{start:{line:146,column:4},end:{line:174,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:146},"4":{loc:{start:{line:146,column:8},end:{line:146,column:64}},type:"binary-expr",locations:[{start:{line:146,column:8},end:{line:146,column:43}},{start:{line:146,column:47},end:{line:146,column:64}}],line:146},"5":{loc:{start:{line:148,column:35},end:{line:148,column:68}},type:"binary-expr",locations:[{start:{line:148,column:35},end:{line:148,column:47}},{start:{line:148,column:51},end:{line:148,column:68}}],line:148},"6":{loc:{start:{line:153,column:6},end:{line:173,column:7}},type:"if",locations:[{start:{line:153,column:6},end:{line:173,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:153},"7":{loc:{start:{line:161,column:12},end:{line:163,column:13}},type:"if",locations:[{start:{line:161,column:12},end:{line:163,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:161},"8":{loc:{start:{line:178,column:4},end:{line:200,column:5}},type:"if",locations:[{start:{line:178,column:4},end:{line:200,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:178},"9":{loc:{start:{line:178,column:8},end:{line:180,column:6}},type:"binary-expr",locations:[{start:{line:178,column:8},end:{line:178,column:40}},{start:{line:178,column:44},end:{line:180,column:6}}],line:178},"10":{loc:{start:{line:192,column:12},end:{line:194,column:13}},type:"if",locations:[{start:{line:192,column:12},end:{line:194,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:192},"11":{loc:{start:{line:202,column:13},end:{line:206,column:22}},type:"cond-expr",locations:[{start:{line:203,column:10},end:{line:203,column:16}},{start:{line:204,column:10},end:{line:206,column:22}}],line:202},"12":{loc:{start:{line:204,column:10},end:{line:206,column:22}},type:"cond-expr",locations:[{start:{line:205,column:12},end:{line:205,column:16}},{start:{line:206,column:12},end:{line:206,column:22}}],line:204},"13":{loc:{start:{line:220,column:4},end:{line:229,column:5}},type:"if",locations:[{start:{line:220,column:4},end:{line:229,column:5}},{start:{line:222,column:11},end:{line:229,column:5}}],line:220},"14":{loc:{start:{line:220,column:8},end:{line:220,column:63}},type:"binary-expr",locations:[{start:{line:220,column:8},end:{line:220,column:35}},{start:{line:220,column:39},end:{line:220,column:63}}],line:220},"15":{loc:{start:{line:240,column:19},end:{line:240,column:69}},type:"cond-expr",locations:[{start:{line:240,column:49},end:{line:240,column:54}},{start:{line:240,column:57},end:{line:240,column:69}}],line:240},"16":{loc:{start:{line:250,column:4},end:{line:274,column:5}},type:"if",locations:[{start:{line:250,column:4},end:{line:274,column:5}},{start:{line:262,column:11},end:{line:274,column:5}}],line:250},"17":{loc:{start:{line:262,column:11},end:{line:274,column:5}},type:"if",locations:[{start:{line:262,column:11},end:{line:274,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:262},"18":{loc:{start:{line:283,column:19},end:{line:283,column:69}},type:"cond-expr",locations:[{start:{line:283,column:49},end:{line:283,column:54}},{start:{line:283,column:57},end:{line:283,column:69}}],line:283},"19":{loc:{start:{line:288,column:15},end:{line:290,column:21}},type:"cond-expr",locations:[{start:{line:289,column:12},end:{line:289,column:30}},{start:{line:290,column:12},end:{line:290,column:21}}],line:288},"20":{loc:{start:{line:292,column:8},end:{line:292,column:54}},type:"binary-expr",locations:[{start:{line:292,column:8},end:{line:292,column:41}},{start:{line:292,column:45},end:{line:292,column:54}}],line:292},"21":{loc:{start:{line:301,column:9},end:{line:310,column:14}},type:"cond-expr",locations:[{start:{line:302,column:10},end:{line:309,column:9}},{start:{line:310,column:10},end:{line:310,column:14}}],line:301},"22":{loc:{start:{line:311,column:9},end:{line:320,column:14}},type:"cond-expr",locations:[{start:{line:312,column:10},end:{line:319,column:9}},{start:{line:320,column:10},end:{line:320,column:14}}],line:311},"23":{loc:{start:{line:311,column:10},end:{line:311,column:65}},type:"binary-expr",locations:[{start:{line:311,column:10},end:{line:311,column:34}},{start:{line:311,column:38},end:{line:311,column:65}}],line:311},"24":{loc:{start:{line:356,column:30},end:{line:358,column:37}},type:"cond-expr",locations:[{start:{line:357,column:34},end:{line:357,column:57}},{start:{line:358,column:34},end:{line:358,column:37}}],line:356},"25":{loc:{start:{line:368,column:30},end:{line:370,column:33}},type:"cond-expr",locations:[{start:{line:369,column:24},end:{line:369,column:28}},{start:{line:370,column:24},end:{line:370,column:33}}],line:368},"26":{loc:{start:{line:446,column:29},end:{line:446,column:72}},type:"cond-expr",locations:[{start:{line:446,column:45},end:{line:446,column:60}},{start:{line:446,column:63},end:{line:446,column:72}}],line:446},"27":{loc:{start:{line:453,column:39},end:{line:455,column:17}},type:"cond-expr",locations:[{start:{line:454,column:16},end:{line:454,column:54}},{start:{line:455,column:16},end:{line:455,column:17}}],line:453},"28":{loc:{start:{line:461,column:39},end:{line:463,column:25}},type:"cond-expr",locations:[{start:{line:462,column:16},end:{line:462,column:54}},{start:{line:463,column:16},end:{line:463,column:25}}],line:461},"29":{loc:{start:{line:481,column:41},end:{line:483,column:17}},type:"cond-expr",locations:[{start:{line:482,column:16},end:{line:482,column:56}},{start:{line:483,column:16},end:{line:483,column:17}}],line:481},"30":{loc:{start:{line:490,column:37},end:{line:492,column:29}},type:"cond-expr",locations:[{start:{line:491,column:16},end:{line:491,column:52}},{start:{line:492,column:16},end:{line:492,column:29}}],line:490},"31":{loc:{start:{line:505,column:21},end:{line:511,column:17}},type:"cond-expr",locations:[{start:{line:506,column:18},end:{line:508,column:17}},{start:{line:509,column:18},end:{line:511,column:17}}],line:505},"32":{loc:{start:{line:517,column:12},end:{line:527,column:13}},type:"switch",locations:[{start:{line:518,column:12},end:{line:520,column:20}},{start:{line:521,column:12},end:{line:524,column:13}},{start:{line:524,column:14},end:{line:526,column:20}}],line:517},"33":{loc:{start:{line:639,column:14},end:{line:641,column:15}},type:"if",locations:[{start:{line:639,column:14},end:{line:641,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:639},"34":{loc:{start:{line:688,column:24},end:{line:688,column:51}},type:"binary-expr",locations:[{start:{line:688,column:24},end:{line:688,column:29}},{start:{line:688,column:33},end:{line:688,column:51}}],line:688},"35":{loc:{start:{line:708,column:18},end:{line:710,column:19}},type:"if",locations:[{start:{line:708,column:18},end:{line:710,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:708},"36":{loc:{start:{line:719,column:18},end:{line:727,column:19}},type:"if",locations:[{start:{line:719,column:18},end:{line:727,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:719},"37":{loc:{start:{line:731,column:18},end:{line:735,column:19}},type:"if",locations:[{start:{line:731,column:18},end:{line:735,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:731},"38":{loc:{start:{line:779,column:18},end:{line:789,column:19}},type:"if",locations:[{start:{line:779,column:18},end:{line:789,column:19}},{start:{line:787,column:25},end:{line:789,column:19}}],line:779},"39":{loc:{start:{line:822,column:37},end:{line:827,column:24}},type:"binary-expr",locations:[{start:{line:822,column:37},end:{line:827,column:19}},{start:{line:827,column:23},end:{line:827,column:24}}],line:822},"40":{loc:{start:{line:834,column:43},end:{line:838,column:23}},type:"cond-expr",locations:[{start:{line:835,column:22},end:{line:837,column:21}},{start:{line:838,column:22},end:{line:838,column:23}}],line:834},"41":{loc:{start:{line:840,column:37},end:{line:844,column:38}},type:"cond-expr",locations:[{start:{line:841,column:22},end:{line:843,column:21}},{start:{line:844,column:22},end:{line:844,column:38}}],line:840},"42":{loc:{start:{line:846,column:18},end:{line:854,column:19}},type:"if",locations:[{start:{line:846,column:18},end:{line:854,column:19}},{start:{line:852,column:25},end:{line:854,column:19}}],line:846},"43":{loc:{start:{line:934,column:18},end:{line:946,column:19}},type:"if",locations:[{start:{line:934,column:18},end:{line:946,column:19}},{start:{line:944,column:25},end:{line:946,column:19}}],line:934},"44":{loc:{start:{line:965,column:18},end:{line:967,column:19}},type:"if",locations:[{start:{line:965,column:18},end:{line:967,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:965},"45":{loc:{start:{line:1042,column:40},end:{line:1046,column:19}},type:"cond-expr",locations:[{start:{line:1043,column:18},end:{line:1045,column:17}},{start:{line:1046,column:18},end:{line:1046,column:19}}],line:1042},"46":{loc:{start:{line:1047,column:14},end:{line:1055,column:15}},type:"if",locations:[{start:{line:1047,column:14},end:{line:1055,column:15}},{start:{line:1053,column:21},end:{line:1055,column:15}}],line:1047},"47":{loc:{start:{line:1091,column:14},end:{line:1093,column:15}},type:"if",locations:[{start:{line:1091,column:14},end:{line:1093,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1091},"48":{loc:{start:{line:1157,column:41},end:{line:1161,column:21}},type:"cond-expr",locations:[{start:{line:1158,column:20},end:{line:1160,column:19}},{start:{line:1161,column:20},end:{line:1161,column:21}}],line:1157},"49":{loc:{start:{line:1163,column:31},end:{line:1165,column:36}},type:"cond-expr",locations:[{start:{line:1164,column:20},end:{line:1164,column:47}},{start:{line:1165,column:20},end:{line:1165,column:36}}],line:1163},"50":{loc:{start:{line:1180,column:45},end:{line:1182,column:21}},type:"cond-expr",locations:[{start:{line:1181,column:20},end:{line:1181,column:60}},{start:{line:1182,column:20},end:{line:1182,column:21}}],line:1180},"51":{loc:{start:{line:1184,column:16},end:{line:1196,column:17}},type:"if",locations:[{start:{line:1184,column:16},end:{line:1196,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1184},"52":{loc:{start:{line:1241,column:20},end:{line:1243,column:43}},type:"cond-expr",locations:[{start:{line:1242,column:24},end:{line:1242,column:43}},{start:{line:1243,column:24},end:{line:1243,column:43}}],line:1241},"53":{loc:{start:{line:1267,column:33},end:{line:1269,column:43}},type:"cond-expr",locations:[{start:{line:1268,column:28},end:{line:1268,column:53}},{start:{line:1269,column:28},end:{line:1269,column:43}}],line:1267},"54":{loc:{start:{line:1270,column:31},end:{line:1272,column:31}},type:"cond-expr",locations:[{start:{line:1271,column:28},end:{line:1271,column:69}},{start:{line:1272,column:28},end:{line:1272,column:31}}],line:1270},"55":{loc:{start:{line:1297,column:16},end:{line:1299,column:17}},type:"if",locations:[{start:{line:1297,column:16},end:{line:1299,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1297},"56":{loc:{start:{line:1382,column:16},end:{line:1390,column:20}},type:"cond-expr",locations:[{start:{line:1383,column:20},end:{line:1383,column:22}},{start:{line:1384,column:20},end:{line:1390,column:20}}],line:1382},"57":{loc:{start:{line:1382,column:16},end:{line:1382,column:55}},type:"binary-expr",locations:[{start:{line:1382,column:16},end:{line:1382,column:33}},{start:{line:1382,column:37},end:{line:1382,column:55}}],line:1382},"58":{loc:{start:{line:1435,column:22},end:{line:1450,column:23}},type:"if",locations:[{start:{line:1435,column:22},end:{line:1450,column:23}},{start:{line:1444,column:29},end:{line:1450,column:23}}],line:1435},"59":{loc:{start:{line:1436,column:24},end:{line:1437,column:57}},type:"binary-expr",locations:[{start:{line:1436,column:24},end:{line:1436,column:56}},{start:{line:1437,column:24},end:{line:1437,column:57}}],line:1436},"60":{loc:{start:{line:1482,column:4},end:{line:1492,column:5}},type:"if",locations:[{start:{line:1482,column:4},end:{line:1492,column:5}},{start:{line:1484,column:11},end:{line:1492,column:5}}],line:1482},"61":{loc:{start:{line:1482,column:8},end:{line:1482,column:30}},type:"binary-expr",locations:[{start:{line:1482,column:8},end:{line:1482,column:21}},{start:{line:1482,column:25},end:{line:1482,column:30}}],line:1482}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},b:{"0":[0,0,0,0,0,0,0,0,0,0,0],"1":[0,0,0,0,0,0,0,0,0,0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e61d43f3b6d304e22e7f56e62b21176a27a1bd27"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_24tv8o6xo1=function(){return actualCoverage;};}return actualCoverage;}cov_24tv8o6xo1();import{$e,$$e}from'../utils/templateUtils.js';import{jml,toStringTag}from'../vendor-imports.js';import dialogs from'../utils/dialogs.js';const dataViewMethods=(/** @type {const} */cov_24tv8o6xo1().s[0]++,['setInt8','setUint8','setInt16','setUint16','setInt32','setUint32','setFloat32','setFloat64','setBigInt64','setBigUint64']);const typedArrays=(/** @type {const} */cov_24tv8o6xo1().s[1]++,['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']);/**
 * @param {TypedArray} typedArray
 * @returns {{min: number, max: number}}
 */cov_24tv8o6xo1().s[2]++;const getMinMaxForTypedArray=typedArray=>{cov_24tv8o6xo1().f[0]++;cov_24tv8o6xo1().s[3]++;switch(typedArray){case'Int8Array':cov_24tv8o6xo1().b[0][0]++;cov_24tv8o6xo1().s[4]++;return{min:-128,max:127};case'Uint8Array':cov_24tv8o6xo1().b[0][1]++;cov_24tv8o6xo1().s[5]++;return{min:0,max:255};case'Uint8ClampedArray':cov_24tv8o6xo1().b[0][2]++;cov_24tv8o6xo1().s[6]++;return{min:0,max:255};case'Int16Array':cov_24tv8o6xo1().b[0][3]++;cov_24tv8o6xo1().s[7]++;return{min:-32768,max:32767};case'Uint16Array':cov_24tv8o6xo1().b[0][4]++;cov_24tv8o6xo1().s[8]++;return{min:0,max:65535};case'Int32Array':cov_24tv8o6xo1().b[0][5]++;cov_24tv8o6xo1().s[9]++;return{min:-2147483648,max:2147483647};case'Uint32Array':cov_24tv8o6xo1().b[0][6]++;cov_24tv8o6xo1().s[10]++;return{min:0,max:4294967295};case'Float32Array':cov_24tv8o6xo1().b[0][7]++;cov_24tv8o6xo1().s[11]++;return{min:-3.4e38,max:3.4e38};case'Float64Array':cov_24tv8o6xo1().b[0][8]++;cov_24tv8o6xo1().s[12]++;// eslint-disable-next-line no-loss-of-precision -- Inevitable?
return{min:-1.8e308,max:1.8e308};case'BigInt64Array':cov_24tv8o6xo1().b[0][9]++;cov_24tv8o6xo1().s[13]++;return{min:-(2**63),max:2**63-1};case'BigUint64Array':cov_24tv8o6xo1().b[0][10]++;cov_24tv8o6xo1().s[14]++;return{min:0,max:2**64-1};/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected typed array type');}};/**
 * @typedef {"Int8Array"|"Uint8Array"|"Uint8ClampedArray"|
 *   "Int16Array"|"Uint16Array"|"Int32Array"|"Uint32Array"|
 *   "Float32Array"|"Float64Array"|"BigInt64Array"|
 *   "BigUint64Array"} TypedArray
 */ /**
 * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|
 *   Int16Array|Uint16Array|Int32Array|Uint32Array|
*   Float32Array|Float64Array|BigInt64Array|
*   BigUint64Array} TypedArrayInstance
 */ /**
 * @param {TypedArray} prop
 * @returns {Int8ArrayConstructor|Uint8ArrayConstructor|
 *   Uint8ClampedArrayConstructor|Int16ArrayConstructor|
 *   Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|
 *   Float32ArrayConstructor|Float64ArrayConstructor|
 *   BigInt64ArrayConstructor|BigUint64ArrayConstructor}
 */cov_24tv8o6xo1().s[15]++;const getTypedArray=prop=>{cov_24tv8o6xo1().f[1]++;cov_24tv8o6xo1().s[16]++;switch(prop){case'Int8Array':cov_24tv8o6xo1().b[1][0]++;cov_24tv8o6xo1().s[17]++;return Int8Array;case'Uint8Array':cov_24tv8o6xo1().b[1][1]++;cov_24tv8o6xo1().s[18]++;return Uint8Array;case'Uint8ClampedArray':cov_24tv8o6xo1().b[1][2]++;cov_24tv8o6xo1().s[19]++;return Uint8ClampedArray;case'Int16Array':cov_24tv8o6xo1().b[1][3]++;cov_24tv8o6xo1().s[20]++;return Int16Array;case'Uint16Array':cov_24tv8o6xo1().b[1][4]++;cov_24tv8o6xo1().s[21]++;return Uint16Array;case'Int32Array':cov_24tv8o6xo1().b[1][5]++;cov_24tv8o6xo1().s[22]++;return Int32Array;case'Uint32Array':cov_24tv8o6xo1().b[1][6]++;cov_24tv8o6xo1().s[23]++;return Uint32Array;case'Float32Array':cov_24tv8o6xo1().b[1][7]++;cov_24tv8o6xo1().s[24]++;return Float32Array;case'Float64Array':cov_24tv8o6xo1().b[1][8]++;cov_24tv8o6xo1().s[25]++;return Float64Array;case'BigInt64Array':cov_24tv8o6xo1().b[1][9]++;cov_24tv8o6xo1().s[26]++;return BigInt64Array;case'BigUint64Array':cov_24tv8o6xo1().b[1][10]++;cov_24tv8o6xo1().s[27]++;return BigUint64Array;/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected type');}};let idx=(cov_24tv8o6xo1().s[28]++,0);/**
 * @type {import('../types.js').SuperTypeObject}
 */const buffersourceType=(cov_24tv8o6xo1().s[29]++,{option:['Buffer source (ArrayBuffer, DataView, TypedArrays)'],childTypes:['arraybuffer','dataview','int8array','uint8array','uint8clampedarray','int16array','uint16array','int32array','uint32array','float32array','float64array','bigint64array','biguint64array'],stringRegex:/^(?<bufferSourceClass>ArrayBuffer|DataView|(?:Int8|Uint8|Uint8Clamped|Int16|Uint16|Int32|Uint32|Float32|Float64|BigInt64|BigUint64)Array)\((?<innerContent>.*)\)$/u,toValue(s,rootInfo){cov_24tv8o6xo1().f[2]++;const{groups:{bufferSourceClass/* istanbul ignore next -- Should always be found */}=(cov_24tv8o6xo1().b[2][0]++,{})}=(/** @type {RegExpMatchArray} */ /** @type {import('../types.js').RootInfo} */cov_24tv8o6xo1().s[30]++,rootInfo.match);const o=(cov_24tv8o6xo1().s[31]++,JSON.parse(s));const{byteLength,maxByteLength,byteOffset,dataViewByteOffset,dataViewByteLength,length}=(cov_24tv8o6xo1().s[32]++,o);// @ts-expect-error Ok
const buffer=(cov_24tv8o6xo1().s[33]++,new ArrayBuffer(byteLength,{maxByteLength}));let typedArray,TypedArray;cov_24tv8o6xo1().s[34]++;if((cov_24tv8o6xo1().b[4][0]++,bufferSourceClass.endsWith('Array'))||(cov_24tv8o6xo1().b[4][1]++,'typedArray'in o)){cov_24tv8o6xo1().b[3][0]++;cov_24tv8o6xo1().s[35]++;TypedArray=getTypedArray(/** @type {TypedArray} */(cov_24tv8o6xo1().b[5][0]++,o.typedArray)??(cov_24tv8o6xo1().b[5][1]++,bufferSourceClass));cov_24tv8o6xo1().s[36]++;typedArray=new TypedArray(buffer,byteOffset,length);cov_24tv8o6xo1().s[37]++;if('set'in o){cov_24tv8o6xo1().b[6][0]++;cov_24tv8o6xo1().s[38]++;o.set[0].forEach(/**
           * @param {string} s
           * @param {number} i
           * @returns {void}
           */(s,i)=>{cov_24tv8o6xo1().f[3]++;cov_24tv8o6xo1().s[39]++;if(typeof s==='string'){cov_24tv8o6xo1().b[7][0]++;cov_24tv8o6xo1().s[40]++;o.set[0][i]=BigInt(s);}else{cov_24tv8o6xo1().b[7][1]++;}});cov_24tv8o6xo1().s[41]++;typedArray.set(...(/**
           * @type {[
           *   array: Array<bigint> & Array<number>,
           *   offset?: number | undefined
           * ]}
           */o.set));}else{cov_24tv8o6xo1().b[6][1]++;}}else{cov_24tv8o6xo1().b[3][1]++;}/** @type {DataView|undefined} */let view;cov_24tv8o6xo1().s[42]++;if((cov_24tv8o6xo1().b[9][0]++,bufferSourceClass==='DataView')||(cov_24tv8o6xo1().b[9][1]++,dataViewMethods.some(method=>{cov_24tv8o6xo1().f[4]++;cov_24tv8o6xo1().s[43]++;return method in o;}))){cov_24tv8o6xo1().b[8][0]++;cov_24tv8o6xo1().s[44]++;view=new DataView(buffer,dataViewByteOffset,dataViewByteLength);cov_24tv8o6xo1().s[45]++;dataViewMethods.forEach(prop=>{cov_24tv8o6xo1().f[5]++;cov_24tv8o6xo1().s[46]++;o[prop]?.forEach(/**
           * @type {(info: [
           *   byteOffset: number,
           *   value: bigint|number,
           *   littleEndian?: boolean|undefined
           * ]) => void}
           */vals=>{cov_24tv8o6xo1().f[6]++;cov_24tv8o6xo1().s[47]++;if(typeof vals[1]==='string'){cov_24tv8o6xo1().b[10][0]++;cov_24tv8o6xo1().s[48]++;vals[1]=BigInt(vals[1]);}else{cov_24tv8o6xo1().b[10][1]++;}// @ts-expect-error It's ok
cov_24tv8o6xo1().s[49]++;view[prop](...vals);});});}else{cov_24tv8o6xo1().b[8][1]++;}cov_24tv8o6xo1().s[50]++;return{value:bufferSourceClass==='ArrayBuffer'?(cov_24tv8o6xo1().b[11][0]++,buffer):(cov_24tv8o6xo1().b[11][1]++,bufferSourceClass==='DataView'?(cov_24tv8o6xo1().b[12][0]++,view):(cov_24tv8o6xo1().b[12][1]++,typedArray))};},getInput({root}){cov_24tv8o6xo1().f[7]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[51]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[52]++;return byteLength;},setValue({root,value}){cov_24tv8o6xo1().f[8]++;const stringTag=(cov_24tv8o6xo1().s[53]++,toStringTag(value));cov_24tv8o6xo1().s[54]++;if((cov_24tv8o6xo1().b[14][0]++,stringTag==='ArrayBuffer')||(cov_24tv8o6xo1().b[14][1]++,stringTag==='DataView')){cov_24tv8o6xo1().b[13][0]++;cov_24tv8o6xo1().s[55]++;$e(root,`[value=${stringTag}].buffersource-returnType`)?.click();}else{cov_24tv8o6xo1().b[13][1]++;cov_24tv8o6xo1().s[56]++;$e(root,`[value=TypedArray].buffersource-returnType`)?.click();const typedArrays=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[57]++,$e(root,'.buffersource-typedArrays'));cov_24tv8o6xo1().s[58]++;typedArrays.value=stringTag;cov_24tv8o6xo1().s[59]++;typedArrays.dispatchEvent(new Event('change'));}const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[60]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[61]++;byteLength.$value=value;const buffer=(cov_24tv8o6xo1().s[62]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[15][0]++,value):(cov_24tv8o6xo1().b[15][1]++,value.buffer));cov_24tv8o6xo1().s[63]++;byteLength.value=buffer.byteLength;cov_24tv8o6xo1().s[64]++;byteLength.dispatchEvent(new Event('change'));const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[65]++,$e(root,'.maxByteLength'));cov_24tv8o6xo1().s[66]++;maxByteLength.value=buffer.maxByteLength;cov_24tv8o6xo1().s[67]++;maxByteLength.dispatchEvent(new Event('change'));cov_24tv8o6xo1().s[68]++;if(stringTag==='DataView'){cov_24tv8o6xo1().b[16][0]++;const dataViewByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[69]++,$e(root,'.dataViewByteLength'));cov_24tv8o6xo1().s[70]++;dataViewByteLength.value=value.byteLength;cov_24tv8o6xo1().s[71]++;dataViewByteLength.dispatchEvent(new Event('change'));const dataViewByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[72]++,$e(root,'.dataViewByteOffset'));cov_24tv8o6xo1().s[73]++;dataViewByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[74]++;dataViewByteOffset.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[16][1]++;cov_24tv8o6xo1().s[75]++;if(stringTag!=='ArrayBuffer'){cov_24tv8o6xo1().b[17][0]++;// TypedArray
const typedArrayByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[76]++,$e(root,'.typedArrayByteOffset'));cov_24tv8o6xo1().s[77]++;typedArrayByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[78]++;typedArrayByteOffset.dispatchEvent(new Event('change'));const typedArrayLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[79]++,$e(root,'.typedArrayLength'));cov_24tv8o6xo1().s[80]++;typedArrayLength.value=value.length;cov_24tv8o6xo1().s[81]++;typedArrayLength.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[17][1]++;}}},getValue({root}){cov_24tv8o6xo1().f[9]++;cov_24tv8o6xo1().s[82]++;return/** @type {HTMLInputElement & {$value: BufferSource}} */this.getInput({root}).$value;},viewUI({value,specificSchemaObject}){cov_24tv8o6xo1().f[10]++;const stringTag=(cov_24tv8o6xo1().s[83]++,toStringTag(value));const buffer=(cov_24tv8o6xo1().s[84]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[18][0]++,value):(cov_24tv8o6xo1().b[18][1]++,value.buffer));cov_24tv8o6xo1().s[85]++;return['div',{dataset:{type:'buffersource'}},[['b',{class:'emphasis',title:specificSchemaObject?.description?(cov_24tv8o6xo1().b[19][0]++,`(a ${stringTag})`):(cov_24tv8o6xo1().b[19][1]++,undefined)},[(cov_24tv8o6xo1().b[20][0]++,specificSchemaObject?.description)??(cov_24tv8o6xo1().b[20][1]++,stringTag)]],['br'],['b',['Buffer byte length: ']],buffer.byteLength,['br'],['b',['Buffer max byte length: ']],buffer.maxByteLength,...(stringTag==='DataView'?(cov_24tv8o6xo1().b[21][0]++,[['br'],['b',['Data View byte length: ']],value.byteLength,['br'],['b',['Data View byte offset: ']],value.byteOffset]):(cov_24tv8o6xo1().b[21][1]++,[''])),...((cov_24tv8o6xo1().b[23][0]++,stringTag!=='DataView')&&(cov_24tv8o6xo1().b[23][1]++,stringTag!=='ArrayBuffer')// TypedArray
?(cov_24tv8o6xo1().b[22][0]++,[['br'],['b',['Typed Array byte offset: ']],value.byteOffset,['br'],['b',['Typed Array length: ']],value.length]):(cov_24tv8o6xo1().b[22][1]++,[''])),['br'],['button',{class:'buffersource-viewData',$on:{async click(e){cov_24tv8o6xo1().f[11]++;cov_24tv8o6xo1().s[86]++;e.preventDefault();const dialog=(cov_24tv8o6xo1().s[87]++,await dialogs.makeCancelDialog({// @ts-expect-error TS bug
children:(/** @type {import('jamilih').JamilihChildren} */[['select',{class:'buffersource-typedArrays-view','aria-label':'Typed Arrays',$on:{change(){cov_24tv8o6xo1().f[12]++;const typedArrayVal=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[88]++,this.value);const TypedArray=(cov_24tv8o6xo1().s[89]++,getTypedArray(/** @type {TypedArray} */typedArrayVal));const typedArray=(cov_24tv8o6xo1().s[90]++,new TypedArray(buffer));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[91]++,$e(/** @type {HTMLElement} */this.parentElement,'.typedArrayArea'));cov_24tv8o6xo1().s[92]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[93]++;typedArrayArea.append(...Array.from({length:typedArray.length},(_v,key)=>{cov_24tv8o6xo1().f[13]++;cov_24tv8o6xo1().s[94]++;return jml('span',[['b',[key]],' ',['span',[typedArray[key]?(cov_24tv8o6xo1().b[24][0]++,String(typedArray[key])):(cov_24tv8o6xo1().b[24][1]++,'0')]],' ']);}));}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[14]++;cov_24tv8o6xo1().s[95]++;return['option',{selected:stringTag===typedArray?(cov_24tv8o6xo1().b[25][0]++,true):(cov_24tv8o6xo1().b[25][1]++,undefined)},[typedArray]];})],['div',{class:'typedArrayArea'}]])}));/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[96]++;$e(dialog,'.buffersource-typedArrays-view').dispatchEvent(new Event('change'));// Todo: We could also add `DataView` get methods here
//        (and length/byte offset for the typed array) if
//        there is a demand
}}},['View data']]]];},editUI({typeNamespace,value}){cov_24tv8o6xo1().f[15]++;cov_24tv8o6xo1().s[97]++;idx++;/**
     * @typedef {() => void} BuildInstances
     */const div=(cov_24tv8o6xo1().s[98]++,jml('div',{dataset:{type:'buffersource'}},[['fieldset',{class:'returnType',$on:{change(){cov_24tv8o6xo1().f[16]++;cov_24tv8o6xo1().s[99]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.$buildInstances();}},$custom:{/** @type {BuildInstances} */$buildInstances(){cov_24tv8o6xo1().f[17]++;const that=(/**
            * @type {HTMLFieldSetElement & {
            *   $buildInstances: BuildInstances
            * }}
            */cov_24tv8o6xo1().s[100]++,this);const ancestor=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[101]++,that.parentElement);const{value}=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[102]++,$e(that,`[name=${typeNamespace}-buffersource-returnType-${idx}]`+`:checked`));const byteLength=(/**
               * @type {HTMLInputElement & {
               *   $value: BufferSource,
               *   $dataView: DataView,
               *   $typedArray: TypedArrayInstance
               * }}
               */cov_24tv8o6xo1().s[103]++,$e(ancestor,'.byteLength'));const byteLengthVal=(cov_24tv8o6xo1().s[104]++,Number.parseInt(byteLength.value));const maxByteLength=(cov_24tv8o6xo1().s[105]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.maxByteLength').value));const buffer=(cov_24tv8o6xo1().s[106]++,new ArrayBuffer(// @ts-expect-error New ArrayBuffer argument
byteLengthVal,maxByteLength?(cov_24tv8o6xo1().b[26][0]++,{maxByteLength}):(cov_24tv8o6xo1().b[26][1]++,undefined)));const dataViewByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[107]++,$e(ancestor,'.dataViewByteOffset').value);const dataViewByteOffset=(cov_24tv8o6xo1().s[108]++,dataViewByteOffsetVal?(cov_24tv8o6xo1().b[27][0]++,Number.parseInt(dataViewByteOffsetVal)):(cov_24tv8o6xo1().b[27][1]++,0));const dataViewByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[109]++,$e(ancestor,'.dataViewByteLength').value);const dataViewByteLength=(cov_24tv8o6xo1().s[110]++,dataViewByteLengthVal?(cov_24tv8o6xo1().b[28][0]++,Number.parseInt(dataViewByteLengthVal)):(cov_24tv8o6xo1().b[28][1]++,undefined));const dataView=(cov_24tv8o6xo1().s[111]++,new DataView(buffer,dataViewByteOffset,dataViewByteLength));const{value:typedArrayValue}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[112]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[113]++,getTypedArray(/** @type {TypedArray} */typedArrayValue));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[114]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[115]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[29][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[29][1]++,0));const typedArrayLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[116]++,$e(ancestor,'.typedArrayLength').value);const typedArrayLength=(cov_24tv8o6xo1().s[117]++,typedArrayLengthVal?(cov_24tv8o6xo1().b[30][0]++,Number.parseInt(typedArrayLengthVal)):(cov_24tv8o6xo1().b[30][1]++,byteLengthVal));const typedArray=(cov_24tv8o6xo1().s[118]++,new TypedArray(buffer,typedArrayByteOffset,typedArrayLength));cov_24tv8o6xo1().s[119]++;byteLength.$dataView=dataView;cov_24tv8o6xo1().s[120]++;byteLength.$typedArray=typedArray;const typedArrayValues=(cov_24tv8o6xo1().s[121]++,$$e(ancestor,'.typedArrayArea .typedArrayValue').map(input=>{cov_24tv8o6xo1().f[18]++;cov_24tv8o6xo1().s[122]++;// Don't check dataset, as may be changing to BigInt now
return TypedArray.name.startsWith('Big')?(cov_24tv8o6xo1().b[31][0]++,BigInt(/** @type {HTMLInputElement} */input.value)):(cov_24tv8o6xo1().b[31][1]++,Number(/** @type {HTMLInputElement} */input.value));}));// @ts-expect-error Ok
cov_24tv8o6xo1().s[123]++;byteLength.$typedArray.set(typedArrayValues,0);cov_24tv8o6xo1().s[124]++;switch(value){case'ArrayBuffer':cov_24tv8o6xo1().b[32][0]++;cov_24tv8o6xo1().s[125]++;byteLength.$value=buffer;cov_24tv8o6xo1().s[126]++;break;case'DataView':cov_24tv8o6xo1().b[32][1]++;{cov_24tv8o6xo1().s[127]++;byteLength.$value=dataView;cov_24tv8o6xo1().s[128]++;break;}default:cov_24tv8o6xo1().b[32][2]++;cov_24tv8o6xo1().s[129]++;// 'TypedArray'
byteLength.$value=typedArray;cov_24tv8o6xo1().s[130]++;break;}}}},[['legend',['Return type']],['label',{$on:{click(){cov_24tv8o6xo1().f[19]++;cov_24tv8o6xo1().s[131]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[132]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType '+'buffersource-returnType-arraybuffer',name:`${typeNamespace}-buffersource-returnType-${idx}`,checked:true,value:'ArrayBuffer'// checked: toStringTag(value) !== ''
}],'ArrayBuffer']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[20]++;cov_24tv8o6xo1().s[133]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[134]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-dataview',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'DataView'// checked: toStringTag(value) !== ''
}],'DataView']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[21]++;cov_24tv8o6xo1().s[135]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=false;/** @type {HTMLElement} */cov_24tv8o6xo1().s[136]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=true;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-typedarray',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'TypedArray'// checked: toStringTag(value) !== ''
}],'Typed Array']],' ',['select',{hidden:true,class:'buffersource-typedArrays','aria-label':'Typed Arrays',$on:{change(e){cov_24tv8o6xo1().f[22]++;const that=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[137]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[138]++,that.parentElement?.parentElement);const select=(/**
                 * @type {HTMLSelectElement & {
                 *   $setMinsAndMaxes: SetMinsAndMaxes,
                 *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                 * }}
                 */cov_24tv8o6xo1().s[139]++,$e(ancestor,'.buffersource-typedArrays-init'));// Update to reflect current state changes if later revealing
cov_24tv8o6xo1().s[140]++;select.value=/** @type {HTMLSelectElement} */this.value;const typedArrayLength=(/**
                 * @type {HTMLInputElement & {
                 *   $checkBufferBounds: CheckBufferBounds
                 * }}
                 */cov_24tv8o6xo1().s[141]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[142]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[33][0]++;cov_24tv8o6xo1().s[143]++;return;}else{cov_24tv8o6xo1().b[33][1]++;}cov_24tv8o6xo1().s[144]++;select.$setMinsAndMaxes(/** @type {TypedArray} */ /** @type {HTMLSelectElement} */this.value);cov_24tv8o6xo1().s[145]++;select.$checkTypedArrayByteLength(e);const typedArrayByteOffset=(cov_24tv8o6xo1().s[146]++,$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[147]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[23]++;cov_24tv8o6xo1().s[148]++;return['option',[typedArray]];})]]],['fieldset',{$on:{change(){cov_24tv8o6xo1().f[24]++;cov_24tv8o6xo1().s[149]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.previousElementSibling.$buildInstances();}}},[['legend',['Construction options']],['fieldset',[['legend',['ArrayBuffer']],['label',['Byte length ',['input',{class:'byteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{$value:(cov_24tv8o6xo1().b[34][0]++,value)??(cov_24tv8o6xo1().b[34][1]++,new ArrayBuffer(0))},$on:{change(e){cov_24tv8o6xo1().f[25]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[150]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[151]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[152]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[153]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[35][0]++;cov_24tv8o6xo1().s[154]++;return;}else{cov_24tv8o6xo1().b[35][1]++;}const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[155]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.maxByteLength'));const val=(cov_24tv8o6xo1().s[156]++,that.value);cov_24tv8o6xo1().s[157]++;if(Number.parseInt(val)>Number.MAX_SAFE_INTEGER){cov_24tv8o6xo1().b[36][0]++;cov_24tv8o6xo1().s[158]++;that.setCustomValidity('The ArrayBuffer length exceeds the maximum '+'allowable size');cov_24tv8o6xo1().s[159]++;e.stopPropagation();cov_24tv8o6xo1().s[160]++;that.reportValidity();cov_24tv8o6xo1().s[161]++;return;}else{cov_24tv8o6xo1().b[36][1]++;}cov_24tv8o6xo1().s[162]++;that.setCustomValidity('');cov_24tv8o6xo1().s[163]++;that.reportValidity();cov_24tv8o6xo1().s[164]++;if(Number.parseInt(val)>Number.parseInt(maxByteLength.value)){cov_24tv8o6xo1().b[37][0]++;cov_24tv8o6xo1().s[165]++;maxByteLength.value=val;}else{cov_24tv8o6xo1().b[37][1]++;}const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[166]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[167]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);/**
                   * @type {HTMLSelectElement & {
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */cov_24tv8o6xo1().s[168]++;$e(/** @type {HTMLElement} */greatGrandparent.parentElement,'.buffersource-typedArrays-init').$checkTypedArrayByteLength(e);}}}]]],' ',['label',['Max byte length ',['input',{class:'maxByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[26]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[169]++,this);const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[170]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const val=(cov_24tv8o6xo1().s[171]++,that.value);cov_24tv8o6xo1().s[172]++;if(Number.parseInt(val)<Number.parseInt(byteLength.value)){cov_24tv8o6xo1().b[38][0]++;cov_24tv8o6xo1().s[173]++;// byteLength.value = val;
that.setCustomValidity('The max value cannot be less than the byte length');cov_24tv8o6xo1().s[174]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[38][1]++;cov_24tv8o6xo1().s[175]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[176]++;that.reportValidity();}}}]]]]],['fieldset',[['legend',['DataView']],['label',['Byte length ',['input',{class:'dataViewByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
                 * @typedef {(e: Event) => void} CheckDataViewByteLength
                 */ /** @type {CheckDataViewByteLength} */$checkDataViewByteLength(e){cov_24tv8o6xo1().f[27]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkDataViewByteLength: CheckDataViewByteLength
                  * }}
                  */cov_24tv8o6xo1().s[177]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[178]++,that.parentElement?.parentElement?.parentElement);const byteOffset=(cov_24tv8o6xo1().s[179]++,(cov_24tv8o6xo1().b[39][0]++,Number.parseInt(/** @type {HTMLInputElement} */$e(greatGrandparent,'.dataViewByteOffset').value))||(cov_24tv8o6xo1().b[39][1]++,0));const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[180]++,$e(greatGrandparent,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[181]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[40][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[40][1]++,0));const byteLength=(cov_24tv8o6xo1().s[182]++,that.value?(cov_24tv8o6xo1().b[41][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[41][1]++,bufferByteLength));cov_24tv8o6xo1().s[183]++;if(byteOffset+byteLength>bufferByteLength){cov_24tv8o6xo1().b[42][0]++;cov_24tv8o6xo1().s[184]++;that.setCustomValidity('The DataView byte length and offset exceed '+'the buffer\'s byte length');cov_24tv8o6xo1().s[185]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[42][1]++;cov_24tv8o6xo1().s[186]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[187]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[28]++;cov_24tv8o6xo1().s[188]++;/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */this.$checkDataViewByteLength(e);}}}]]],' ',['label',['Byte offset ',['input',{class:'dataViewByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[29]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[189]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[190]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[191]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);}}}]]]]],['fieldset',[['legend',['Typed array']],['label',['Byte offset ',['input',{class:'typedArrayByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,max:2**53-1,$custom:{/**
                 * @typedef {(e: Event) => void} CheckByteOffsetMultiple
                 */ /** @type {CheckByteOffsetMultiple} */$checkByteOffsetMultiple(e){cov_24tv8o6xo1().f[30]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                  * }}
                  */cov_24tv8o6xo1().s[192]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[193]++,that.parentElement?.parentElement?.parentElement?.parentElement);const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[194]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[195]++,getTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[196]++;if(Number.parseInt(that.value)%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[43][0]++;cov_24tv8o6xo1().s[197]++;that.setCustomValidity('Byte offset must be a multiple of the typed '+`array's bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[198]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[43][1]++;cov_24tv8o6xo1().s[199]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[200]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[31]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[201]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[202]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[203]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[204]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[44][0]++;cov_24tv8o6xo1().s[205]++;return;}else{cov_24tv8o6xo1().b[44][1]++;}/**
                   * @type {HTMLInputElement & {
                   *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                   * }}
                   */cov_24tv8o6xo1().s[206]++;this.$checkByteOffsetMultiple(e);}}}]]]// ' ',
// ['label', [
//   'Length ',
//   ['input', {
//     class: 'typedArrayLength',
//     type: 'number', step: '1', size: '4', pattern: '\\d+',
//     min: 0
//   }]
// ]]
]]]],['fieldset',[['legend',['Typed Array initialization (optional)']],['select',{class:'buffersource-typedArrays-init','aria-label':'Typed Arrays',$custom:{/**
             * @callback SetMinsAndMaxes
             * @param {TypedArray} typedArray
             * @returns {void}
             */ /** @type {SetMinsAndMaxes} */$setMinsAndMaxes(typedArray){cov_24tv8o6xo1().f[32]++;const{min,max}=(cov_24tv8o6xo1().s[207]++,getMinMaxForTypedArray(typedArray));/** @type {HTMLInputElement[]} */cov_24tv8o6xo1().s[208]++;$$e(/** @type {HTMLElement} */ /**
                   * @type {HTMLSelectElement & {
                   *   $setMinsAndMaxes: SetMinsAndMaxes,
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */this.parentElement,'.typedArrayValue').forEach(typedArrayValue=>{cov_24tv8o6xo1().f[33]++;cov_24tv8o6xo1().s[209]++;typedArrayValue.className='typedArrayValue typedArray-'+typedArray;cov_24tv8o6xo1().s[210]++;typedArrayValue.min=String(min);cov_24tv8o6xo1().s[211]++;typedArrayValue.max=String(max);});},/**
             * @typedef {(e: Event) => void} CheckTypedArrayByteLength
             */ /** @type {CheckTypedArrayByteLength} */$checkTypedArrayByteLength(e){cov_24tv8o6xo1().f[34]++;const that=(/**
              * @type {HTMLSelectElement & {
              *   $setMinsAndMaxes: SetMinsAndMaxes,
              *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
              * }}
              */cov_24tv8o6xo1().s[212]++,this);const TypedArray=(cov_24tv8o6xo1().s[213]++,getTypedArray(/** @type {TypedArray} */that.value));const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[214]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const arrayBufferLength=(cov_24tv8o6xo1().s[215]++,byteLength.value?(cov_24tv8o6xo1().b[45][0]++,Number.parseInt(byteLength.value)):(cov_24tv8o6xo1().b[45][1]++,0));cov_24tv8o6xo1().s[216]++;if(arrayBufferLength%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[46][0]++;cov_24tv8o6xo1().s[217]++;byteLength.setCustomValidity('Array buffer must be a multiple of the typed array\'s '+`bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[218]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[46][1]++;cov_24tv8o6xo1().s[219]++;byteLength.setCustomValidity('');}cov_24tv8o6xo1().s[220]++;byteLength.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[35]++;const that=(/**
                * @type {HTMLSelectElement & {
                *   $setMinsAndMaxes: SetMinsAndMaxes,
                *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                * }}
                */cov_24tv8o6xo1().s[221]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[222]++,that.parentElement?.parentElement?.parentElement);// Update to reflect current state changes if later revealing
/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[223]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.buffersource-typedArrays').value=that.value;const typedArrayLength=(/**
               * @type {HTMLInputElement & {
               *   $checkBufferBounds: CheckBufferBounds
               * }}
               */cov_24tv8o6xo1().s[224]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[225]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[47][0]++;cov_24tv8o6xo1().s[226]++;return;}else{cov_24tv8o6xo1().b[47][1]++;}cov_24tv8o6xo1().s[227]++;that.$checkTypedArrayByteLength(e);cov_24tv8o6xo1().s[228]++;that.$setMinsAndMaxes(/** @type {TypedArray} */that.value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[229]++,$e(/** @type {HTMLElement} */that?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[230]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);/**
               * @type {HTMLFieldSetElement & {
               *   $buildInstances: BuildInstances
               * }}
               */cov_24tv8o6xo1().s[231]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.returnType').$buildInstances();}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[36]++;cov_24tv8o6xo1().s[232]++;return['option',[typedArray]];})],' ',['label',['Array length: ',['input',{class:'typedArrayLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
               * When creating a view from a buffer, the bounds are outside
               * the buffer. In other words, `byteOffset + length *
               * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength`.
               * @typedef {(e: Event) => boolean} CheckBufferBounds
               */ /** @type {CheckBufferBounds} */$checkBufferBounds(e){cov_24tv8o6xo1().f[37]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[233]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[234]++,that.parentElement?.parentElement?.parentElement);const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[235]++,$e(ancestor,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[236]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[48][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[48][1]++,0));const length=(cov_24tv8o6xo1().s[237]++,that.value?(cov_24tv8o6xo1().b[49][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[49][1]++,bufferByteLength));const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[238]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[239]++,getTypedArray(/** @type {TypedArray} */value));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[240]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[241]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[50][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[50][1]++,0));cov_24tv8o6xo1().s[242]++;if(typedArrayByteOffset+length*TypedArray.BYTES_PER_ELEMENT>bufferByteLength){cov_24tv8o6xo1().b[51][0]++;cov_24tv8o6xo1().s[243]++;that.setCustomValidity('The byte offset and the length times bytes per element '+'is greater than the buffer length');cov_24tv8o6xo1().s[244]++;e.stopPropagation();cov_24tv8o6xo1().s[245]++;that.reportValidity();cov_24tv8o6xo1().s[246]++;return false;}else{cov_24tv8o6xo1().b[51][1]++;}cov_24tv8o6xo1().s[247]++;that.setCustomValidity('');cov_24tv8o6xo1().s[248]++;that.reportValidity();cov_24tv8o6xo1().s[249]++;return true;},/**
               * @typedef {() => void} BuildTypedArray
               */ /** @type {BuildTypedArray} */$buildTypedArray(){cov_24tv8o6xo1().f[38]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[250]++,this);const length=(cov_24tv8o6xo1().s[251]++,Number.parseInt(that.value));const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[252]++,that.parentElement?.parentElement);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[253]++,that.parentElement?.parentElement?.parentElement);const bufferByteLength=(/**
                   * @type {HTMLInputElement & {
                   *   $typedArray: TypedArrayInstance
                   * }}
                   */cov_24tv8o6xo1().s[254]++,$e(ancestor,'.byteLength'));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[255]++,$e(grandparent,'.typedArrayArea'));cov_24tv8o6xo1().s[256]++;typedArrayArea.addEventListener('change',e=>{cov_24tv8o6xo1().f[39]++;const input=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[257]++,e.target);cov_24tv8o6xo1().s[258]++;bufferByteLength.$typedArray.set([// @ts-expect-error Ok
input.dataset.bigint==='true'?(cov_24tv8o6xo1().b[52][0]++,BigInt(input.value)):(cov_24tv8o6xo1().b[52][1]++,Number(input.value))],Number.parseInt(/** @type {string} */input.dataset.key));});const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[259]++,$e(grandparent,'.buffersource-typedArrays-init'));const{min,max}=(cov_24tv8o6xo1().s[260]++,getMinMaxForTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[261]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[262]++;typedArrayArea.append(...Array.from({length},(_v,key)=>{cov_24tv8o6xo1().f[40]++;cov_24tv8o6xo1().s[263]++;return jml('label',[key,' ',['input',{class:'typedArrayValue typedArray-'+value,dataset:{key,bigint:String(value.startsWith('BigInt'))},type:'number',step:'1',pattern:value.startsWith('Float')?(cov_24tv8o6xo1().b[53][0]++,String.raw`\d+(?:\.\d+)?`):(cov_24tv8o6xo1().b[53][1]++,String.raw`\d+`),value:bufferByteLength.$typedArray[key]?(cov_24tv8o6xo1().b[54][0]++,String(bufferByteLength.$typedArray[key])):(cov_24tv8o6xo1().b[54][1]++,'0'),min,max}],' '// !key || key % 9 ? ' ' : ['br']
]);}));}},$on:{change(e){cov_24tv8o6xo1().f[41]++;const that=(/**
                   * @type {HTMLInputElement & {
                   *   $checkBufferBounds: CheckBufferBounds,
                   *   $buildTypedArray: BuildTypedArray
                   * }}
                   */cov_24tv8o6xo1().s[264]++,this);const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[265]++,this.parentElement?.parentElement);cov_24tv8o6xo1().s[266]++;if(!that.$checkBufferBounds(e)){cov_24tv8o6xo1().b[55][0]++;cov_24tv8o6xo1().s[267]++;return;}else{cov_24tv8o6xo1().b[55][1]++;}const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[268]++,$e(grandparent,'.buffersource-typedArrays-init'));const length=(cov_24tv8o6xo1().s[269]++,Number.parseInt(that.value));cov_24tv8o6xo1().s[270]++;try{const TypedArray=(cov_24tv8o6xo1().s[271]++,getTypedArray(/** @type {TypedArray} */value));// eslint-disable-next-line no-new -- Testing
cov_24tv8o6xo1().s[272]++;new TypedArray(length);}catch{cov_24tv8o6xo1().s[273]++;that.setCustomValidity('Typed Array length is too long');cov_24tv8o6xo1().s[274]++;e.stopPropagation();cov_24tv8o6xo1().s[275]++;that.reportValidity();cov_24tv8o6xo1().s[276]++;return;}cov_24tv8o6xo1().s[277]++;that.setCustomValidity('');cov_24tv8o6xo1().s[278]++;that.reportValidity();/**
                 * @type {HTMLFieldSetElement & {
                 *   $buildInstances: BuildInstances
                 * }}
                 */cov_24tv8o6xo1().s[279]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement?.parentElement,'.returnType').$buildInstances();cov_24tv8o6xo1().s[280]++;that.$buildTypedArray();}}}],['div',{class:'typedArrayArea'}]]]]],['fieldset',[['legend',['DataView initialization (optional)']],['select',{class:'dataViewMethod','aria-label':'Data View methods',$on:{change(){cov_24tv8o6xo1().f[42]++;const dataViewArea=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[281]++,$e(/** @type {HTMLElement} */this.parentElement,'.dataViewArea'));const val=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[282]++,this.value);const typedArray=(/** @type {TypedArray} */cov_24tv8o6xo1().s[283]++,val.slice(3)+'Array');cov_24tv8o6xo1().s[284]++;dataViewArea.textContent='';cov_24tv8o6xo1().s[285]++;dataViewArea.append(jml('label',['Byte offset ',['input',{type:'number',class:'dataViewSetByteOffset',step:'1',size:'4',pattern:String.raw`\d+`}]]),' ',jml('label',['Value ',['input',{type:'number',step:'1',size:'4',pattern:String.raw`\d+`,class:'typedArrayValue typedArray-'+typedArray,...getMinMaxForTypedArray(typedArray)}]]),(cov_24tv8o6xo1().b[57][0]++,val==='setInt8')||(cov_24tv8o6xo1().b[57][1]++,val==='setUint8')?(cov_24tv8o6xo1().b[56][0]++,''):(cov_24tv8o6xo1().b[56][1]++,jml('label',[['input',{class:'littleEndian',type:'checkbox'}],'Little endian'])),' ',jml('button',{$on:{click(e){cov_24tv8o6xo1().f[43]++;cov_24tv8o6xo1().s[286]++;e.preventDefault();const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[287]++,this.parentElement);const dataViewMethod=(/** @type {dataViewMethods[number]} */ /** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[288]++,ancestor.previousElementSibling?.value);const dataViewSetByteOffset=(cov_24tv8o6xo1().s[289]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.dataViewSetByteOffset').value));const typedArrayValue=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[290]++,$e(ancestor,'.typedArrayValue').value);const littleEndian=(/** @type {HTMLInputElement|null} */cov_24tv8o6xo1().s[291]++,$e(ancestor,'.littleEndian')?.checked);const byteLength=(/**
                         * @type {HTMLInputElement & {
                         *   $dataView: DataView,
                         * }}
                         */cov_24tv8o6xo1().s[292]++,$e(/** @type {HTMLElement} */ancestor?.parentElement?.parentElement,'.byteLength'));cov_24tv8o6xo1().s[293]++;if((cov_24tv8o6xo1().b[59][0]++,dataViewMethod==='setBigInt64')||(cov_24tv8o6xo1().b[59][1]++,dataViewMethod==='setBigUint64')){cov_24tv8o6xo1().b[58][0]++;cov_24tv8o6xo1().s[294]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,BigInt(typedArrayValue),littleEndian);}else{cov_24tv8o6xo1().b[58][1]++;cov_24tv8o6xo1().s[295]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,Number(typedArrayValue),littleEndian);}const typedArrayLength=(/**
                         * @type {HTMLInputElement & {
                         *   $buildTypedArray: BuildTypedArray
                         * }}
                         */cov_24tv8o6xo1().s[296]++,$e(/** @type {HTMLElement} */ancestor.parentElement?.parentElement,'.typedArrayLength'));cov_24tv8o6xo1().s[297]++;typedArrayLength.$buildTypedArray();}}},['Set']));}}},[['option',{value:''},['(Select a data view method)']],...dataViewMethods.map(dataViewMethod=>{cov_24tv8o6xo1().f[44]++;cov_24tv8o6xo1().s[298]++;return/** @type {import('jamilih').JamilihArray} */['option',[dataViewMethod]];})]],' ',['div',{class:'dataViewArea'}]]]]));cov_24tv8o6xo1().s[299]++;if((cov_24tv8o6xo1().b[61][0]++,this.setValue)&&(cov_24tv8o6xo1().b[61][1]++,value)){cov_24tv8o6xo1().b[60][0]++;cov_24tv8o6xo1().s[300]++;this.setValue({root:div,value});}else{cov_24tv8o6xo1().b[60][1]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[301]++,$e(div,'.byteLength'));cov_24tv8o6xo1().s[302]++;byteLength.$value=new ArrayBuffer(0);}cov_24tv8o6xo1().s[303]++;return[div];}});export default buffersourceType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjR0djhvNnhvMSIsImFjdHVhbENvdmVyYWdlIiwiJGUiLCIkJGUiLCJqbWwiLCJ0b1N0cmluZ1RhZyIsImRpYWxvZ3MiLCJkYXRhVmlld01ldGhvZHMiLCJzIiwidHlwZWRBcnJheXMiLCJnZXRNaW5NYXhGb3JUeXBlZEFycmF5IiwidHlwZWRBcnJheSIsImYiLCJiIiwibWluIiwibWF4IiwiRXJyb3IiLCJnZXRUeXBlZEFycmF5IiwicHJvcCIsIkludDhBcnJheSIsIlVpbnQ4QXJyYXkiLCJVaW50OENsYW1wZWRBcnJheSIsIkludDE2QXJyYXkiLCJVaW50MTZBcnJheSIsIkludDMyQXJyYXkiLCJVaW50MzJBcnJheSIsIkZsb2F0MzJBcnJheSIsIkZsb2F0NjRBcnJheSIsIkJpZ0ludDY0QXJyYXkiLCJCaWdVaW50NjRBcnJheSIsImlkeCIsImJ1ZmZlcnNvdXJjZVR5cGUiLCJvcHRpb24iLCJjaGlsZFR5cGVzIiwic3RyaW5nUmVnZXgiLCJ0b1ZhbHVlIiwicm9vdEluZm8iLCJncm91cHMiLCJidWZmZXJTb3VyY2VDbGFzcyIsIm1hdGNoIiwibyIsIkpTT04iLCJwYXJzZSIsImJ5dGVMZW5ndGgiLCJtYXhCeXRlTGVuZ3RoIiwiYnl0ZU9mZnNldCIsImRhdGFWaWV3Qnl0ZU9mZnNldCIsImRhdGFWaWV3Qnl0ZUxlbmd0aCIsImxlbmd0aCIsImJ1ZmZlciIsIkFycmF5QnVmZmVyIiwiVHlwZWRBcnJheSIsImVuZHNXaXRoIiwic2V0IiwiZm9yRWFjaCIsImkiLCJCaWdJbnQiLCJ2aWV3Iiwic29tZSIsIm1ldGhvZCIsIkRhdGFWaWV3IiwidmFscyIsInZhbHVlIiwiZ2V0SW5wdXQiLCJyb290Iiwic2V0VmFsdWUiLCJzdHJpbmdUYWciLCJjbGljayIsImRpc3BhdGNoRXZlbnQiLCJFdmVudCIsIiR2YWx1ZSIsInR5cGVkQXJyYXlCeXRlT2Zmc2V0IiwidHlwZWRBcnJheUxlbmd0aCIsImdldFZhbHVlIiwidmlld1VJIiwic3BlY2lmaWNTY2hlbWFPYmplY3QiLCJkYXRhc2V0IiwidHlwZSIsImNsYXNzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInVuZGVmaW5lZCIsIiRvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImRpYWxvZyIsIm1ha2VDYW5jZWxEaWFsb2ciLCJjaGlsZHJlbiIsImNoYW5nZSIsInR5cGVkQXJyYXlWYWwiLCJ0eXBlZEFycmF5QXJlYSIsInBhcmVudEVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImFwcGVuZCIsIkFycmF5IiwiZnJvbSIsIl92Iiwia2V5IiwiU3RyaW5nIiwibWFwIiwic2VsZWN0ZWQiLCJlZGl0VUkiLCJ0eXBlTmFtZXNwYWNlIiwiZGl2IiwiJGJ1aWxkSW5zdGFuY2VzIiwiJGN1c3RvbSIsInRoYXQiLCJhbmNlc3RvciIsImJ5dGVMZW5ndGhWYWwiLCJOdW1iZXIiLCJwYXJzZUludCIsImRhdGFWaWV3Qnl0ZU9mZnNldFZhbCIsImRhdGFWaWV3Qnl0ZUxlbmd0aFZhbCIsImRhdGFWaWV3IiwidHlwZWRBcnJheVZhbHVlIiwidHlwZWRBcnJheUJ5dGVPZmZzZXRWYWwiLCJ0eXBlZEFycmF5TGVuZ3RoVmFsIiwiJGRhdGFWaWV3IiwiJHR5cGVkQXJyYXkiLCJ0eXBlZEFycmF5VmFsdWVzIiwiaW5wdXQiLCJuYW1lIiwic3RhcnRzV2l0aCIsImhpZGRlbiIsImNoZWNrZWQiLCJzZWxlY3QiLCIkY2hlY2tCdWZmZXJCb3VuZHMiLCIkc2V0TWluc0FuZE1heGVzIiwiJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGgiLCIkY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGUiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwic3RlcCIsInNpemUiLCJwYXR0ZXJuIiwicmF3IiwidmFsIiwiTUFYX1NBRkVfSU5URUdFUiIsInNldEN1c3RvbVZhbGlkaXR5Iiwic3RvcFByb3BhZ2F0aW9uIiwicmVwb3J0VmFsaWRpdHkiLCJncmVhdEdyYW5kcGFyZW50IiwiJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoIiwiYnVmZmVyQnl0ZUxlbmd0aFZhbCIsImJ1ZmZlckJ5dGVMZW5ndGgiLCJCWVRFU19QRVJfRUxFTUVOVCIsImNsYXNzTmFtZSIsImFycmF5QnVmZmVyTGVuZ3RoIiwiJGJ1aWxkVHlwZWRBcnJheSIsImdyYW5kcGFyZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInRhcmdldCIsImJpZ2ludCIsImRhdGFWaWV3QXJlYSIsInNsaWNlIiwiZGF0YVZpZXdNZXRob2QiLCJkYXRhVmlld1NldEJ5dGVPZmZzZXQiLCJsaXR0bGVFbmRpYW4iXSwic291cmNlcyI6WyJidWZmZXJzb3VyY2VUeXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7JGUsICQkZX0gZnJvbSAnLi4vdXRpbHMvdGVtcGxhdGVVdGlscy5qcyc7XG5pbXBvcnQge2ptbCwgdG9TdHJpbmdUYWd9IGZyb20gJy4uL3ZlbmRvci1pbXBvcnRzLmpzJztcbmltcG9ydCBkaWFsb2dzIGZyb20gJy4uL3V0aWxzL2RpYWxvZ3MuanMnO1xuXG5jb25zdCBkYXRhVmlld01ldGhvZHMgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoW1xuICAnc2V0SW50OCcsXG4gICdzZXRVaW50OCcsXG4gICdzZXRJbnQxNicsXG4gICdzZXRVaW50MTYnLFxuICAnc2V0SW50MzInLFxuICAnc2V0VWludDMyJyxcbiAgJ3NldEZsb2F0MzInLFxuICAnc2V0RmxvYXQ2NCcsXG4gICdzZXRCaWdJbnQ2NCcsXG4gICdzZXRCaWdVaW50NjQnXG5dKTtcblxuY29uc3QgdHlwZWRBcnJheXMgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoW1xuICAnSW50OEFycmF5JywgJ1VpbnQ4QXJyYXknLCAnVWludDhDbGFtcGVkQXJyYXknLCAnSW50MTZBcnJheScsXG4gICdVaW50MTZBcnJheScsICdJbnQzMkFycmF5JywgJ1VpbnQzMkFycmF5JywgJ0Zsb2F0MzJBcnJheScsXG4gICdGbG9hdDY0QXJyYXknLCAnQmlnSW50NjRBcnJheScsICdCaWdVaW50NjRBcnJheSdcbl0pO1xuXG4vKipcbiAqIEBwYXJhbSB7VHlwZWRBcnJheX0gdHlwZWRBcnJheVxuICogQHJldHVybnMge3ttaW46IG51bWJlciwgbWF4OiBudW1iZXJ9fVxuICovXG5jb25zdCBnZXRNaW5NYXhGb3JUeXBlZEFycmF5ID0gKHR5cGVkQXJyYXkpID0+IHtcbiAgc3dpdGNoICh0eXBlZEFycmF5KSB7XG4gIGNhc2UgJ0ludDhBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IC0xMjgsIG1heDogMTI3fTtcbiAgY2FzZSAnVWludDhBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IDAsIG1heDogMjU1fTtcbiAgY2FzZSAnVWludDhDbGFtcGVkQXJyYXknOlxuICAgIHJldHVybiB7bWluOiAwLCBtYXg6IDI1NX07XG4gIGNhc2UgJ0ludDE2QXJyYXknOlxuICAgIHJldHVybiB7bWluOiAtMzI3NjgsIG1heDogMzI3Njd9O1xuICBjYXNlICdVaW50MTZBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IDAsIG1heDogNjU1MzV9O1xuICBjYXNlICdJbnQzMkFycmF5JzpcbiAgICByZXR1cm4ge21pbjogLTIxNDc0ODM2NDgsIG1heDogMjE0NzQ4MzY0N307XG4gIGNhc2UgJ1VpbnQzMkFycmF5JzpcbiAgICByZXR1cm4ge21pbjogMCwgbWF4OiA0Mjk0OTY3Mjk1fTtcbiAgY2FzZSAnRmxvYXQzMkFycmF5JzpcbiAgICByZXR1cm4ge21pbjogLTMuNGUzOCwgbWF4OiAzLjRlMzh9O1xuICBjYXNlICdGbG9hdDY0QXJyYXknOlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb3NzLW9mLXByZWNpc2lvbiAtLSBJbmV2aXRhYmxlP1xuICAgIHJldHVybiB7bWluOiAtMS44ZTMwOCwgbWF4OiAxLjhlMzA4fTtcbiAgY2FzZSAnQmlnSW50NjRBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IC0oMiAqKiA2MyksIG1heDogKDIgKiogNjMpIC0gMX07XG4gIGNhc2UgJ0JpZ1VpbnQ2NEFycmF5JzpcbiAgICByZXR1cm4ge21pbjogMCwgbWF4OiAoMiAqKiA2NCkgLSAxfTtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgLS0gR3VhcmQgKi9cbiAgZGVmYXVsdDpcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAtLSBHdWFyZCAqL1xuICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCB0eXBlZCBhcnJheSB0eXBlJyk7XG4gIH1cbn07XG5cbi8qKlxuICogQHR5cGVkZWYge1wiSW50OEFycmF5XCJ8XCJVaW50OEFycmF5XCJ8XCJVaW50OENsYW1wZWRBcnJheVwifFxuICogICBcIkludDE2QXJyYXlcInxcIlVpbnQxNkFycmF5XCJ8XCJJbnQzMkFycmF5XCJ8XCJVaW50MzJBcnJheVwifFxuICogICBcIkZsb2F0MzJBcnJheVwifFwiRmxvYXQ2NEFycmF5XCJ8XCJCaWdJbnQ2NEFycmF5XCJ8XG4gKiAgIFwiQmlnVWludDY0QXJyYXlcIn0gVHlwZWRBcnJheVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge0ludDhBcnJheXxVaW50OEFycmF5fFVpbnQ4Q2xhbXBlZEFycmF5fFxuICogICBJbnQxNkFycmF5fFVpbnQxNkFycmF5fEludDMyQXJyYXl8VWludDMyQXJyYXl8XG4qICAgRmxvYXQzMkFycmF5fEZsb2F0NjRBcnJheXxCaWdJbnQ2NEFycmF5fFxuKiAgIEJpZ1VpbnQ2NEFycmF5fSBUeXBlZEFycmF5SW5zdGFuY2VcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VHlwZWRBcnJheX0gcHJvcFxuICogQHJldHVybnMge0ludDhBcnJheUNvbnN0cnVjdG9yfFVpbnQ4QXJyYXlDb25zdHJ1Y3RvcnxcbiAqICAgVWludDhDbGFtcGVkQXJyYXlDb25zdHJ1Y3RvcnxJbnQxNkFycmF5Q29uc3RydWN0b3J8XG4gKiAgIFVpbnQxNkFycmF5Q29uc3RydWN0b3J8SW50MzJBcnJheUNvbnN0cnVjdG9yfFVpbnQzMkFycmF5Q29uc3RydWN0b3J8XG4gKiAgIEZsb2F0MzJBcnJheUNvbnN0cnVjdG9yfEZsb2F0NjRBcnJheUNvbnN0cnVjdG9yfFxuICogICBCaWdJbnQ2NEFycmF5Q29uc3RydWN0b3J8QmlnVWludDY0QXJyYXlDb25zdHJ1Y3Rvcn1cbiAqL1xuY29uc3QgZ2V0VHlwZWRBcnJheSA9IChwcm9wKSA9PiB7XG4gIHN3aXRjaCAocHJvcCkge1xuICBjYXNlICdJbnQ4QXJyYXknOlxuICAgIHJldHVybiBJbnQ4QXJyYXk7XG4gIGNhc2UgJ1VpbnQ4QXJyYXknOlxuICAgIHJldHVybiBVaW50OEFycmF5O1xuICBjYXNlICdVaW50OENsYW1wZWRBcnJheSc6XG4gICAgcmV0dXJuIFVpbnQ4Q2xhbXBlZEFycmF5O1xuICBjYXNlICdJbnQxNkFycmF5JzpcbiAgICByZXR1cm4gSW50MTZBcnJheTtcbiAgY2FzZSAnVWludDE2QXJyYXknOlxuICAgIHJldHVybiBVaW50MTZBcnJheTtcbiAgY2FzZSAnSW50MzJBcnJheSc6XG4gICAgcmV0dXJuIEludDMyQXJyYXk7XG4gIGNhc2UgJ1VpbnQzMkFycmF5JzpcbiAgICByZXR1cm4gVWludDMyQXJyYXk7XG4gIGNhc2UgJ0Zsb2F0MzJBcnJheSc6XG4gICAgcmV0dXJuIEZsb2F0MzJBcnJheTtcbiAgY2FzZSAnRmxvYXQ2NEFycmF5JzpcbiAgICByZXR1cm4gRmxvYXQ2NEFycmF5O1xuICBjYXNlICdCaWdJbnQ2NEFycmF5JzpcbiAgICByZXR1cm4gQmlnSW50NjRBcnJheTtcbiAgY2FzZSAnQmlnVWludDY0QXJyYXknOlxuICAgIHJldHVybiBCaWdVaW50NjRBcnJheTtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgLS0gR3VhcmQgKi9cbiAgZGVmYXVsdDpcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAtLSBHdWFyZCAqL1xuICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCB0eXBlJyk7XG4gIH1cbn07XG5cbmxldCBpZHggPSAwO1xuXG4vKipcbiAqIEB0eXBlIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3VwZXJUeXBlT2JqZWN0fVxuICovXG5jb25zdCBidWZmZXJzb3VyY2VUeXBlID0ge1xuICBvcHRpb246IFsnQnVmZmVyIHNvdXJjZSAoQXJyYXlCdWZmZXIsIERhdGFWaWV3LCBUeXBlZEFycmF5cyknXSxcbiAgY2hpbGRUeXBlczogW1xuICAgICdhcnJheWJ1ZmZlcicsXG4gICAgJ2RhdGF2aWV3JyxcbiAgICAnaW50OGFycmF5JywgJ3VpbnQ4YXJyYXknLCAndWludDhjbGFtcGVkYXJyYXknLCAnaW50MTZhcnJheScsXG4gICAgJ3VpbnQxNmFycmF5JywgJ2ludDMyYXJyYXknLCAndWludDMyYXJyYXknLCAnZmxvYXQzMmFycmF5JyxcbiAgICAnZmxvYXQ2NGFycmF5JywgJ2JpZ2ludDY0YXJyYXknLCAnYmlndWludDY0YXJyYXknXG4gIF0sXG4gIHN0cmluZ1JlZ2V4OiAvXig/PGJ1ZmZlclNvdXJjZUNsYXNzPkFycmF5QnVmZmVyfERhdGFWaWV3fCg/OkludDh8VWludDh8VWludDhDbGFtcGVkfEludDE2fFVpbnQxNnxJbnQzMnxVaW50MzJ8RmxvYXQzMnxGbG9hdDY0fEJpZ0ludDY0fEJpZ1VpbnQ2NClBcnJheSlcXCgoPzxpbm5lckNvbnRlbnQ+LiopXFwpJC91LFxuICB0b1ZhbHVlIChzLCByb290SW5mbykge1xuICAgIGNvbnN0IHtncm91cHM6IHtcbiAgICAgIGJ1ZmZlclNvdXJjZUNsYXNzXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgLS0gU2hvdWxkIGFsd2F5cyBiZSBmb3VuZCAqL1xuICAgIH0gPSB7fX0gPSAvKiogQHR5cGUge1JlZ0V4cE1hdGNoQXJyYXl9ICovIChcbiAgICAgIC8qKiBAdHlwZSB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlJvb3RJbmZvfSAqLyAocm9vdEluZm8pLm1hdGNoXG4gICAgKTtcblxuICAgIGNvbnN0IG8gPSBKU09OLnBhcnNlKHMpO1xuICAgIGNvbnN0IHtcbiAgICAgIGJ5dGVMZW5ndGgsIG1heEJ5dGVMZW5ndGgsIGJ5dGVPZmZzZXQsXG4gICAgICBkYXRhVmlld0J5dGVPZmZzZXQsXG4gICAgICBkYXRhVmlld0J5dGVMZW5ndGgsIGxlbmd0aFxuICAgIH0gPSBvO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgT2tcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoYnl0ZUxlbmd0aCwge21heEJ5dGVMZW5ndGh9KTtcblxuICAgIGxldCB0eXBlZEFycmF5LCBUeXBlZEFycmF5O1xuICAgIGlmIChidWZmZXJTb3VyY2VDbGFzcy5lbmRzV2l0aCgnQXJyYXknKSB8fCAndHlwZWRBcnJheScgaW4gbykge1xuICAgICAgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKG8udHlwZWRBcnJheSA/PyBidWZmZXJTb3VyY2VDbGFzcylcbiAgICAgICk7XG5cbiAgICAgIHR5cGVkQXJyYXkgPSBuZXcgVHlwZWRBcnJheShidWZmZXIsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG5cbiAgICAgIGlmICgnc2V0JyBpbiBvKSB7XG4gICAgICAgIG8uc2V0WzBdLmZvckVhY2goXG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNcbiAgICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gaVxuICAgICAgICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAgICAgICAqL1xuICAgICAgICAgIChzLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIG8uc2V0WzBdW2ldID0gQmlnSW50KHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgdHlwZWRBcnJheS5zZXQoLi4uKFxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIEB0eXBlIHtbXG4gICAgICAgICAgICogICBhcnJheTogQXJyYXk8YmlnaW50PiAmIEFycmF5PG51bWJlcj4sXG4gICAgICAgICAgICogICBvZmZzZXQ/OiBudW1iZXIgfCB1bmRlZmluZWRcbiAgICAgICAgICAgKiBdfVxuICAgICAgICAgICAqLyAoby5zZXQpKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEB0eXBlIHtEYXRhVmlld3x1bmRlZmluZWR9ICovXG4gICAgbGV0IHZpZXc7XG4gICAgaWYgKGJ1ZmZlclNvdXJjZUNsYXNzID09PSAnRGF0YVZpZXcnIHx8IGRhdGFWaWV3TWV0aG9kcy5zb21lKChtZXRob2QpID0+IHtcbiAgICAgIHJldHVybiBtZXRob2QgaW4gbztcbiAgICB9KSkge1xuICAgICAgdmlldyA9IG5ldyBEYXRhVmlldyhidWZmZXIsIGRhdGFWaWV3Qnl0ZU9mZnNldCwgZGF0YVZpZXdCeXRlTGVuZ3RoKTtcbiAgICAgIGRhdGFWaWV3TWV0aG9kcy5mb3JFYWNoKChwcm9wKSA9PiB7XG4gICAgICAgIG9bcHJvcF0/LmZvckVhY2goXG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogQHR5cGUgeyhpbmZvOiBbXG4gICAgICAgICAgICogICBieXRlT2Zmc2V0OiBudW1iZXIsXG4gICAgICAgICAgICogICB2YWx1ZTogYmlnaW50fG51bWJlcixcbiAgICAgICAgICAgKiAgIGxpdHRsZUVuZGlhbj86IGJvb2xlYW58dW5kZWZpbmVkXG4gICAgICAgICAgICogXSkgPT4gdm9pZH1cbiAgICAgICAgICAgKi9cbiAgICAgICAgICAodmFscykgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWxzWzFdID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICB2YWxzWzFdID0gQmlnSW50KHZhbHNbMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBJdCdzIG9rXG4gICAgICAgICAgICB2aWV3W3Byb3BdKC4uLnZhbHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IGJ1ZmZlclNvdXJjZUNsYXNzID09PSAnQXJyYXlCdWZmZXInXG4gICAgICAgID8gYnVmZmVyXG4gICAgICAgIDogYnVmZmVyU291cmNlQ2xhc3MgPT09ICdEYXRhVmlldydcbiAgICAgICAgICA/IHZpZXdcbiAgICAgICAgICA6IHR5cGVkQXJyYXlcbiAgICB9O1xuICB9LFxuICBnZXRJbnB1dCAoe3Jvb3R9KSB7XG4gICAgY29uc3QgYnl0ZUxlbmd0aCA9XG4gICAgICAvKipcbiAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICogICAkdmFsdWU6IEJ1ZmZlclNvdXJjZVxuICAgICAgICogfX1cbiAgICAgICAqLyAoJGUocm9vdCwgJy5ieXRlTGVuZ3RoJykpO1xuICAgIHJldHVybiBieXRlTGVuZ3RoO1xuICB9LFxuICBzZXRWYWx1ZSAoe3Jvb3QsIHZhbHVlfSkge1xuICAgIGNvbnN0IHN0cmluZ1RhZyA9IHRvU3RyaW5nVGFnKHZhbHVlKTtcbiAgICBpZiAoc3RyaW5nVGFnID09PSAnQXJyYXlCdWZmZXInIHx8IHN0cmluZ1RhZyA9PT0gJ0RhdGFWaWV3Jykge1xuICAgICAgJGUocm9vdCwgYFt2YWx1ZT0ke3N0cmluZ1RhZ31dLmJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlYCk/LmNsaWNrKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICRlKHJvb3QsIGBbdmFsdWU9VHlwZWRBcnJheV0uYnVmZmVyc291cmNlLXJldHVyblR5cGVgKT8uY2xpY2soKTtcbiAgICAgIGNvbnN0IHR5cGVkQXJyYXlzID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAkZShyb290LCAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cycpXG4gICAgICApO1xuICAgICAgdHlwZWRBcnJheXMudmFsdWUgPSBzdHJpbmdUYWc7XG4gICAgICB0eXBlZEFycmF5cy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuICAgIH1cblxuICAgIGNvbnN0IGJ5dGVMZW5ndGggPVxuICAgICAgLyoqXG4gICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAqICAgJHZhbHVlOiBCdWZmZXJTb3VyY2VcbiAgICAgICAqIH19XG4gICAgICAgKi8gKCRlKHJvb3QsICcuYnl0ZUxlbmd0aCcpKTtcblxuICAgIGJ5dGVMZW5ndGguJHZhbHVlID0gdmFsdWU7XG5cbiAgICBjb25zdCBidWZmZXIgPSBzdHJpbmdUYWcgPT09ICdBcnJheUJ1ZmZlcicgPyB2YWx1ZSA6IHZhbHVlLmJ1ZmZlcjtcbiAgICBieXRlTGVuZ3RoLnZhbHVlID0gYnVmZmVyLmJ5dGVMZW5ndGg7XG4gICAgYnl0ZUxlbmd0aC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuXG4gICAgY29uc3QgbWF4Qnl0ZUxlbmd0aCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKFxuICAgICAgJGUocm9vdCwgJy5tYXhCeXRlTGVuZ3RoJylcbiAgICApO1xuICAgIG1heEJ5dGVMZW5ndGgudmFsdWUgPSBidWZmZXIubWF4Qnl0ZUxlbmd0aDtcbiAgICBtYXhCeXRlTGVuZ3RoLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG5cbiAgICBpZiAoc3RyaW5nVGFnID09PSAnRGF0YVZpZXcnKSB7XG4gICAgICBjb25zdCBkYXRhVmlld0J5dGVMZW5ndGggPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgJGUocm9vdCwgJy5kYXRhVmlld0J5dGVMZW5ndGgnKVxuICAgICAgKTtcbiAgICAgIGRhdGFWaWV3Qnl0ZUxlbmd0aC52YWx1ZSA9IHZhbHVlLmJ5dGVMZW5ndGg7XG4gICAgICBkYXRhVmlld0J5dGVMZW5ndGguZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScpKTtcblxuICAgICAgY29uc3QgZGF0YVZpZXdCeXRlT2Zmc2V0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICRlKHJvb3QsICcuZGF0YVZpZXdCeXRlT2Zmc2V0JylcbiAgICAgICk7XG4gICAgICBkYXRhVmlld0J5dGVPZmZzZXQudmFsdWUgPSB2YWx1ZS5ieXRlT2Zmc2V0O1xuICAgICAgZGF0YVZpZXdCeXRlT2Zmc2V0LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG4gICAgfSBlbHNlIGlmIChzdHJpbmdUYWcgIT09ICdBcnJheUJ1ZmZlcicpIHsgLy8gVHlwZWRBcnJheVxuICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXQgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgJGUocm9vdCwgJy50eXBlZEFycmF5Qnl0ZU9mZnNldCcpXG4gICAgICApO1xuICAgICAgdHlwZWRBcnJheUJ5dGVPZmZzZXQudmFsdWUgPSB2YWx1ZS5ieXRlT2Zmc2V0O1xuICAgICAgdHlwZWRBcnJheUJ5dGVPZmZzZXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScpKTtcblxuICAgICAgY29uc3QgdHlwZWRBcnJheUxlbmd0aCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKFxuICAgICAgICAkZShyb290LCAnLnR5cGVkQXJyYXlMZW5ndGgnKVxuICAgICAgKTtcbiAgICAgIHR5cGVkQXJyYXlMZW5ndGgudmFsdWUgPSB2YWx1ZS5sZW5ndGg7XG4gICAgICB0eXBlZEFycmF5TGVuZ3RoLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG4gICAgfVxuICB9LFxuICBnZXRWYWx1ZSAoe3Jvb3R9KSB7XG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHskdmFsdWU6IEJ1ZmZlclNvdXJjZX19ICovIChcbiAgICAgIHRoaXMuZ2V0SW5wdXQoe3Jvb3R9KVxuICAgICkuJHZhbHVlO1xuICB9LFxuICB2aWV3VUkgKHt2YWx1ZSwgc3BlY2lmaWNTY2hlbWFPYmplY3R9KSB7XG4gICAgY29uc3Qgc3RyaW5nVGFnID0gdG9TdHJpbmdUYWcodmFsdWUpO1xuICAgIGNvbnN0IGJ1ZmZlciA9IHN0cmluZ1RhZyA9PT0gJ0FycmF5QnVmZmVyJyA/IHZhbHVlIDogdmFsdWUuYnVmZmVyO1xuXG4gICAgcmV0dXJuIFsnZGl2Jywge2RhdGFzZXQ6IHt0eXBlOiAnYnVmZmVyc291cmNlJ319LCBbXG4gICAgICBbJ2InLCB7XG4gICAgICAgIGNsYXNzOiAnZW1waGFzaXMnLFxuICAgICAgICB0aXRsZTogc3BlY2lmaWNTY2hlbWFPYmplY3Q/LmRlc2NyaXB0aW9uXG4gICAgICAgICAgPyBgKGEgJHtzdHJpbmdUYWd9KWBcbiAgICAgICAgICA6IHVuZGVmaW5lZFxuICAgICAgfSwgW1xuICAgICAgICBzcGVjaWZpY1NjaGVtYU9iamVjdD8uZGVzY3JpcHRpb24gPz8gc3RyaW5nVGFnXG4gICAgICBdXSxcbiAgICAgIFsnYnInXSxcbiAgICAgIFsnYicsIFsnQnVmZmVyIGJ5dGUgbGVuZ3RoOiAnXV0sXG4gICAgICBidWZmZXIuYnl0ZUxlbmd0aCxcbiAgICAgIFsnYnInXSxcbiAgICAgIFsnYicsIFsnQnVmZmVyIG1heCBieXRlIGxlbmd0aDogJ11dLFxuICAgICAgYnVmZmVyLm1heEJ5dGVMZW5ndGgsXG5cbiAgICAgIC4uLnN0cmluZ1RhZyA9PT0gJ0RhdGFWaWV3J1xuICAgICAgICA/IFtcbiAgICAgICAgICBbJ2JyJ10sXG4gICAgICAgICAgWydiJywgWydEYXRhIFZpZXcgYnl0ZSBsZW5ndGg6ICddXSxcbiAgICAgICAgICB2YWx1ZS5ieXRlTGVuZ3RoLFxuICAgICAgICAgIFsnYnInXSxcbiAgICAgICAgICBbJ2InLCBbJ0RhdGEgVmlldyBieXRlIG9mZnNldDogJ11dLFxuICAgICAgICAgIHZhbHVlLmJ5dGVPZmZzZXRcbiAgICAgICAgXVxuICAgICAgICA6IFsnJ10sXG4gICAgICAuLi4oc3RyaW5nVGFnICE9PSAnRGF0YVZpZXcnICYmIHN0cmluZ1RhZyAhPT0gJ0FycmF5QnVmZmVyJykgLy8gVHlwZWRBcnJheVxuICAgICAgICA/IFtcbiAgICAgICAgICBbJ2JyJ10sXG4gICAgICAgICAgWydiJywgWydUeXBlZCBBcnJheSBieXRlIG9mZnNldDogJ11dLFxuICAgICAgICAgIHZhbHVlLmJ5dGVPZmZzZXQsXG4gICAgICAgICAgWydiciddLFxuICAgICAgICAgIFsnYicsIFsnVHlwZWQgQXJyYXkgbGVuZ3RoOiAnXV0sXG4gICAgICAgICAgdmFsdWUubGVuZ3RoXG4gICAgICAgIF1cbiAgICAgICAgOiBbJyddLFxuICAgICAgWydiciddLFxuICAgICAgWydidXR0b24nLCB7XG4gICAgICAgIGNsYXNzOiAnYnVmZmVyc291cmNlLXZpZXdEYXRhJyxcbiAgICAgICAgJG9uOiB7XG4gICAgICAgICAgYXN5bmMgY2xpY2sgKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IGRpYWxvZyA9IGF3YWl0IGRpYWxvZ3MubWFrZUNhbmNlbERpYWxvZyh7XG4gICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVFMgYnVnXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiogQHR5cGUge2ltcG9ydCgnamFtaWxpaCcpLkphbWlsaWhDaGlsZHJlbn0gKi8gKFtcbiAgICAgICAgICAgICAgICBbJ3NlbGVjdCcsIHtcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiAnYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLXZpZXcnLFxuICAgICAgICAgICAgICAgICAgJ2FyaWEtbGFiZWwnOiAnVHlwZWQgQXJyYXlzJyxcbiAgICAgICAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICAgICAgICBjaGFuZ2UgKCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlWYWwgPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzXG4gICAgICAgICAgICAgICAgICAgICAgKS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBUeXBlZEFycmF5ID0gZ2V0VHlwZWRBcnJheShcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHR5cGVkQXJyYXlWYWwpXG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5ID0gbmV3IFR5cGVkQXJyYXkoYnVmZmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5QXJlYSA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICcudHlwZWRBcnJheUFyZWEnXG4gICAgICAgICAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZWRBcnJheUFyZWEudGV4dENvbnRlbnQgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlZEFycmF5QXJlYS5hcHBlbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5BcnJheS5mcm9tKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiB0eXBlZEFycmF5Lmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgKF92LCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGptbCgnc3BhbicsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ2InLCBba2V5XV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsnc3BhbicsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlba2V5XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFN0cmluZyh0eXBlZEFycmF5W2tleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJzAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgdHlwZWRBcnJheXMubWFwKCh0eXBlZEFycmF5KSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gWydvcHRpb24nLCB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBzdHJpbmdUYWcgPT09IHR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICAgICAgICA/IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgfSwgW3R5cGVkQXJyYXldXTtcbiAgICAgICAgICAgICAgICB9KV0sXG4gICAgICAgICAgICAgICAgWydkaXYnLCB7XG4gICAgICAgICAgICAgICAgICBjbGFzczogJ3R5cGVkQXJyYXlBcmVhJ1xuICAgICAgICAgICAgICAgIH1dXG4gICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAkZShkaWFsb2csICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLXZpZXcnKVxuICAgICAgICAgICAgKS5kaXNwYXRjaEV2ZW50KFxuICAgICAgICAgICAgICBuZXcgRXZlbnQoJ2NoYW5nZScpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgLy8gVG9kbzogV2UgY291bGQgYWxzbyBhZGQgYERhdGFWaWV3YCBnZXQgbWV0aG9kcyBoZXJlXG4gICAgICAgICAgICAvLyAgICAgICAgKGFuZCBsZW5ndGgvYnl0ZSBvZmZzZXQgZm9yIHRoZSB0eXBlZCBhcnJheSkgaWZcbiAgICAgICAgICAgIC8vICAgICAgICB0aGVyZSBpcyBhIGRlbWFuZFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgWydWaWV3IGRhdGEnXV1cbiAgICBdXTtcbiAgfSxcbiAgZWRpdFVJICh7dHlwZU5hbWVzcGFjZSwgdmFsdWV9KSB7XG4gICAgaWR4Kys7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZWRlZiB7KCkgPT4gdm9pZH0gQnVpbGRJbnN0YW5jZXNcbiAgICAgKi9cblxuICAgIGNvbnN0IGRpdiA9IGptbCgnZGl2Jywge1xuICAgICAgZGF0YXNldDoge3R5cGU6ICdidWZmZXJzb3VyY2UnfVxuICAgIH0sIFtcbiAgICAgIFsnZmllbGRzZXQnLCB7XG4gICAgICAgIGNsYXNzOiAncmV0dXJuVHlwZScsXG4gICAgICAgICRvbjoge1xuICAgICAgICAgIGNoYW5nZSAoKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MRmllbGRTZXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICogICAkYnVpbGRJbnN0YW5jZXM6IEJ1aWxkSW5zdGFuY2VzXG4gICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICovICh0aGlzKS4kYnVpbGRJbnN0YW5jZXMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICRjdXN0b206IHtcbiAgICAgICAgICAvKiogQHR5cGUge0J1aWxkSW5zdGFuY2VzfSAqL1xuICAgICAgICAgICRidWlsZEluc3RhbmNlcyAoKSB7XG4gICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqXG4gICAgICAgICAgICAqIEB0eXBlIHtIVE1MRmllbGRTZXRFbGVtZW50ICYge1xuICAgICAgICAgICAgKiAgICRidWlsZEluc3RhbmNlczogQnVpbGRJbnN0YW5jZXNcbiAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICovICh0aGlzKTtcbiAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRGl2RWxlbWVudH0gKi8gKHRoYXQucGFyZW50RWxlbWVudCk7XG4gICAgICAgICAgICBjb25zdCB7dmFsdWV9ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgIHRoYXQsIGBbbmFtZT0ke3R5cGVOYW1lc3BhY2V9LWJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLSR7aWR4fV1gICtcbiAgICAgICAgICAgICAgICAgICAgICBgOmNoZWNrZWRgXG4gICAgICAgICAgICApKTtcblxuICAgICAgICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9XG4gICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICogICAkdmFsdWU6IEJ1ZmZlclNvdXJjZSxcbiAgICAgICAgICAgICAgICogICAkZGF0YVZpZXc6IERhdGFWaWV3LFxuICAgICAgICAgICAgICAgKiAgICR0eXBlZEFycmF5OiBUeXBlZEFycmF5SW5zdGFuY2VcbiAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy5ieXRlTGVuZ3RoJylcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVMZW5ndGhWYWwgPSBOdW1iZXIucGFyc2VJbnQoYnl0ZUxlbmd0aC52YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBtYXhCeXRlTGVuZ3RoID0gTnVtYmVyLnBhcnNlSW50KFxuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy5tYXhCeXRlTGVuZ3RoJylcbiAgICAgICAgICAgICAgKS52YWx1ZVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKFxuICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIE5ldyBBcnJheUJ1ZmZlciBhcmd1bWVudFxuICAgICAgICAgICAgICBieXRlTGVuZ3RoVmFsLCBtYXhCeXRlTGVuZ3RoID8ge21heEJ5dGVMZW5ndGh9IDogdW5kZWZpbmVkXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBjb25zdCBkYXRhVmlld0J5dGVPZmZzZXRWYWwgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICcuZGF0YVZpZXdCeXRlT2Zmc2V0J1xuICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICBjb25zdCBkYXRhVmlld0J5dGVPZmZzZXQgPSBkYXRhVmlld0J5dGVPZmZzZXRWYWxcbiAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQoZGF0YVZpZXdCeXRlT2Zmc2V0VmFsKVxuICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgIGNvbnN0IGRhdGFWaWV3Qnl0ZUxlbmd0aFZhbCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICBhbmNlc3RvcixcbiAgICAgICAgICAgICAgJy5kYXRhVmlld0J5dGVMZW5ndGgnXG4gICAgICAgICAgICApKS52YWx1ZTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGFWaWV3Qnl0ZUxlbmd0aCA9IGRhdGFWaWV3Qnl0ZUxlbmd0aFZhbFxuICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludChkYXRhVmlld0J5dGVMZW5ndGhWYWwpXG4gICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgICAgICAgICBjb25zdCBkYXRhVmlldyA9IG5ldyBEYXRhVmlldyhcbiAgICAgICAgICAgICAgYnVmZmVyLCBkYXRhVmlld0J5dGVPZmZzZXQsIGRhdGFWaWV3Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3Qge3ZhbHVlOiB0eXBlZEFycmF5VmFsdWV9ID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCcpXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBjb25zdCBUeXBlZEFycmF5ID0gZ2V0VHlwZWRBcnJheShcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtUeXBlZEFycmF5fSAqLyAodHlwZWRBcnJheVZhbHVlKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlCeXRlT2Zmc2V0VmFsID1cbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgJy50eXBlZEFycmF5Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5Qnl0ZU9mZnNldCA9IHR5cGVkQXJyYXlCeXRlT2Zmc2V0VmFsXG4gICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KHR5cGVkQXJyYXlCeXRlT2Zmc2V0VmFsKVxuICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGhWYWwgPVxuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICBhbmNlc3RvcixcbiAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlMZW5ndGgnXG4gICAgICAgICAgICAgICkpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUxlbmd0aCA9IHR5cGVkQXJyYXlMZW5ndGhWYWxcbiAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQodHlwZWRBcnJheUxlbmd0aFZhbClcbiAgICAgICAgICAgICAgOiBieXRlTGVuZ3RoVmFsO1xuXG4gICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5ID0gbmV3IFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgIGJ1ZmZlciwgdHlwZWRBcnJheUJ5dGVPZmZzZXQsIHR5cGVkQXJyYXlMZW5ndGhcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGJ5dGVMZW5ndGguJGRhdGFWaWV3ID0gZGF0YVZpZXc7XG4gICAgICAgICAgICBieXRlTGVuZ3RoLiR0eXBlZEFycmF5ID0gdHlwZWRBcnJheTtcblxuICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheVZhbHVlcyA9ICQkZShcbiAgICAgICAgICAgICAgYW5jZXN0b3IsICcudHlwZWRBcnJheUFyZWEgLnR5cGVkQXJyYXlWYWx1ZSdcbiAgICAgICAgICAgICkubWFwKChpbnB1dCkgPT4ge1xuICAgICAgICAgICAgICAvLyBEb24ndCBjaGVjayBkYXRhc2V0LCBhcyBtYXkgYmUgY2hhbmdpbmcgdG8gQmlnSW50IG5vd1xuICAgICAgICAgICAgICByZXR1cm4gVHlwZWRBcnJheS5uYW1lLnN0YXJ0c1dpdGgoJ0JpZycpXG4gICAgICAgICAgICAgICAgPyBCaWdJbnQoXG4gICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChpbnB1dCkudmFsdWVcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiBOdW1iZXIoXG4gICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChpbnB1dCkudmFsdWVcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgT2tcbiAgICAgICAgICAgIGJ5dGVMZW5ndGguJHR5cGVkQXJyYXkuc2V0KHR5cGVkQXJyYXlWYWx1ZXMsIDApO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHZhbHVlKSB7XG4gICAgICAgICAgICBjYXNlICdBcnJheUJ1ZmZlcic6XG4gICAgICAgICAgICAgIGJ5dGVMZW5ndGguJHZhbHVlID0gYnVmZmVyO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ0RhdGFWaWV3Jzoge1xuICAgICAgICAgICAgICBieXRlTGVuZ3RoLiR2YWx1ZSA9IGRhdGFWaWV3O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH0gZGVmYXVsdDogLy8gJ1R5cGVkQXJyYXknXG4gICAgICAgICAgICAgIGJ5dGVMZW5ndGguJHZhbHVlID0gdHlwZWRBcnJheTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbXG4gICAgICAgIFsnbGVnZW5kJywgWydSZXR1cm4gdHlwZSddXSxcbiAgICAgICAgWydsYWJlbCcsIHtcbiAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgIGNsaWNrICgpIHtcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICh0aGlzLnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzJ1xuICAgICAgICAgICAgICApKS5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKHRoaXM/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnXG4gICAgICAgICAgICAgICkpLmhpZGRlbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgW1xuICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgY2xhc3M6ICdidWZmZXJzb3VyY2UtcmV0dXJuVHlwZSAnICtcbiAgICAgICAgICAgICAgJ2J1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLWFycmF5YnVmZmVyJyxcbiAgICAgICAgICAgIG5hbWU6IGAke3R5cGVOYW1lc3BhY2V9LWJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLSR7aWR4fWAsXG4gICAgICAgICAgICBjaGVja2VkOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdBcnJheUJ1ZmZlcidcbiAgICAgICAgICAgIC8vIGNoZWNrZWQ6IHRvU3RyaW5nVGFnKHZhbHVlKSAhPT0gJydcbiAgICAgICAgICB9XSxcbiAgICAgICAgICAnQXJyYXlCdWZmZXInXG4gICAgICAgIF1dLFxuICAgICAgICAnICcsXG4gICAgICAgIFsnbGFiZWwnLCB7XG4gICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICBjbGljayAoKSB7XG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAodGhpcy5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cydcbiAgICAgICAgICAgICAgKSkuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICh0aGlzPy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0J1xuICAgICAgICAgICAgICApKS5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIFtcbiAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIGNsYXNzOiAnYnVmZmVyc291cmNlLXJldHVyblR5cGUgYnVmZmVyc291cmNlLXJldHVyblR5cGUtZGF0YXZpZXcnLFxuICAgICAgICAgICAgbmFtZTogYCR7dHlwZU5hbWVzcGFjZX0tYnVmZmVyc291cmNlLXJldHVyblR5cGUtJHtpZHh9YCxcbiAgICAgICAgICAgIHZhbHVlOiAnRGF0YVZpZXcnXG4gICAgICAgICAgICAvLyBjaGVja2VkOiB0b1N0cmluZ1RhZyh2YWx1ZSkgIT09ICcnXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgJ0RhdGFWaWV3J1xuICAgICAgICBdXSxcbiAgICAgICAgJyAnLFxuICAgICAgICBbJ2xhYmVsJywge1xuICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgY2xpY2sgKCkge1xuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKHRoaXMucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMnXG4gICAgICAgICAgICAgICkpLmhpZGRlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKHRoaXM/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnXG4gICAgICAgICAgICAgICkpLmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBbXG4gICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBjbGFzczogJ2J1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlIGJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLXR5cGVkYXJyYXknLFxuICAgICAgICAgICAgbmFtZTogYCR7dHlwZU5hbWVzcGFjZX0tYnVmZmVyc291cmNlLXJldHVyblR5cGUtJHtpZHh9YCxcbiAgICAgICAgICAgIHZhbHVlOiAnVHlwZWRBcnJheSdcbiAgICAgICAgICAgIC8vIGNoZWNrZWQ6IHRvU3RyaW5nVGFnKHZhbHVlKSAhPT0gJydcbiAgICAgICAgICB9XSxcbiAgICAgICAgICAnVHlwZWQgQXJyYXknXG4gICAgICAgIF1dLFxuICAgICAgICAnICcsXG4gICAgICAgIFsnc2VsZWN0Jywge1xuICAgICAgICAgIGhpZGRlbjogdHJ1ZSwgY2xhc3M6ICdidWZmZXJzb3VyY2UtdHlwZWRBcnJheXMnLFxuICAgICAgICAgICdhcmlhLWxhYmVsJzogJ1R5cGVkIEFycmF5cycsXG4gICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICBjaGFuZ2UgKGUpIHtcbiAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovICh0aGlzKTtcbiAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgdGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ID1cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICogICAkc2V0TWluc0FuZE1heGVzOiBTZXRNaW5zQW5kTWF4ZXMsXG4gICAgICAgICAgICAgICAgICogICAkY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aDogQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgKCRlKFxuICAgICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0J1xuICAgICAgICAgICAgICAgICkpO1xuXG4gICAgICAgICAgICAgIC8vIFVwZGF0ZSB0byByZWZsZWN0IGN1cnJlbnQgc3RhdGUgY2hhbmdlcyBpZiBsYXRlciByZXZlYWxpbmdcbiAgICAgICAgICAgICAgc2VsZWN0LnZhbHVlID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKHRoaXMpLnZhbHVlO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPVxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAqICAgJGNoZWNrQnVmZmVyQm91bmRzOiBDaGVja0J1ZmZlckJvdW5kc1xuICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLnR5cGVkQXJyYXlMZW5ndGgnKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIGlmICghdHlwZWRBcnJheUxlbmd0aC4kY2hlY2tCdWZmZXJCb3VuZHMoZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBzZWxlY3QuJHNldE1pbnNBbmRNYXhlcyhcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovXG4gICAgICAgICAgICAgICAgKC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovICh0aGlzKS52YWx1ZSlcbiAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICBzZWxlY3QuJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGgoZSk7XG5cbiAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXQgPSAkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICh0aGlzPy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlCeXRlT2Zmc2V0J1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAqICAgJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlOiBDaGVja0J5dGVPZmZzZXRNdWx0aXBsZVxuICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgKi8gKHR5cGVkQXJyYXlCeXRlT2Zmc2V0KS4kY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGUoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0eXBlZEFycmF5cy5tYXAoKHR5cGVkQXJyYXkpID0+IHtcbiAgICAgICAgICByZXR1cm4gWydvcHRpb24nLCBbdHlwZWRBcnJheV1dO1xuICAgICAgICB9KV1cbiAgICAgIF1dLFxuICAgICAgWydmaWVsZHNldCcsIHtcbiAgICAgICAgJG9uOiB7XG4gICAgICAgICAgY2hhbmdlICgpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHR5cGUge0hUTUxGaWVsZFNldEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgKiAgICRidWlsZEluc3RhbmNlczogQnVpbGRJbnN0YW5jZXNcbiAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgKi8gKHRoaXMucHJldmlvdXNFbGVtZW50U2libGluZykuJGJ1aWxkSW5zdGFuY2VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbXG4gICAgICAgIFsnbGVnZW5kJywgWydDb25zdHJ1Y3Rpb24gb3B0aW9ucyddXSxcbiAgICAgICAgWydmaWVsZHNldCcsIFtcbiAgICAgICAgICBbJ2xlZ2VuZCcsIFsnQXJyYXlCdWZmZXInXV0sXG4gICAgICAgICAgWydsYWJlbCcsIFtcbiAgICAgICAgICAgICdCeXRlIGxlbmd0aCAnLFxuICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgY2xhc3M6ICdieXRlTGVuZ3RoJyxcbiAgICAgICAgICAgICAgdHlwZTogJ251bWJlcicsIHN0ZXA6ICcxJywgc2l6ZTogJzQnLFxuICAgICAgICAgICAgICBwYXR0ZXJuOiBTdHJpbmcucmF3YFxcZCtgLFxuICAgICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICAgICRjdXN0b206IHtcbiAgICAgICAgICAgICAgICAkdmFsdWU6IHZhbHVlID8/IG5ldyBBcnJheUJ1ZmZlcigwKVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgICAgICBjaGFuZ2UgKGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoYXQuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPVxuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgICAqICAgJGNoZWNrQnVmZmVyQm91bmRzOiBDaGVja0J1ZmZlckJvdW5kc1xuICAgICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLnR5cGVkQXJyYXlMZW5ndGgnKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgaWYgKCF0eXBlZEFycmF5TGVuZ3RoLiRjaGVja0J1ZmZlckJvdW5kcyhlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IG1heEJ5dGVMZW5ndGggPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICAgIHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgICApLCAnLm1heEJ5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbCA9IHRoYXQudmFsdWU7XG5cbiAgICAgICAgICAgICAgICAgIGlmIChOdW1iZXIucGFyc2VJbnQodmFsKSA+IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoXG4gICAgICAgICAgICAgICAgICAgICAgJ1RoZSBBcnJheUJ1ZmZlciBsZW5ndGggZXhjZWVkcyB0aGUgbWF4aW11bSAnICtcbiAgICAgICAgICAgICAgICAgICAgICAnYWxsb3dhYmxlIHNpemUnXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgdGhhdC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgICAgICAgICAgICAgICB0aGF0LnJlcG9ydFZhbGlkaXR5KCk7XG5cbiAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgTnVtYmVyLnBhcnNlSW50KHZhbCkgPiBOdW1iZXIucGFyc2VJbnQobWF4Qnl0ZUxlbmd0aC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBtYXhCeXRlTGVuZ3RoLnZhbHVlID0gdmFsO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBjb25zdCBncmVhdEdyYW5kcGFyZW50ID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICAgKHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCk7XG5cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aDogQ2hlY2tEYXRhVmlld0J5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICBncmVhdEdyYW5kcGFyZW50LFxuICAgICAgICAgICAgICAgICAgICAnLmRhdGFWaWV3Qnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICkpLiRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aChlKTtcblxuICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoOiBDaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICAgKGdyZWF0R3JhbmRwYXJlbnQucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnXG4gICAgICAgICAgICAgICAgICApKS4kY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aChlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgXV0sXG4gICAgICAgICAgJyAnLFxuICAgICAgICAgIFsnbGFiZWwnLCBbXG4gICAgICAgICAgICAnTWF4IGJ5dGUgbGVuZ3RoICcsXG4gICAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgICBjbGFzczogJ21heEJ5dGVMZW5ndGgnLFxuICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywgc3RlcDogJzEnLCBzaXplOiAnNCcsXG4gICAgICAgICAgICAgIHBhdHRlcm46IFN0cmluZy5yYXdgXFxkK2AsXG4gICAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAodGhpcyk7XG4gICAgICAgICAgICAgICAgICBjb25zdCBieXRlTGVuZ3RoID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgICB0aGF0LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgKSwgJy5ieXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICAgICAgICBjb25zdCB2YWwgPSB0aGF0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICBOdW1iZXIucGFyc2VJbnQodmFsKSA8IE51bWJlci5wYXJzZUludChieXRlTGVuZ3RoLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGJ5dGVMZW5ndGgudmFsdWUgPSB2YWw7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoXG4gICAgICAgICAgICAgICAgICAgICAgJ1RoZSBtYXggdmFsdWUgY2Fubm90IGJlIGxlc3MgdGhhbiB0aGUgYnl0ZSBsZW5ndGgnXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgXV1cbiAgICAgICAgXV0sXG4gICAgICAgIFsnZmllbGRzZXQnLCBbXG4gICAgICAgICAgWydsZWdlbmQnLCBbJ0RhdGFWaWV3J11dLFxuICAgICAgICAgIFsnbGFiZWwnLCBbXG4gICAgICAgICAgICAnQnl0ZSBsZW5ndGggJyxcbiAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgIGNsYXNzOiAnZGF0YVZpZXdCeXRlTGVuZ3RoJyxcbiAgICAgICAgICAgICAgdHlwZTogJ251bWJlcicsIHN0ZXA6ICcxJywgc2l6ZTogJzQnLFxuICAgICAgICAgICAgICBwYXR0ZXJuOiBTdHJpbmcucmF3YFxcZCtgLFxuICAgICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICAgICRjdXN0b206IHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAdHlwZWRlZiB7KGU6IEV2ZW50KSA9PiB2b2lkfSBDaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtDaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aH0gKi9cbiAgICAgICAgICAgICAgICAkY2hlY2tEYXRhVmlld0J5dGVMZW5ndGggKGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKipcbiAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAqICAgJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoOiBDaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGdyZWF0R3JhbmRwYXJlbnQgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICAgICAodGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KTtcblxuICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZU9mZnNldCA9IE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgICAgZ3JlYXRHcmFuZHBhcmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAnLmRhdGFWaWV3Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICAgICAgICAgKSkudmFsdWVcbiAgICAgICAgICAgICAgICAgICkgfHwgMDtcblxuICAgICAgICAgICAgICAgICAgY29uc3QgYnVmZmVyQnl0ZUxlbmd0aFZhbCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICAkZShcbiAgICAgICAgICAgICAgICAgICAgICBncmVhdEdyYW5kcGFyZW50LFxuICAgICAgICAgICAgICAgICAgICAgICcuYnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICAgICAgICBjb25zdCBidWZmZXJCeXRlTGVuZ3RoID0gYnVmZmVyQnl0ZUxlbmd0aFZhbFxuICAgICAgICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgICAgICAgICBidWZmZXJCeXRlTGVuZ3RoVmFsXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgICAgICAgICBjb25zdCBieXRlTGVuZ3RoID0gdGhhdC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgICAgICAgICB0aGF0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiBidWZmZXJCeXRlTGVuZ3RoO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoYnl0ZU9mZnNldCArIGJ5dGVMZW5ndGggPiBidWZmZXJCeXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoXG4gICAgICAgICAgICAgICAgICAgICAgJ1RoZSBEYXRhVmlldyBieXRlIGxlbmd0aCBhbmQgb2Zmc2V0IGV4Y2VlZCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICd0aGUgYnVmZmVyXFwncyBieXRlIGxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgdGhhdC5yZXBvcnRWYWxpZGl0eSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tEYXRhVmlld0J5dGVMZW5ndGg6IENoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgICAgKS4kY2hlY2tEYXRhVmlld0J5dGVMZW5ndGgoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICAgIF1dLFxuICAgICAgICAgICcgJyxcbiAgICAgICAgICBbJ2xhYmVsJywgW1xuICAgICAgICAgICAgJ0J5dGUgb2Zmc2V0ICcsXG4gICAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgICBjbGFzczogJ2RhdGFWaWV3Qnl0ZU9mZnNldCcsXG4gICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgICAgICBjaGFuZ2UgKGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGdyZWF0R3JhbmRwYXJlbnQgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICAgICAodGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KTtcblxuICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAqICAgJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoOiBDaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgIGdyZWF0R3JhbmRwYXJlbnQsXG4gICAgICAgICAgICAgICAgICAgICcuZGF0YVZpZXdCeXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgKSkuJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV1cbiAgICAgICAgICBdXVxuICAgICAgICBdXSxcbiAgICAgICAgWydmaWVsZHNldCcsIFtcbiAgICAgICAgICBbJ2xlZ2VuZCcsIFsnVHlwZWQgYXJyYXknXV0sXG4gICAgICAgICAgWydsYWJlbCcsIFtcbiAgICAgICAgICAgICdCeXRlIG9mZnNldCAnLFxuICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgY2xhc3M6ICd0eXBlZEFycmF5Qnl0ZU9mZnNldCcsXG4gICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICBtYXg6ICgyICoqIDUzKSAtIDEsXG4gICAgICAgICAgICAgICRjdXN0b206IHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAdHlwZWRlZiB7KGU6IEV2ZW50KSA9PiB2b2lkfSBDaGVja0J5dGVPZmZzZXRNdWx0aXBsZVxuICAgICAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtDaGVja0J5dGVPZmZzZXRNdWx0aXBsZX0gKi9cbiAgICAgICAgICAgICAgICAkY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGUgKGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKipcbiAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAqICAgJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlOiBDaGVja0J5dGVPZmZzZXRNdWx0aXBsZVxuICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgKi8gKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoYXQuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgY29uc3Qge3ZhbHVlfSA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnKVxuICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgTnVtYmVyLnBhcnNlSW50KHRoYXQudmFsdWUpICUgVHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoXG4gICAgICAgICAgICAgICAgICAgICAgJ0J5dGUgb2Zmc2V0IG11c3QgYmUgYSBtdWx0aXBsZSBvZiB0aGUgdHlwZWQgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBgYXJyYXkncyBieXRlcy1wZXItZWxlbWVudCBzaXplICgke1xuICAgICAgICAgICAgICAgICAgICAgICAgICBUeXBlZEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXG4gICAgICAgICAgICAgICAgICAgICAgICB9KWBcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgdGhhdC5yZXBvcnRWYWxpZGl0eSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAodGhpcyk7XG4gICAgICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5cbiAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUxlbmd0aCA9XG4gICAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tCdWZmZXJCb3VuZHM6IENoZWNrQnVmZmVyQm91bmRzXG4gICAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcudHlwZWRBcnJheUxlbmd0aCcpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBpZiAoIXR5cGVkQXJyYXlMZW5ndGguJGNoZWNrQnVmZmVyQm91bmRzKGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0J5dGVPZmZzZXRNdWx0aXBsZTogQ2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgKi8gKHRoaXMpLiRjaGVja0J5dGVPZmZzZXRNdWx0aXBsZShlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgXV1cbiAgICAgICAgICAvLyAnICcsXG4gICAgICAgICAgLy8gWydsYWJlbCcsIFtcbiAgICAgICAgICAvLyAgICdMZW5ndGggJyxcbiAgICAgICAgICAvLyAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgLy8gICAgIGNsYXNzOiAndHlwZWRBcnJheUxlbmd0aCcsXG4gICAgICAgICAgLy8gICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JywgcGF0dGVybjogJ1xcXFxkKycsXG4gICAgICAgICAgLy8gICAgIG1pbjogMFxuICAgICAgICAgIC8vICAgfV1cbiAgICAgICAgICAvLyBdXVxuICAgICAgICBdXVxuICAgICAgXV0sXG4gICAgICBbJ2ZpZWxkc2V0JywgW1xuICAgICAgICBbJ2xlZ2VuZCcsIFsnVHlwZWQgQXJyYXkgaW5pdGlhbGl6YXRpb24gKG9wdGlvbmFsKSddXSxcbiAgICAgICAgWydzZWxlY3QnLCB7XG4gICAgICAgICAgY2xhc3M6ICdidWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCcsXG4gICAgICAgICAgJ2FyaWEtbGFiZWwnOiAnVHlwZWQgQXJyYXlzJyxcbiAgICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBjYWxsYmFjayBTZXRNaW5zQW5kTWF4ZXNcbiAgICAgICAgICAgICAqIEBwYXJhbSB7VHlwZWRBcnJheX0gdHlwZWRBcnJheVxuICAgICAgICAgICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqIEB0eXBlIHtTZXRNaW5zQW5kTWF4ZXN9ICovXG4gICAgICAgICAgICAkc2V0TWluc0FuZE1heGVzICh0eXBlZEFycmF5KSB7XG4gICAgICAgICAgICAgIGNvbnN0IHttaW4sIG1heH0gPSBnZXRNaW5NYXhGb3JUeXBlZEFycmF5KHR5cGVkQXJyYXkpO1xuXG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqLyAoXG4gICAgICAgICAgICAgICAgJCRlKC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkc2V0TWluc0FuZE1heGVzOiBTZXRNaW5zQW5kTWF4ZXMsXG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoOiBDaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovICh0aGlzKS5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgKSwgJy50eXBlZEFycmF5VmFsdWUnKVxuICAgICAgICAgICAgICApLmZvckVhY2goKHR5cGVkQXJyYXlWYWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlWYWx1ZS5jbGFzc05hbWUgPVxuICAgICAgICAgICAgICAgICAgJ3R5cGVkQXJyYXlWYWx1ZSB0eXBlZEFycmF5LScgKyB0eXBlZEFycmF5O1xuICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlWYWx1ZS5taW4gPSBTdHJpbmcobWluKTtcbiAgICAgICAgICAgICAgICB0eXBlZEFycmF5VmFsdWUubWF4ID0gU3RyaW5nKG1heCk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAdHlwZWRlZiB7KGU6IEV2ZW50KSA9PiB2b2lkfSBDaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqIEB0eXBlIHtDaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RofSAqL1xuICAgICAgICAgICAgJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGggKGUpIHtcbiAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKlxuICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgKiAgICRzZXRNaW5zQW5kTWF4ZXM6IFNldE1pbnNBbmRNYXhlcyxcbiAgICAgICAgICAgICAgKiAgICRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoOiBDaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgKi8gKHRoaXMpO1xuICAgICAgICAgICAgICBjb25zdCBUeXBlZEFycmF5ID0gZ2V0VHlwZWRBcnJheShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh0aGF0LnZhbHVlKVxuICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgIGNvbnN0IGJ5dGVMZW5ndGggPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICh0aGF0LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICAgIGNvbnN0IGFycmF5QnVmZmVyTGVuZ3RoID0gYnl0ZUxlbmd0aC52YWx1ZVxuICAgICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KFxuICAgICAgICAgICAgICAgICAgYnl0ZUxlbmd0aC52YWx1ZVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICA6IDA7XG4gICAgICAgICAgICAgIGlmIChhcnJheUJ1ZmZlckxlbmd0aCAlIFR5cGVkQXJyYXkuQllURVNfUEVSX0VMRU1FTlQpIHtcbiAgICAgICAgICAgICAgICBieXRlTGVuZ3RoLnNldEN1c3RvbVZhbGlkaXR5KFxuICAgICAgICAgICAgICAgICAgJ0FycmF5IGJ1ZmZlciBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgdGhlIHR5cGVkIGFycmF5XFwncyAnICtcbiAgICAgICAgICAgICAgICAgICAgYGJ5dGVzLXBlci1lbGVtZW50IHNpemUgKCR7VHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVH0pYFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBieXRlTGVuZ3RoLnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBieXRlTGVuZ3RoLnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgIGNoYW5nZSAoZSkge1xuICAgICAgICAgICAgICBjb25zdCB0aGF0ID1cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAqICAgJHNldE1pbnNBbmRNYXhlczogU2V0TWluc0FuZE1heGVzLFxuICAgICAgICAgICAgICAgICogICAkY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aDogQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICB0aGlzXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICB0aGF0LlxuICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgIC8vIFVwZGF0ZSB0byByZWZsZWN0IGN1cnJlbnQgc3RhdGUgY2hhbmdlcyBpZiBsYXRlciByZXZlYWxpbmdcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgKHRoaXMucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMnXG4gICAgICAgICAgICAgICkpLnZhbHVlID0gdGhhdC52YWx1ZTtcblxuICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5TGVuZ3RoID1cbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHNcbiAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLnR5cGVkQXJyYXlMZW5ndGgnKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIGlmICghdHlwZWRBcnJheUxlbmd0aC4kY2hlY2tCdWZmZXJCb3VuZHMoZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB0aGF0LiRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoKGUpO1xuXG4gICAgICAgICAgICAgIHRoYXQuJHNldE1pbnNBbmRNYXhlcygvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh0aGF0LnZhbHVlKSk7XG5cbiAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXQgPSAkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICh0aGF0Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlCeXRlT2Zmc2V0J1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAqICAgJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlOiBDaGVja0J5dGVPZmZzZXRNdWx0aXBsZVxuICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgKi8gKHR5cGVkQXJyYXlCeXRlT2Zmc2V0KS4kY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGUoZSk7XG5cbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MRmllbGRTZXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgKiAgICRidWlsZEluc3RhbmNlczogQnVpbGRJbnN0YW5jZXNcbiAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICh0aGlzLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcucmV0dXJuVHlwZSdcbiAgICAgICAgICAgICAgKSkuJGJ1aWxkSW5zdGFuY2VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0eXBlZEFycmF5cy5tYXAoKHR5cGVkQXJyYXkpID0+IHtcbiAgICAgICAgICByZXR1cm4gWydvcHRpb24nLCBbdHlwZWRBcnJheV1dO1xuICAgICAgICB9KV0sXG4gICAgICAgICcgJyxcbiAgICAgICAgWydsYWJlbCcsIFtcbiAgICAgICAgICAnQXJyYXkgbGVuZ3RoOiAnLFxuICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICBjbGFzczogJ3R5cGVkQXJyYXlMZW5ndGgnLFxuICAgICAgICAgICAgdHlwZTogJ251bWJlcicsIHN0ZXA6ICcxJywgc2l6ZTogJzQnLFxuICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgICRjdXN0b206IHtcbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIFdoZW4gY3JlYXRpbmcgYSB2aWV3IGZyb20gYSBidWZmZXIsIHRoZSBib3VuZHMgYXJlIG91dHNpZGVcbiAgICAgICAgICAgICAgICogdGhlIGJ1ZmZlci4gSW4gb3RoZXIgd29yZHMsIGBieXRlT2Zmc2V0ICsgbGVuZ3RoICpcbiAgICAgICAgICAgICAgICogVHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVCA+IGJ1ZmZlci5ieXRlTGVuZ3RoYC5cbiAgICAgICAgICAgICAgICogQHR5cGVkZWYgeyhlOiBFdmVudCkgPT4gYm9vbGVhbn0gQ2hlY2tCdWZmZXJCb3VuZHNcbiAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtDaGVja0J1ZmZlckJvdW5kc30gKi9cbiAgICAgICAgICAgICAgJGNoZWNrQnVmZmVyQm91bmRzIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKlxuICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHMsXG4gICAgICAgICAgICAgICAgKiAgICRidWlsZFR5cGVkQXJyYXk6IEJ1aWxkVHlwZWRBcnJheVxuICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAqLyAodGhpcyk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgIHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgY29uc3QgYnVmZmVyQnl0ZUxlbmd0aFZhbCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgJGUoXG4gICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgICAnLmJ5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICAgICApKS52YWx1ZTtcbiAgICAgICAgICAgICAgICBjb25zdCBidWZmZXJCeXRlTGVuZ3RoID0gYnVmZmVyQnl0ZUxlbmd0aFZhbFxuICAgICAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlckJ5dGVMZW5ndGhWYWxcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIDogMDtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IHRoYXQudmFsdWVcbiAgICAgICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KHRoYXQudmFsdWUpXG4gICAgICAgICAgICAgICAgICA6IGJ1ZmZlckJ5dGVMZW5ndGg7XG5cbiAgICAgICAgICAgICAgICBjb25zdCB7dmFsdWV9ID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnKVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBUeXBlZEFycmF5ID0gZ2V0VHlwZWRBcnJheShcbiAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHZhbHVlKVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbCA9XG4gICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgICAgICcudHlwZWRBcnJheUJ5dGVPZmZzZXQnXG4gICAgICAgICAgICAgICAgICApKS52YWx1ZTtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5Qnl0ZU9mZnNldCA9IHR5cGVkQXJyYXlCeXRlT2Zmc2V0VmFsXG4gICAgICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludCh0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbClcbiAgICAgICAgICAgICAgICAgIDogMDtcblxuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICh0eXBlZEFycmF5Qnl0ZU9mZnNldCArXG4gICAgICAgICAgICAgICAgICAgIChsZW5ndGggKiBUeXBlZEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKSkgPlxuICAgICAgICAgICAgICAgICAgYnVmZmVyQnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgdGhhdC5zZXRDdXN0b21WYWxpZGl0eShcbiAgICAgICAgICAgICAgICAgICAgJ1RoZSBieXRlIG9mZnNldCBhbmQgdGhlIGxlbmd0aCB0aW1lcyBieXRlcyBwZXIgZWxlbWVudCAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2lzIGdyZWF0ZXIgdGhhbiB0aGUgYnVmZmVyIGxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgdGhhdC5yZXBvcnRWYWxpZGl0eSgpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICogQHR5cGVkZWYgeygpID0+IHZvaWR9IEJ1aWxkVHlwZWRBcnJheVxuICAgICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgICAvKiogQHR5cGUge0J1aWxkVHlwZWRBcnJheX0gKi9cbiAgICAgICAgICAgICAgJGJ1aWxkVHlwZWRBcnJheSAoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKlxuICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHMsXG4gICAgICAgICAgICAgICAgKiAgICRidWlsZFR5cGVkQXJyYXk6IEJ1aWxkVHlwZWRBcnJheVxuICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAqLyAodGhpcyk7XG4gICAgICAgICAgICAgICAgY29uc3QgbGVuZ3RoID0gTnVtYmVyLnBhcnNlSW50KHRoYXQudmFsdWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGdyYW5kcGFyZW50ID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgdGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgdGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBjb25zdCBidWZmZXJCeXRlTGVuZ3RoID1cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICR0eXBlZEFycmF5OiBUeXBlZEFycmF5SW5zdGFuY2VcbiAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICBhbmNlc3RvcixcbiAgICAgICAgICAgICAgICAgICAgJy5ieXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgKSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5QXJlYSA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgIGdyYW5kcGFyZW50LCAnLnR5cGVkQXJyYXlBcmVhJ1xuICAgICAgICAgICAgICAgICkpO1xuXG4gICAgICAgICAgICAgICAgdHlwZWRBcnJheUFyZWEuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoZS50YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgYnVmZmVyQnl0ZUxlbmd0aC4kdHlwZWRBcnJheS5zZXQoW1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIE9rXG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmRhdGFzZXQuYmlnaW50ID09PSAndHJ1ZSdcbiAgICAgICAgICAgICAgICAgICAgICA/IEJpZ0ludChpbnB1dC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICA6IE51bWJlcihpbnB1dC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgIF0sIE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovIChpbnB1dC5kYXRhc2V0LmtleSlcbiAgICAgICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHt2YWx1ZX0gPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAkZShncmFuZHBhcmVudCwgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCcpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBjb25zdCB7bWluLCBtYXh9ID0gZ2V0TWluTWF4Rm9yVHlwZWRBcnJheShcbiAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHZhbHVlKVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICB0eXBlZEFycmF5QXJlYS50ZXh0Q29udGVudCA9ICcnO1xuICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlBcmVhLmFwcGVuZChcbiAgICAgICAgICAgICAgICAgIC4uLkFycmF5LmZyb20oe2xlbmd0aH0sIChfdiwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBqbWwoJ2xhYmVsJywgW1xuICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAnICcsXG4gICAgICAgICAgICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAndHlwZWRBcnJheVZhbHVlIHR5cGVkQXJyYXktJyArIHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBrZXksIGJpZ2ludDogU3RyaW5nKHZhbHVlLnN0YXJ0c1dpdGgoJ0JpZ0ludCcpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuOiB2YWx1ZS5zdGFydHNXaXRoKCdGbG9hdCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gU3RyaW5nLnJhd2BcXGQrKD86XFwuXFxkKyk/YFxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IFN0cmluZy5yYXdgXFxkK2AsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYnVmZmVyQnl0ZUxlbmd0aC4kdHlwZWRBcnJheVtrZXldXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gU3RyaW5nKGJ1ZmZlckJ5dGVMZW5ndGguJHR5cGVkQXJyYXlba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW4sIG1heFxuICAgICAgICAgICAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgICAgICAgICAgICcgJ1xuICAgICAgICAgICAgICAgICAgICAgIC8vICFrZXkgfHwga2V5ICUgOSA/ICcgJyA6IFsnYnInXVxuICAgICAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICBjaGFuZ2UgKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID1cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHMsXG4gICAgICAgICAgICAgICAgICAgKiAgICRidWlsZFR5cGVkQXJyYXk6IEJ1aWxkVHlwZWRBcnJheVxuICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgY29uc3QgZ3JhbmRwYXJlbnQgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF0aGF0LiRjaGVja0J1ZmZlckJvdW5kcyhlKSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IHt2YWx1ZX0gPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAkZShncmFuZHBhcmVudCwgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCcpXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IE51bWJlci5wYXJzZUludCh0aGF0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXcgLS0gVGVzdGluZ1xuICAgICAgICAgICAgICAgICAgbmV3IFR5cGVkQXJyYXkobGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJ1R5cGVkIEFycmF5IGxlbmd0aCBpcyB0b28gbG9uZycpO1xuICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhhdC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgICAgICAgICAgICAgdGhhdC5yZXBvcnRWYWxpZGl0eSgpO1xuXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxGaWVsZFNldEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICogICAkYnVpbGRJbnN0YW5jZXM6IEJ1aWxkSW5zdGFuY2VzXG4gICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICh0aGlzLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICAgJy5yZXR1cm5UeXBlJ1xuICAgICAgICAgICAgICAgICkpLiRidWlsZEluc3RhbmNlcygpO1xuXG4gICAgICAgICAgICAgICAgdGhhdC4kYnVpbGRUeXBlZEFycmF5KCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XSxcbiAgICAgICAgICBbJ2RpdicsIHtcbiAgICAgICAgICAgIGNsYXNzOiAndHlwZWRBcnJheUFyZWEnXG4gICAgICAgICAgfV1cbiAgICAgICAgXV1cbiAgICAgIF1dLFxuICAgICAgWydmaWVsZHNldCcsIFtcbiAgICAgICAgWydsZWdlbmQnLCBbJ0RhdGFWaWV3IGluaXRpYWxpemF0aW9uIChvcHRpb25hbCknXV0sXG4gICAgICAgIFsnc2VsZWN0Jywge1xuICAgICAgICAgIGNsYXNzOiAnZGF0YVZpZXdNZXRob2QnLFxuICAgICAgICAgICdhcmlhLWxhYmVsJzogJ0RhdGEgVmlldyBtZXRob2RzJyxcbiAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgIGNoYW5nZSAoKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGFWaWV3QXJlYSA9IC8qKiBAdHlwZSB7SFRNTERpdkVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAodGhpcy5wYXJlbnRFbGVtZW50KSwgJy5kYXRhVmlld0FyZWEnXG4gICAgICAgICAgICAgICkpO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHZhbCA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovICh0aGlzKS52YWx1ZTtcbiAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheSA9IC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKFxuICAgICAgICAgICAgICAgIHZhbC5zbGljZSgzKSArICdBcnJheSdcbiAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICBkYXRhVmlld0FyZWEudGV4dENvbnRlbnQgPSAnJztcbiAgICAgICAgICAgICAgZGF0YVZpZXdBcmVhLmFwcGVuZChcbiAgICAgICAgICAgICAgICBqbWwoXG4gICAgICAgICAgICAgICAgICAnbGFiZWwnLCBbXG4gICAgICAgICAgICAgICAgICAgICdCeXRlIG9mZnNldCAnLFxuICAgICAgICAgICAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnZGF0YVZpZXdTZXRCeXRlT2Zmc2V0JyxcbiAgICAgICAgICAgICAgICAgICAgICBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuOiBTdHJpbmcucmF3YFxcZCtgXG4gICAgICAgICAgICAgICAgICAgIH1dXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAnICcsXG4gICAgICAgICAgICAgICAgam1sKFxuICAgICAgICAgICAgICAgICAgJ2xhYmVsJywgW1xuICAgICAgICAgICAgICAgICAgICAnVmFsdWUgJyxcbiAgICAgICAgICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuOiBTdHJpbmcucmF3YFxcZCtgLFxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAndHlwZWRBcnJheVZhbHVlIHR5cGVkQXJyYXktJyArIHR5cGVkQXJyYXksXG4gICAgICAgICAgICAgICAgICAgICAgLi4uZ2V0TWluTWF4Rm9yVHlwZWRBcnJheSh0eXBlZEFycmF5KVxuICAgICAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgdmFsID09PSAnc2V0SW50OCcgfHwgdmFsID09PSAnc2V0VWludDgnXG4gICAgICAgICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICAgICAgICA6IGptbCgnbGFiZWwnLCBbXG4gICAgICAgICAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdsaXR0bGVFbmRpYW4nLFxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCdcbiAgICAgICAgICAgICAgICAgICAgfV0sXG4gICAgICAgICAgICAgICAgICAgICdMaXR0bGUgZW5kaWFuJ1xuICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgJyAnLFxuICAgICAgICAgICAgICAgIGptbCgnYnV0dG9uJywge1xuICAgICAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGNsaWNrIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhVmlld01ldGhvZCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge2RhdGFWaWV3TWV0aG9kc1tudW1iZXJdfSAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmNlc3Rvci5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICk/LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YVZpZXdTZXRCeXRlT2Zmc2V0ID1cbiAgICAgICAgICAgICAgICAgICAgICAgIE51bWJlci5wYXJzZUludCgvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcuZGF0YVZpZXdTZXRCeXRlT2Zmc2V0J1xuICAgICAgICAgICAgICAgICAgICAgICAgKSkudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcudHlwZWRBcnJheVZhbHVlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGl0dGxlRW5kaWFuID1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudHxudWxsfSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnLmxpdHRsZUVuZGlhbidcbiAgICAgICAgICAgICAgICAgICAgICAgICkpPy5jaGVja2VkO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICAgICAgICogICAkZGF0YVZpZXc6IERhdGFWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGFuY2VzdG9yPy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmJ5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhVmlld01ldGhvZCA9PT0gJ3NldEJpZ0ludDY0JyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVZpZXdNZXRob2QgPT09ICdzZXRCaWdVaW50NjQnXG4gICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBieXRlTGVuZ3RoLiRkYXRhVmlld1tkYXRhVmlld01ldGhvZF0oXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFWaWV3U2V0Qnl0ZU9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgQmlnSW50KHR5cGVkQXJyYXlWYWx1ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxpdHRsZUVuZGlhblxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnl0ZUxlbmd0aC4kZGF0YVZpZXdbZGF0YVZpZXdNZXRob2RdKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhVmlld1NldEJ5dGVPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE51bWJlcih0eXBlZEFycmF5VmFsdWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBsaXR0bGVFbmRpYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUxlbmd0aCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICAgICAgICogICAkYnVpbGRUeXBlZEFycmF5OiBCdWlsZFR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAoYW5jZXN0b3IucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcudHlwZWRBcnJheUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlMZW5ndGguJGJ1aWxkVHlwZWRBcnJheSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgWydTZXQnXSlcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIFtcbiAgICAgICAgICBbJ29wdGlvbicsIHt2YWx1ZTogJyd9LCBbJyhTZWxlY3QgYSBkYXRhIHZpZXcgbWV0aG9kKSddXSxcbiAgICAgICAgICAuLi5kYXRhVmlld01ldGhvZHMubWFwKChkYXRhVmlld01ldGhvZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIC8qKiBAdHlwZSB7aW1wb3J0KCdqYW1pbGloJykuSmFtaWxpaEFycmF5fSAqLyAoXG4gICAgICAgICAgICAgIFsnb3B0aW9uJywgW2RhdGFWaWV3TWV0aG9kXV1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSlcbiAgICAgICAgXV0sXG4gICAgICAgICcgJyxcbiAgICAgICAgWydkaXYnLCB7Y2xhc3M6ICdkYXRhVmlld0FyZWEnfV1cbiAgICAgIF1dXG4gICAgXSk7XG5cbiAgICBpZiAodGhpcy5zZXRWYWx1ZSAmJiB2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRWYWx1ZSh7cm9vdDogZGl2LCB2YWx1ZX0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBieXRlTGVuZ3RoID1cbiAgICAgIC8qKlxuICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgKiAgICR2YWx1ZTogQnVmZmVyU291cmNlXG4gICAgICAgKiB9fVxuICAgICAgICovICgkZShkaXYsICcuYnl0ZUxlbmd0aCcpKTtcbiAgICAgIGJ5dGVMZW5ndGguJHZhbHVlID0gbmV3IEFycmF5QnVmZmVyKDApO1xuICAgIH1cblxuICAgIHJldHVybiBbZGl2XTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgYnVmZmVyc291cmNlVHlwZTtcbiJdLCJtYXBwaW5ncyI6IjIyMENBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosT0FBUUUsRUFBRSxDQUFFQyxHQUFHLEtBQU8sMkJBQTJCLENBQ2pELE9BQVFDLEdBQUcsQ0FBRUMsV0FBVyxLQUFPLHNCQUFzQixDQUNyRCxNQUFPLENBQUFDLE9BQU8sS0FBTSxxQkFBcUIsQ0FFekMsS0FBTSxDQUFBQyxlQUFlLEVBQUcsb0JBQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUFzQixDQUM1QyxTQUFTLENBQ1QsVUFBVSxDQUNWLFVBQVUsQ0FDVixXQUFXLENBQ1gsVUFBVSxDQUNWLFdBQVcsQ0FDWCxZQUFZLENBQ1osWUFBWSxDQUNaLGFBQWEsQ0FDYixj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