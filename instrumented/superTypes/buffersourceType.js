function cov_24tv8o6xo1(){var path="/Users/brett/jsoe/src/superTypes/buffersourceType.js";var hash="8ef983da8757e26b7cc97513e2dbf22e464f138e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/superTypes/buffersourceType.js",statementMap:{"0":{start:{line:5,column:46},end:{line:16,column:1}},"1":{start:{line:18,column:42},end:{line:22,column:1}},"2":{start:{line:28,column:31},end:{line:58,column:1}},"3":{start:{line:29,column:2},end:{line:57,column:3}},"4":{start:{line:31,column:4},end:{line:31,column:33}},"5":{start:{line:33,column:4},end:{line:33,column:30}},"6":{start:{line:35,column:4},end:{line:35,column:30}},"7":{start:{line:37,column:4},end:{line:37,column:37}},"8":{start:{line:39,column:4},end:{line:39,column:32}},"9":{start:{line:41,column:4},end:{line:41,column:47}},"10":{start:{line:43,column:4},end:{line:43,column:37}},"11":{start:{line:45,column:4},end:{line:45,column:39}},"12":{start:{line:48,column:4},end:{line:48,column:41}},"13":{start:{line:50,column:4},end:{line:50,column:49}},"14":{start:{line:52,column:4},end:{line:52,column:40}},"15":{start:{line:82,column:22},end:{line:111,column:1}},"16":{start:{line:83,column:2},end:{line:110,column:3}},"17":{start:{line:85,column:4},end:{line:85,column:21}},"18":{start:{line:87,column:4},end:{line:87,column:22}},"19":{start:{line:89,column:4},end:{line:89,column:29}},"20":{start:{line:91,column:4},end:{line:91,column:22}},"21":{start:{line:93,column:4},end:{line:93,column:23}},"22":{start:{line:95,column:4},end:{line:95,column:22}},"23":{start:{line:97,column:4},end:{line:97,column:23}},"24":{start:{line:99,column:4},end:{line:99,column:24}},"25":{start:{line:101,column:4},end:{line:101,column:24}},"26":{start:{line:103,column:4},end:{line:103,column:25}},"27":{start:{line:105,column:4},end:{line:105,column:26}},"28":{start:{line:113,column:28},end:{line:118,column:2}},"29":{start:{line:120,column:10},end:{line:120,column:11}},"30":{start:{line:125,column:25},end:{line:1509,column:1}},"31":{start:{line:136,column:4},end:{line:136,column:51}},"32":{start:{line:146,column:14},end:{line:146,column:27}},"33":{start:{line:151,column:8},end:{line:151,column:9}},"34":{start:{line:153,column:19},end:{line:153,column:63}},"35":{start:{line:156,column:4},end:{line:184,column:5}},"36":{start:{line:157,column:6},end:{line:159,column:8}},"37":{start:{line:161,column:6},end:{line:161,column:62}},"38":{start:{line:163,column:6},end:{line:183,column:7}},"39":{start:{line:164,column:8},end:{line:175,column:10}},"40":{start:{line:171,column:12},end:{line:173,column:13}},"41":{start:{line:172,column:14},end:{line:172,column:38}},"42":{start:{line:176,column:8},end:{line:182,column:24}},"43":{start:{line:188,column:4},end:{line:210,column:5}},"44":{start:{line:189,column:6},end:{line:189,column:25}},"45":{start:{line:191,column:6},end:{line:191,column:74}},"46":{start:{line:192,column:6},end:{line:209,column:9}},"47":{start:{line:193,column:8},end:{line:208,column:10}},"48":{start:{line:202,column:12},end:{line:204,column:13}},"49":{start:{line:203,column:14},end:{line:203,column:40}},"50":{start:{line:206,column:12},end:{line:206,column:32}},"51":{start:{line:211,column:4},end:{line:217,column:6}},"52":{start:{line:225,column:11},end:{line:225,column:34}},"53":{start:{line:226,column:4},end:{line:226,column:22}},"54":{start:{line:229,column:22},end:{line:229,column:40}},"55":{start:{line:230,column:4},end:{line:239,column:5}},"56":{start:{line:231,column:6},end:{line:231,column:72}},"57":{start:{line:233,column:6},end:{line:233,column:70}},"58":{start:{line:235,column:8},end:{line:235,column:45}},"59":{start:{line:237,column:6},end:{line:237,column:36}},"60":{start:{line:238,column:6},end:{line:238,column:53}},"61":{start:{line:246,column:11},end:{line:246,column:34}},"62":{start:{line:248,column:4},end:{line:248,column:30}},"63":{start:{line:250,column:19},end:{line:250,column:69}},"64":{start:{line:251,column:4},end:{line:251,column:41}},"65":{start:{line:252,column:4},end:{line:252,column:50}},"66":{start:{line:255,column:6},end:{line:255,column:32}},"67":{start:{line:257,column:4},end:{line:257,column:47}},"68":{start:{line:258,column:4},end:{line:258,column:53}},"69":{start:{line:260,column:4},end:{line:284,column:5}},"70":{start:{line:262,column:8},end:{line:262,column:39}},"71":{start:{line:264,column:6},end:{line:264,column:50}},"72":{start:{line:265,column:6},end:{line:265,column:60}},"73":{start:{line:268,column:8},end:{line:268,column:39}},"74":{start:{line:270,column:6},end:{line:270,column:50}},"75":{start:{line:271,column:6},end:{line:271,column:60}},"76":{start:{line:272,column:11},end:{line:284,column:5}},"77":{start:{line:274,column:8},end:{line:274,column:41}},"78":{start:{line:276,column:6},end:{line:276,column:52}},"79":{start:{line:277,column:6},end:{line:277,column:62}},"80":{start:{line:280,column:8},end:{line:280,column:37}},"81":{start:{line:282,column:6},end:{line:282,column:44}},"82":{start:{line:283,column:6},end:{line:283,column:58}},"83":{start:{line:287,column:4},end:{line:289,column:13}},"84":{start:{line:292,column:22},end:{line:292,column:40}},"85":{start:{line:293,column:19},end:{line:293,column:69}},"86":{start:{line:295,column:4},end:{line:402,column:7}},"87":{start:{line:338,column:12},end:{line:338,column:31}},"88":{start:{line:339,column:27},end:{line:389,column:14}},"89":{start:{line:347,column:77},end:{line:349,column:29}},"90":{start:{line:350,column:41},end:{line:352,column:23}},"91":{start:{line:353,column:41},end:{line:353,column:63}},"92":{start:{line:354,column:73},end:{line:358,column:23}},"93":{start:{line:359,column:22},end:{line:359,column:54}},"94":{start:{line:360,column:22},end:{line:375,column:24}},"95":{start:{line:364,column:26},end:{line:373,column:29}},"96":{start:{line:379,column:18},end:{line:383,column:35}},"97":{start:{line:391,column:45},end:{line:395,column:14}},"98":{start:{line:405,column:4},end:{line:405,column:10}},"99":{start:{line:411,column:16},end:{line:1493,column:6}},"100":{start:{line:423,column:16},end:{line:423,column:41}},"101":{start:{line:433,column:16},end:{line:433,column:20}},"102":{start:{line:434,column:60},end:{line:434,column:78}},"103":{start:{line:435,column:61},end:{line:438,column:13}},"104":{start:{line:448,column:16},end:{line:448,column:43}},"105":{start:{line:450,column:34},end:{line:450,column:67}},"106":{start:{line:451,column:34},end:{line:455,column:13}},"107":{start:{line:457,column:27},end:{line:460,column:13}},"108":{start:{line:462,column:74},end:{line:465,column:20}},"109":{start:{line:466,column:39},end:{line:468,column:17}},"110":{start:{line:470,column:74},end:{line:473,column:20}},"111":{start:{line:474,column:39},end:{line:476,column:25}},"112":{start:{line:478,column:29},end:{line:480,column:13}},"113":{start:{line:483,column:14},end:{line:483,column:60}},"114":{start:{line:486,column:31},end:{line:488,column:13}},"115":{start:{line:490,column:46},end:{line:493,column:22}},"116":{start:{line:494,column:41},end:{line:496,column:17}},"117":{start:{line:499,column:46},end:{line:502,column:22}},"118":{start:{line:503,column:37},end:{line:505,column:29}},"119":{start:{line:507,column:31},end:{line:509,column:13}},"120":{start:{line:511,column:12},end:{line:511,column:44}},"121":{start:{line:512,column:12},end:{line:512,column:48}},"122":{start:{line:514,column:37},end:{line:525,column:14}},"123":{start:{line:518,column:14},end:{line:524,column:18}},"124":{start:{line:528,column:12},end:{line:528,column:60}},"125":{start:{line:530,column:12},end:{line:540,column:13}},"126":{start:{line:532,column:14},end:{line:532,column:41}},"127":{start:{line:533,column:14},end:{line:533,column:20}},"128":{start:{line:535,column:14},end:{line:535,column:43}},"129":{start:{line:536,column:14},end:{line:536,column:20}},"130":{start:{line:538,column:14},end:{line:538,column:45}},"131":{start:{line:539,column:14},end:{line:539,column:20}},"132":{start:{line:548,column:41},end:{line:551,column:31}},"133":{start:{line:552,column:41},end:{line:555,column:32}},"134":{start:{line:574,column:41},end:{line:577,column:31}},"135":{start:{line:578,column:41},end:{line:581,column:32}},"136":{start:{line:598,column:41},end:{line:601,column:32}},"137":{start:{line:602,column:41},end:{line:605,column:31}},"138":{start:{line:624,column:61},end:{line:624,column:65}},"139":{start:{line:626,column:16},end:{line:626,column:49}},"140":{start:{line:636,column:17},end:{line:639,column:17}},"141":{start:{line:642,column:14},end:{line:642,column:75}},"142":{start:{line:650,column:18},end:{line:650,column:51}},"143":{start:{line:652,column:14},end:{line:654,column:15}},"144":{start:{line:653,column:16},end:{line:653,column:23}},"145":{start:{line:656,column:14},end:{line:659,column:16}},"146":{start:{line:661,column:14},end:{line:661,column:51}},"147":{start:{line:663,column:43},end:{line:667,column:15}},"148":{start:{line:672,column:18},end:{line:672,column:69}},"149":{start:{line:676,column:10},end:{line:676,column:42}},"150":{start:{line:686,column:16},end:{line:686,column:64}},"151":{start:{line:706,column:20},end:{line:706,column:24}},"152":{start:{line:710,column:20},end:{line:711,column:80}},"153":{start:{line:719,column:22},end:{line:719,column:55}},"154":{start:{line:721,column:18},end:{line:723,column:19}},"155":{start:{line:722,column:20},end:{line:722,column:27}},"156":{start:{line:725,column:73},end:{line:729,column:19}},"157":{start:{line:730,column:30},end:{line:730,column:40}},"158":{start:{line:732,column:18},end:{line:740,column:19}},"159":{start:{line:733,column:20},end:{line:736,column:22}},"160":{start:{line:737,column:20},end:{line:737,column:40}},"161":{start:{line:738,column:20},end:{line:738,column:42}},"162":{start:{line:739,column:20},end:{line:739,column:27}},"163":{start:{line:741,column:18},end:{line:741,column:45}},"164":{start:{line:742,column:18},end:{line:742,column:40}},"165":{start:{line:744,column:18},end:{line:748,column:19}},"166":{start:{line:747,column:20},end:{line:747,column:46}},"167":{start:{line:751,column:21},end:{line:751,column:69}},"168":{start:{line:757,column:22},end:{line:760,column:49}},"169":{start:{line:766,column:22},end:{line:770,column:51}},"170":{start:{line:785,column:64},end:{line:785,column:68}},"171":{start:{line:786,column:70},end:{line:790,column:19}},"172":{start:{line:791,column:30},end:{line:791,column:40}},"173":{start:{line:792,column:18},end:{line:802,column:19}},"174":{start:{line:796,column:20},end:{line:798,column:22}},"175":{start:{line:799,column:20},end:{line:799,column:40}},"176":{start:{line:801,column:20},end:{line:801,column:47}},"177":{start:{line:803,column:18},end:{line:803,column:40}},"178":{start:{line:830,column:22},end:{line:830,column:26}},"179":{start:{line:833,column:21},end:{line:833,column:69}},"180":{start:{line:835,column:37},end:{line:840,column:24}},"181":{start:{line:842,column:78},end:{line:846,column:28}},"182":{start:{line:847,column:43},end:{line:851,column:23}},"183":{start:{line:853,column:37},end:{line:857,column:38}},"184":{start:{line:859,column:18},end:{line:867,column:19}},"185":{start:{line:860,column:20},end:{line:863,column:22}},"186":{start:{line:864,column:20},end:{line:864,column:40}},"187":{start:{line:866,column:20},end:{line:866,column:47}},"188":{start:{line:868,column:18},end:{line:868,column:40}},"189":{start:{line:877,column:22},end:{line:879,column:48}},"190":{start:{line:895,column:20},end:{line:895,column:24}},"191":{start:{line:898,column:21},end:{line:898,column:69}},"192":{start:{line:904,column:22},end:{line:907,column:49}},"193":{start:{line:934,column:22},end:{line:934,column:26}},"194":{start:{line:936,column:20},end:{line:937,column:80}},"195":{start:{line:941,column:20},end:{line:941,column:66}},"196":{start:{line:944,column:37},end:{line:946,column:19}},"197":{start:{line:947,column:18},end:{line:959,column:19}},"198":{start:{line:950,column:20},end:{line:955,column:22}},"199":{start:{line:956,column:20},end:{line:956,column:40}},"200":{start:{line:958,column:20},end:{line:958,column:47}},"201":{start:{line:960,column:18},end:{line:960,column:40}},"202":{start:{line:965,column:64},end:{line:965,column:68}},"203":{start:{line:967,column:20},end:{line:968,column:80}},"204":{start:{line:976,column:22},end:{line:976,column:55}},"205":{start:{line:978,column:18},end:{line:980,column:19}},"206":{start:{line:979,column:20},end:{line:979,column:27}},"207":{start:{line:985,column:22},end:{line:985,column:57}},"208":{start:{line:1015,column:33},end:{line:1015,column:67}},"209":{start:{line:1017,column:48},end:{line:1031,column:17}},"210":{start:{line:1027,column:16},end:{line:1028,column:61}},"211":{start:{line:1029,column:16},end:{line:1029,column:50}},"212":{start:{line:1030,column:16},end:{line:1030,column:50}},"213":{start:{line:1045,column:18},end:{line:1045,column:22}},"214":{start:{line:1046,column:33},end:{line:1048,column:15}},"215":{start:{line:1050,column:66},end:{line:1054,column:15}},"216":{start:{line:1055,column:40},end:{line:1059,column:19}},"217":{start:{line:1060,column:14},end:{line:1068,column:15}},"218":{start:{line:1061,column:16},end:{line:1064,column:18}},"219":{start:{line:1065,column:16},end:{line:1065,column:36}},"220":{start:{line:1067,column:16},end:{line:1067,column:49}},"221":{start:{line:1069,column:14},end:{line:1069,column:42}},"222":{start:{line:1081,column:18},end:{line:1081,column:22}},"223":{start:{line:1085,column:16},end:{line:1086,column:61}},"224":{start:{line:1090,column:47},end:{line:1094,column:36}},"225":{start:{line:1102,column:18},end:{line:1102,column:51}},"226":{start:{line:1104,column:14},end:{line:1106,column:15}},"227":{start:{line:1105,column:16},end:{line:1105,column:23}},"228":{start:{line:1108,column:14},end:{line:1108,column:49}},"229":{start:{line:1110,column:14},end:{line:1110,column:76}},"230":{start:{line:1112,column:43},end:{line:1116,column:15}},"231":{start:{line:1121,column:18},end:{line:1121,column:69}},"232":{start:{line:1127,column:18},end:{line:1131,column:35}},"233":{start:{line:1135,column:10},end:{line:1135,column:42}},"234":{start:{line:1160,column:20},end:{line:1160,column:24}},"235":{start:{line:1163,column:18},end:{line:1163,column:66}},"236":{start:{line:1165,column:76},end:{line:1169,column:26}},"237":{start:{line:1170,column:41},end:{line:1174,column:21}},"238":{start:{line:1176,column:31},end:{line:1178,column:36}},"239":{start:{line:1181,column:18},end:{line:1181,column:64}},"240":{start:{line:1184,column:35},end:{line:1186,column:17}},"241":{start:{line:1189,column:50},end:{line:1192,column:26}},"242":{start:{line:1193,column:45},end:{line:1195,column:21}},"243":{start:{line:1197,column:16},end:{line:1209,column:17}},"244":{start:{line:1202,column:18},end:{line:1205,column:20}},"245":{start:{line:1206,column:18},end:{line:1206,column:38}},"246":{start:{line:1207,column:18},end:{line:1207,column:40}},"247":{start:{line:1208,column:18},end:{line:1208,column:31}},"248":{start:{line:1211,column:16},end:{line:1211,column:43}},"249":{start:{line:1212,column:16},end:{line:1212,column:38}},"250":{start:{line:1213,column:16},end:{line:1213,column:28}},"251":{start:{line:1227,column:20},end:{line:1227,column:24}},"252":{start:{line:1228,column:31},end:{line:1228,column:58}},"253":{start:{line:1230,column:18},end:{line:1230,column:51}},"254":{start:{line:1234,column:18},end:{line:1234,column:66}},"255":{start:{line:1241,column:23},end:{line:1244,column:19}},"256":{start:{line:1246,column:67},end:{line:1248,column:17}},"257":{start:{line:1250,column:16},end:{line:1260,column:19}},"258":{start:{line:1251,column:65},end:{line:1251,column:73}},"259":{start:{line:1252,column:18},end:{line:1259,column:21}},"260":{start:{line:1262,column:18},end:{line:1262,column:67}},"261":{start:{line:1264,column:35},end:{line:1266,column:17}},"262":{start:{line:1268,column:16},end:{line:1268,column:48}},"263":{start:{line:1269,column:16},end:{line:1292,column:18}},"264":{start:{line:1271,column:20},end:{line:1290,column:23}},"265":{start:{line:1304,column:20},end:{line:1304,column:24}},"266":{start:{line:1307,column:18},end:{line:1307,column:51}},"267":{start:{line:1310,column:16},end:{line:1312,column:17}},"268":{start:{line:1311,column:18},end:{line:1311,column:25}},"269":{start:{line:1315,column:18},end:{line:1315,column:67}},"270":{start:{line:1318,column:31},end:{line:1318,column:58}},"271":{start:{line:1319,column:16},end:{line:1330,column:17}},"272":{start:{line:1320,column:37},end:{line:1322,column:19}},"273":{start:{line:1324,column:18},end:{line:1324,column:41}},"274":{start:{line:1326,column:18},end:{line:1326,column:75}},"275":{start:{line:1327,column:18},end:{line:1327,column:38}},"276":{start:{line:1328,column:18},end:{line:1328,column:40}},"277":{start:{line:1329,column:18},end:{line:1329,column:25}},"278":{start:{line:1331,column:16},end:{line:1331,column:43}},"279":{start:{line:1332,column:16},end:{line:1332,column:38}},"280":{start:{line:1338,column:20},end:{line:1342,column:37}},"281":{start:{line:1344,column:16},end:{line:1344,column:40}},"282":{start:{line:1360,column:66},end:{line:1362,column:15}},"283":{start:{line:1364,column:59},end:{line:1364,column:71}},"284":{start:{line:1366,column:16},end:{line:1366,column:38}},"285":{start:{line:1369,column:14},end:{line:1369,column:44}},"286":{start:{line:1370,column:14},end:{line:1479,column:16}},"287":{start:{line:1408,column:22},end:{line:1408,column:41}},"288":{start:{line:1410,column:24},end:{line:1410,column:42}},"289":{start:{line:1414,column:59},end:{line:1416,column:34}},"290":{start:{line:1420,column:24},end:{line:1423,column:33}},"291":{start:{line:1425,column:56},end:{line:1428,column:32}},"292":{start:{line:1430,column:61},end:{line:1433,column:35}},"293":{start:{line:1441,column:26},end:{line:1445,column:27}},"294":{start:{line:1448,column:22},end:{line:1463,column:23}},"295":{start:{line:1452,column:24},end:{line:1456,column:26}},"296":{start:{line:1458,column:24},end:{line:1462,column:26}},"297":{start:{line:1470,column:29},end:{line:1474,column:25}},"298":{start:{line:1475,column:22},end:{line:1475,column:58}},"299":{start:{line:1485,column:12},end:{line:1487,column:14}},"300":{start:{line:1495,column:4},end:{line:1505,column:5}},"301":{start:{line:1496,column:6},end:{line:1496,column:40}},"302":{start:{line:1503,column:11},end:{line:1503,column:33}},"303":{start:{line:1504,column:6},end:{line:1504,column:45}},"304":{start:{line:1507,column:4},end:{line:1507,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:31},end:{line:28,column:32}},loc:{start:{line:28,column:47},end:{line:58,column:1}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:82,column:22},end:{line:82,column:23}},loc:{start:{line:82,column:32},end:{line:111,column:1}},line:82},"2":{name:"(anonymous_2)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:17},end:{line:137,column:3}},line:135},"3":{name:"(anonymous_3)",decl:{start:{line:138,column:2},end:{line:138,column:3}},loc:{start:{line:138,column:24},end:{line:218,column:3}},line:138},"4":{name:"(anonymous_4)",decl:{start:{line:170,column:10},end:{line:170,column:11}},loc:{start:{line:170,column:20},end:{line:174,column:11}},line:170},"5":{name:"(anonymous_5)",decl:{start:{line:188,column:65},end:{line:188,column:66}},loc:{start:{line:188,column:77},end:{line:190,column:5}},line:188},"6":{name:"(anonymous_6)",decl:{start:{line:192,column:30},end:{line:192,column:31}},loc:{start:{line:192,column:40},end:{line:209,column:7}},line:192},"7":{name:"(anonymous_7)",decl:{start:{line:201,column:10},end:{line:201,column:11}},loc:{start:{line:201,column:20},end:{line:207,column:11}},line:201},"8":{name:"(anonymous_8)",decl:{start:{line:219,column:2},end:{line:219,column:3}},loc:{start:{line:219,column:20},end:{line:227,column:3}},line:219},"9":{name:"(anonymous_9)",decl:{start:{line:228,column:2},end:{line:228,column:3}},loc:{start:{line:228,column:27},end:{line:285,column:3}},line:228},"10":{name:"(anonymous_10)",decl:{start:{line:286,column:2},end:{line:286,column:3}},loc:{start:{line:286,column:20},end:{line:290,column:3}},line:286},"11":{name:"(anonymous_11)",decl:{start:{line:291,column:2},end:{line:291,column:3}},loc:{start:{line:291,column:41},end:{line:403,column:3}},line:291},"12":{name:"(anonymous_12)",decl:{start:{line:337,column:10},end:{line:337,column:11}},loc:{start:{line:337,column:26},end:{line:399,column:11}},line:337},"13":{name:"(anonymous_13)",decl:{start:{line:346,column:20},end:{line:346,column:21}},loc:{start:{line:346,column:30},end:{line:376,column:21}},line:346},"14":{name:"(anonymous_14)",decl:{start:{line:363,column:27},end:{line:363,column:28}},loc:{start:{line:363,column:40},end:{line:374,column:25}},line:363},"15":{name:"(anonymous_15)",decl:{start:{line:378,column:35},end:{line:378,column:36}},loc:{start:{line:378,column:51},end:{line:384,column:17}},line:378},"16":{name:"(anonymous_16)",decl:{start:{line:404,column:2},end:{line:404,column:3}},loc:{start:{line:404,column:56},end:{line:1508,column:3}},line:404},"17":{name:"(anonymous_17)",decl:{start:{line:418,column:10},end:{line:418,column:11}},loc:{start:{line:418,column:20},end:{line:424,column:11}},line:418},"18":{name:"(anonymous_18)",decl:{start:{line:428,column:10},end:{line:428,column:11}},loc:{start:{line:428,column:29},end:{line:541,column:11}},line:428},"19":{name:"(anonymous_19)",decl:{start:{line:516,column:18},end:{line:516,column:19}},loc:{start:{line:516,column:29},end:{line:525,column:13}},line:516},"20":{name:"(anonymous_20)",decl:{start:{line:547,column:12},end:{line:547,column:13}},loc:{start:{line:547,column:21},end:{line:556,column:13}},line:547},"21":{name:"(anonymous_21)",decl:{start:{line:573,column:12},end:{line:573,column:13}},loc:{start:{line:573,column:21},end:{line:582,column:13}},line:573},"22":{name:"(anonymous_22)",decl:{start:{line:597,column:12},end:{line:597,column:13}},loc:{start:{line:597,column:21},end:{line:606,column:13}},line:597},"23":{name:"(anonymous_23)",decl:{start:{line:623,column:12},end:{line:623,column:13}},loc:{start:{line:623,column:23},end:{line:673,column:13}},line:623},"24":{name:"(anonymous_24)",decl:{start:{line:675,column:27},end:{line:675,column:28}},loc:{start:{line:675,column:43},end:{line:677,column:9}},line:675},"25":{name:"(anonymous_25)",decl:{start:{line:681,column:10},end:{line:681,column:11}},loc:{start:{line:681,column:20},end:{line:687,column:11}},line:681},"26":{name:"(anonymous_26)",decl:{start:{line:704,column:16},end:{line:704,column:17}},loc:{start:{line:704,column:27},end:{line:771,column:17}},line:704},"27":{name:"(anonymous_27)",decl:{start:{line:784,column:16},end:{line:784,column:17}},loc:{start:{line:784,column:27},end:{line:804,column:17}},line:784},"28":{name:"(anonymous_28)",decl:{start:{line:824,column:16},end:{line:824,column:17}},loc:{start:{line:824,column:45},end:{line:869,column:17}},line:824},"29":{name:"(anonymous_29)",decl:{start:{line:872,column:16},end:{line:872,column:17}},loc:{start:{line:872,column:27},end:{line:880,column:17}},line:872},"30":{name:"(anonymous_30)",decl:{start:{line:893,column:16},end:{line:893,column:17}},loc:{start:{line:893,column:27},end:{line:908,column:17}},line:893},"31":{name:"(anonymous_31)",decl:{start:{line:929,column:16},end:{line:929,column:17}},loc:{start:{line:929,column:45},end:{line:961,column:17}},line:929},"32":{name:"(anonymous_32)",decl:{start:{line:964,column:16},end:{line:964,column:17}},loc:{start:{line:964,column:27},end:{line:986,column:17}},line:964},"33":{name:"(anonymous_33)",decl:{start:{line:1014,column:12},end:{line:1014,column:13}},loc:{start:{line:1014,column:42},end:{line:1032,column:13}},line:1014},"34":{name:"(anonymous_34)",decl:{start:{line:1026,column:24},end:{line:1026,column:25}},loc:{start:{line:1026,column:45},end:{line:1031,column:15}},line:1026},"35":{name:"(anonymous_35)",decl:{start:{line:1039,column:12},end:{line:1039,column:13}},loc:{start:{line:1039,column:43},end:{line:1070,column:13}},line:1039},"36":{name:"(anonymous_36)",decl:{start:{line:1073,column:12},end:{line:1073,column:13}},loc:{start:{line:1073,column:23},end:{line:1132,column:13}},line:1073},"37":{name:"(anonymous_37)",decl:{start:{line:1134,column:27},end:{line:1134,column:28}},loc:{start:{line:1134,column:43},end:{line:1136,column:9}},line:1134},"38":{name:"(anonymous_38)",decl:{start:{line:1154,column:14},end:{line:1154,column:15}},loc:{start:{line:1154,column:37},end:{line:1214,column:15}},line:1154},"39":{name:"(anonymous_39)",decl:{start:{line:1221,column:14},end:{line:1221,column:15}},loc:{start:{line:1221,column:34},end:{line:1293,column:15}},line:1221},"40":{name:"(anonymous_40)",decl:{start:{line:1250,column:58},end:{line:1250,column:59}},loc:{start:{line:1250,column:65},end:{line:1260,column:17}},line:1250},"41":{name:"(anonymous_41)",decl:{start:{line:1270,column:42},end:{line:1270,column:43}},loc:{start:{line:1270,column:55},end:{line:1291,column:19}},line:1270},"42":{name:"(anonymous_42)",decl:{start:{line:1296,column:14},end:{line:1296,column:15}},loc:{start:{line:1296,column:25},end:{line:1345,column:15}},line:1296},"43":{name:"(anonymous_43)",decl:{start:{line:1359,column:12},end:{line:1359,column:13}},loc:{start:{line:1359,column:22},end:{line:1480,column:13}},line:1359},"44":{name:"(anonymous_44)",decl:{start:{line:1407,column:20},end:{line:1407,column:21}},loc:{start:{line:1407,column:30},end:{line:1476,column:21}},line:1407},"45":{name:"(anonymous_45)",decl:{start:{line:1484,column:33},end:{line:1484,column:34}},loc:{start:{line:1484,column:53},end:{line:1488,column:11}},line:1484}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:57,column:3}},type:"switch",locations:[{start:{line:30,column:2},end:{line:31,column:33}},{start:{line:32,column:2},end:{line:33,column:30}},{start:{line:34,column:2},end:{line:35,column:30}},{start:{line:36,column:2},end:{line:37,column:37}},{start:{line:38,column:2},end:{line:39,column:32}},{start:{line:40,column:2},end:{line:41,column:47}},{start:{line:42,column:2},end:{line:43,column:37}},{start:{line:44,column:2},end:{line:45,column:39}},{start:{line:46,column:2},end:{line:48,column:41}},{start:{line:49,column:2},end:{line:50,column:49}},{start:{line:51,column:2},end:{line:52,column:40}}],line:29},"1":{loc:{start:{line:83,column:2},end:{line:110,column:3}},type:"switch",locations:[{start:{line:84,column:2},end:{line:85,column:21}},{start:{line:86,column:2},end:{line:87,column:22}},{start:{line:88,column:2},end:{line:89,column:29}},{start:{line:90,column:2},end:{line:91,column:22}},{start:{line:92,column:2},end:{line:93,column:23}},{start:{line:94,column:2},end:{line:95,column:22}},{start:{line:96,column:2},end:{line:97,column:23}},{start:{line:98,column:2},end:{line:99,column:24}},{start:{line:100,column:2},end:{line:101,column:24}},{start:{line:102,column:2},end:{line:103,column:25}},{start:{line:104,column:2},end:{line:105,column:26}}],line:83},"2":{loc:{start:{line:156,column:4},end:{line:184,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:184,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:156},"3":{loc:{start:{line:156,column:8},end:{line:156,column:64}},type:"binary-expr",locations:[{start:{line:156,column:8},end:{line:156,column:43}},{start:{line:156,column:47},end:{line:156,column:64}}],line:156},"4":{loc:{start:{line:158,column:35},end:{line:158,column:68}},type:"binary-expr",locations:[{start:{line:158,column:35},end:{line:158,column:47}},{start:{line:158,column:51},end:{line:158,column:68}}],line:158},"5":{loc:{start:{line:163,column:6},end:{line:183,column:7}},type:"if",locations:[{start:{line:163,column:6},end:{line:183,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:163},"6":{loc:{start:{line:171,column:12},end:{line:173,column:13}},type:"if",locations:[{start:{line:171,column:12},end:{line:173,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:171},"7":{loc:{start:{line:188,column:4},end:{line:210,column:5}},type:"if",locations:[{start:{line:188,column:4},end:{line:210,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:188},"8":{loc:{start:{line:188,column:8},end:{line:190,column:6}},type:"binary-expr",locations:[{start:{line:188,column:8},end:{line:188,column:40}},{start:{line:188,column:44},end:{line:190,column:6}}],line:188},"9":{loc:{start:{line:202,column:12},end:{line:204,column:13}},type:"if",locations:[{start:{line:202,column:12},end:{line:204,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:202},"10":{loc:{start:{line:212,column:13},end:{line:216,column:22}},type:"cond-expr",locations:[{start:{line:213,column:10},end:{line:213,column:16}},{start:{line:214,column:10},end:{line:216,column:22}}],line:212},"11":{loc:{start:{line:214,column:10},end:{line:216,column:22}},type:"cond-expr",locations:[{start:{line:215,column:12},end:{line:215,column:16}},{start:{line:216,column:12},end:{line:216,column:22}}],line:214},"12":{loc:{start:{line:230,column:4},end:{line:239,column:5}},type:"if",locations:[{start:{line:230,column:4},end:{line:239,column:5}},{start:{line:232,column:11},end:{line:239,column:5}}],line:230},"13":{loc:{start:{line:230,column:8},end:{line:230,column:63}},type:"binary-expr",locations:[{start:{line:230,column:8},end:{line:230,column:35}},{start:{line:230,column:39},end:{line:230,column:63}}],line:230},"14":{loc:{start:{line:250,column:19},end:{line:250,column:69}},type:"cond-expr",locations:[{start:{line:250,column:49},end:{line:250,column:54}},{start:{line:250,column:57},end:{line:250,column:69}}],line:250},"15":{loc:{start:{line:260,column:4},end:{line:284,column:5}},type:"if",locations:[{start:{line:260,column:4},end:{line:284,column:5}},{start:{line:272,column:11},end:{line:284,column:5}}],line:260},"16":{loc:{start:{line:272,column:11},end:{line:284,column:5}},type:"if",locations:[{start:{line:272,column:11},end:{line:284,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:272},"17":{loc:{start:{line:293,column:19},end:{line:293,column:69}},type:"cond-expr",locations:[{start:{line:293,column:49},end:{line:293,column:54}},{start:{line:293,column:57},end:{line:293,column:69}}],line:293},"18":{loc:{start:{line:298,column:15},end:{line:302,column:21}},type:"cond-expr",locations:[{start:{line:299,column:12},end:{line:301,column:32}},{start:{line:302,column:12},end:{line:302,column:21}}],line:298},"19":{loc:{start:{line:299,column:12},end:{line:301,column:32}},type:"cond-expr",locations:[{start:{line:300,column:14},end:{line:300,column:33}},{start:{line:301,column:14},end:{line:301,column:32}}],line:299},"20":{loc:{start:{line:304,column:8},end:{line:304,column:54}},type:"binary-expr",locations:[{start:{line:304,column:8},end:{line:304,column:41}},{start:{line:304,column:45},end:{line:304,column:54}}],line:304},"21":{loc:{start:{line:313,column:9},end:{line:322,column:14}},type:"cond-expr",locations:[{start:{line:314,column:10},end:{line:321,column:9}},{start:{line:322,column:10},end:{line:322,column:14}}],line:313},"22":{loc:{start:{line:323,column:9},end:{line:332,column:14}},type:"cond-expr",locations:[{start:{line:324,column:10},end:{line:331,column:9}},{start:{line:332,column:10},end:{line:332,column:14}}],line:323},"23":{loc:{start:{line:323,column:10},end:{line:323,column:65}},type:"binary-expr",locations:[{start:{line:323,column:10},end:{line:323,column:34}},{start:{line:323,column:38},end:{line:323,column:65}}],line:323},"24":{loc:{start:{line:368,column:30},end:{line:370,column:37}},type:"cond-expr",locations:[{start:{line:369,column:34},end:{line:369,column:57}},{start:{line:370,column:34},end:{line:370,column:37}}],line:368},"25":{loc:{start:{line:380,column:30},end:{line:382,column:33}},type:"cond-expr",locations:[{start:{line:381,column:24},end:{line:381,column:28}},{start:{line:382,column:24},end:{line:382,column:33}}],line:380},"26":{loc:{start:{line:413,column:13},end:{line:413,column:64}},type:"binary-expr",locations:[{start:{line:413,column:13},end:{line:413,column:46}},{start:{line:413,column:50},end:{line:413,column:64}}],line:413},"27":{loc:{start:{line:459,column:29},end:{line:459,column:72}},type:"cond-expr",locations:[{start:{line:459,column:45},end:{line:459,column:60}},{start:{line:459,column:63},end:{line:459,column:72}}],line:459},"28":{loc:{start:{line:466,column:39},end:{line:468,column:17}},type:"cond-expr",locations:[{start:{line:467,column:16},end:{line:467,column:54}},{start:{line:468,column:16},end:{line:468,column:17}}],line:466},"29":{loc:{start:{line:474,column:39},end:{line:476,column:25}},type:"cond-expr",locations:[{start:{line:475,column:16},end:{line:475,column:54}},{start:{line:476,column:16},end:{line:476,column:25}}],line:474},"30":{loc:{start:{line:494,column:41},end:{line:496,column:17}},type:"cond-expr",locations:[{start:{line:495,column:16},end:{line:495,column:56}},{start:{line:496,column:16},end:{line:496,column:17}}],line:494},"31":{loc:{start:{line:503,column:37},end:{line:505,column:29}},type:"cond-expr",locations:[{start:{line:504,column:16},end:{line:504,column:52}},{start:{line:505,column:16},end:{line:505,column:29}}],line:503},"32":{loc:{start:{line:518,column:21},end:{line:524,column:17}},type:"cond-expr",locations:[{start:{line:519,column:18},end:{line:521,column:17}},{start:{line:522,column:18},end:{line:524,column:17}}],line:518},"33":{loc:{start:{line:530,column:12},end:{line:540,column:13}},type:"switch",locations:[{start:{line:531,column:12},end:{line:533,column:20}},{start:{line:534,column:12},end:{line:537,column:13}},{start:{line:537,column:14},end:{line:539,column:20}}],line:530},"34":{loc:{start:{line:652,column:14},end:{line:654,column:15}},type:"if",locations:[{start:{line:652,column:14},end:{line:654,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:652},"35":{loc:{start:{line:701,column:24},end:{line:701,column:51}},type:"binary-expr",locations:[{start:{line:701,column:24},end:{line:701,column:29}},{start:{line:701,column:33},end:{line:701,column:51}}],line:701},"36":{loc:{start:{line:721,column:18},end:{line:723,column:19}},type:"if",locations:[{start:{line:721,column:18},end:{line:723,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:721},"37":{loc:{start:{line:732,column:18},end:{line:740,column:19}},type:"if",locations:[{start:{line:732,column:18},end:{line:740,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:732},"38":{loc:{start:{line:744,column:18},end:{line:748,column:19}},type:"if",locations:[{start:{line:744,column:18},end:{line:748,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:744},"39":{loc:{start:{line:792,column:18},end:{line:802,column:19}},type:"if",locations:[{start:{line:792,column:18},end:{line:802,column:19}},{start:{line:800,column:25},end:{line:802,column:19}}],line:792},"40":{loc:{start:{line:835,column:37},end:{line:840,column:24}},type:"binary-expr",locations:[{start:{line:835,column:37},end:{line:840,column:19}},{start:{line:840,column:23},end:{line:840,column:24}}],line:835},"41":{loc:{start:{line:847,column:43},end:{line:851,column:23}},type:"cond-expr",locations:[{start:{line:848,column:22},end:{line:850,column:21}},{start:{line:851,column:22},end:{line:851,column:23}}],line:847},"42":{loc:{start:{line:853,column:37},end:{line:857,column:38}},type:"cond-expr",locations:[{start:{line:854,column:22},end:{line:856,column:21}},{start:{line:857,column:22},end:{line:857,column:38}}],line:853},"43":{loc:{start:{line:859,column:18},end:{line:867,column:19}},type:"if",locations:[{start:{line:859,column:18},end:{line:867,column:19}},{start:{line:865,column:25},end:{line:867,column:19}}],line:859},"44":{loc:{start:{line:947,column:18},end:{line:959,column:19}},type:"if",locations:[{start:{line:947,column:18},end:{line:959,column:19}},{start:{line:957,column:25},end:{line:959,column:19}}],line:947},"45":{loc:{start:{line:978,column:18},end:{line:980,column:19}},type:"if",locations:[{start:{line:978,column:18},end:{line:980,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:978},"46":{loc:{start:{line:1055,column:40},end:{line:1059,column:19}},type:"cond-expr",locations:[{start:{line:1056,column:18},end:{line:1058,column:17}},{start:{line:1059,column:18},end:{line:1059,column:19}}],line:1055},"47":{loc:{start:{line:1060,column:14},end:{line:1068,column:15}},type:"if",locations:[{start:{line:1060,column:14},end:{line:1068,column:15}},{start:{line:1066,column:21},end:{line:1068,column:15}}],line:1060},"48":{loc:{start:{line:1104,column:14},end:{line:1106,column:15}},type:"if",locations:[{start:{line:1104,column:14},end:{line:1106,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1104},"49":{loc:{start:{line:1170,column:41},end:{line:1174,column:21}},type:"cond-expr",locations:[{start:{line:1171,column:20},end:{line:1173,column:19}},{start:{line:1174,column:20},end:{line:1174,column:21}}],line:1170},"50":{loc:{start:{line:1176,column:31},end:{line:1178,column:36}},type:"cond-expr",locations:[{start:{line:1177,column:20},end:{line:1177,column:47}},{start:{line:1178,column:20},end:{line:1178,column:36}}],line:1176},"51":{loc:{start:{line:1193,column:45},end:{line:1195,column:21}},type:"cond-expr",locations:[{start:{line:1194,column:20},end:{line:1194,column:60}},{start:{line:1195,column:20},end:{line:1195,column:21}}],line:1193},"52":{loc:{start:{line:1197,column:16},end:{line:1209,column:17}},type:"if",locations:[{start:{line:1197,column:16},end:{line:1209,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1197},"53":{loc:{start:{line:1254,column:20},end:{line:1256,column:43}},type:"cond-expr",locations:[{start:{line:1255,column:24},end:{line:1255,column:43}},{start:{line:1256,column:24},end:{line:1256,column:43}}],line:1254},"54":{loc:{start:{line:1280,column:33},end:{line:1282,column:43}},type:"cond-expr",locations:[{start:{line:1281,column:28},end:{line:1281,column:53}},{start:{line:1282,column:28},end:{line:1282,column:43}}],line:1280},"55":{loc:{start:{line:1283,column:31},end:{line:1285,column:31}},type:"cond-expr",locations:[{start:{line:1284,column:28},end:{line:1284,column:69}},{start:{line:1285,column:28},end:{line:1285,column:31}}],line:1283},"56":{loc:{start:{line:1310,column:16},end:{line:1312,column:17}},type:"if",locations:[{start:{line:1310,column:16},end:{line:1312,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1310},"57":{loc:{start:{line:1395,column:16},end:{line:1403,column:20}},type:"cond-expr",locations:[{start:{line:1396,column:20},end:{line:1396,column:22}},{start:{line:1397,column:20},end:{line:1403,column:20}}],line:1395},"58":{loc:{start:{line:1395,column:16},end:{line:1395,column:55}},type:"binary-expr",locations:[{start:{line:1395,column:16},end:{line:1395,column:33}},{start:{line:1395,column:37},end:{line:1395,column:55}}],line:1395},"59":{loc:{start:{line:1448,column:22},end:{line:1463,column:23}},type:"if",locations:[{start:{line:1448,column:22},end:{line:1463,column:23}},{start:{line:1457,column:29},end:{line:1463,column:23}}],line:1448},"60":{loc:{start:{line:1449,column:24},end:{line:1450,column:57}},type:"binary-expr",locations:[{start:{line:1449,column:24},end:{line:1449,column:56}},{start:{line:1450,column:24},end:{line:1450,column:57}}],line:1449},"61":{loc:{start:{line:1495,column:4},end:{line:1505,column:5}},type:"if",locations:[{start:{line:1495,column:4},end:{line:1505,column:5}},{start:{line:1497,column:11},end:{line:1505,column:5}}],line:1495},"62":{loc:{start:{line:1495,column:8},end:{line:1495,column:30}},type:"binary-expr",locations:[{start:{line:1495,column:8},end:{line:1495,column:21}},{start:{line:1495,column:25},end:{line:1495,column:30}}],line:1495}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},b:{"0":[0,0,0,0,0,0,0,0,0,0,0],"1":[0,0,0,0,0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8ef983da8757e26b7cc97513e2dbf22e464f138e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_24tv8o6xo1=function(){return actualCoverage;};}return actualCoverage;}cov_24tv8o6xo1();import{$e,$$e}from'../utils/templateUtils.js';import{jml,toStringTag}from'../vendor-imports.js';import dialogs from'../utils/dialogs.js';const dataViewMethods=(/** @type {const} */cov_24tv8o6xo1().s[0]++,['setInt8','setUint8','setInt16','setUint16','setInt32','setUint32','setFloat32','setFloat64','setBigInt64','setBigUint64']);const typedArrays=(/** @type {const} */cov_24tv8o6xo1().s[1]++,['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']);/**
 * @param {TypedArray} typedArray
 * @returns {{min: number, max: number}}
 */cov_24tv8o6xo1().s[2]++;const getMinMaxForTypedArray=typedArray=>{cov_24tv8o6xo1().f[0]++;cov_24tv8o6xo1().s[3]++;switch(typedArray){case'Int8Array':cov_24tv8o6xo1().b[0][0]++;cov_24tv8o6xo1().s[4]++;return{min:-128,max:127};case'Uint8Array':cov_24tv8o6xo1().b[0][1]++;cov_24tv8o6xo1().s[5]++;return{min:0,max:255};case'Uint8ClampedArray':cov_24tv8o6xo1().b[0][2]++;cov_24tv8o6xo1().s[6]++;return{min:0,max:255};case'Int16Array':cov_24tv8o6xo1().b[0][3]++;cov_24tv8o6xo1().s[7]++;return{min:-32768,max:32767};case'Uint16Array':cov_24tv8o6xo1().b[0][4]++;cov_24tv8o6xo1().s[8]++;return{min:0,max:65535};case'Int32Array':cov_24tv8o6xo1().b[0][5]++;cov_24tv8o6xo1().s[9]++;return{min:-2147483648,max:2147483647};case'Uint32Array':cov_24tv8o6xo1().b[0][6]++;cov_24tv8o6xo1().s[10]++;return{min:0,max:4294967295};case'Float32Array':cov_24tv8o6xo1().b[0][7]++;cov_24tv8o6xo1().s[11]++;return{min:-3.4e38,max:3.4e38};case'Float64Array':cov_24tv8o6xo1().b[0][8]++;cov_24tv8o6xo1().s[12]++;// eslint-disable-next-line no-loss-of-precision -- Inevitable?
return{min:-1.8e308,max:1.8e308};case'BigInt64Array':cov_24tv8o6xo1().b[0][9]++;cov_24tv8o6xo1().s[13]++;return{min:-(2**63),max:2**63-1};case'BigUint64Array':cov_24tv8o6xo1().b[0][10]++;cov_24tv8o6xo1().s[14]++;return{min:0,max:2**64-1};/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected typed array type');}};/**
 * @typedef {"Int8Array"|"Uint8Array"|"Uint8ClampedArray"|
 *   "Int16Array"|"Uint16Array"|"Int32Array"|"Uint32Array"|
 *   "Float32Array"|"Float64Array"|"BigInt64Array"|
 *   "BigUint64Array"} TypedArray
 */ /**
 * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|
 *   Int16Array|Uint16Array|Int32Array|Uint32Array|
*   Float32Array|Float64Array|BigInt64Array|
*   BigUint64Array} TypedArrayInstance
 */ /**
 * @param {TypedArray} prop
 * @returns {Int8ArrayConstructor|Uint8ArrayConstructor|
 *   Uint8ClampedArrayConstructor|Int16ArrayConstructor|
 *   Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|
 *   Float32ArrayConstructor|Float64ArrayConstructor|
 *   BigInt64ArrayConstructor|BigUint64ArrayConstructor}
 */cov_24tv8o6xo1().s[15]++;const getTypedArray=prop=>{cov_24tv8o6xo1().f[1]++;cov_24tv8o6xo1().s[16]++;switch(prop){case'Int8Array':cov_24tv8o6xo1().b[1][0]++;cov_24tv8o6xo1().s[17]++;return Int8Array;case'Uint8Array':cov_24tv8o6xo1().b[1][1]++;cov_24tv8o6xo1().s[18]++;return Uint8Array;case'Uint8ClampedArray':cov_24tv8o6xo1().b[1][2]++;cov_24tv8o6xo1().s[19]++;return Uint8ClampedArray;case'Int16Array':cov_24tv8o6xo1().b[1][3]++;cov_24tv8o6xo1().s[20]++;return Int16Array;case'Uint16Array':cov_24tv8o6xo1().b[1][4]++;cov_24tv8o6xo1().s[21]++;return Uint16Array;case'Int32Array':cov_24tv8o6xo1().b[1][5]++;cov_24tv8o6xo1().s[22]++;return Int32Array;case'Uint32Array':cov_24tv8o6xo1().b[1][6]++;cov_24tv8o6xo1().s[23]++;return Uint32Array;case'Float32Array':cov_24tv8o6xo1().b[1][7]++;cov_24tv8o6xo1().s[24]++;return Float32Array;case'Float64Array':cov_24tv8o6xo1().b[1][8]++;cov_24tv8o6xo1().s[25]++;return Float64Array;case'BigInt64Array':cov_24tv8o6xo1().b[1][9]++;cov_24tv8o6xo1().s[26]++;return BigInt64Array;case'BigUint64Array':cov_24tv8o6xo1().b[1][10]++;cov_24tv8o6xo1().s[27]++;return BigUint64Array;/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected type');}};const bufferSourceClasses=(cov_24tv8o6xo1().s[28]++,new Set(['ArrayBuffer','DataView','Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']));let idx=(cov_24tv8o6xo1().s[29]++,0);/**
 * @type {import('../types.js').SuperTypeObject}
 */const buffersourceType=(cov_24tv8o6xo1().s[30]++,{option:['Buffer source (ArrayBuffer, DataView, TypedArrays)'],childTypes:['arraybuffer','dataview','int8array','uint8array','uint8clampedarray','int16array','uint16array','int32array','uint32array','float32array','float64array','bigint64array','biguint64array'],stringRegex:/^(?<bufferSourceClass>ArrayBuffer|DataView|(?:Int8|Uint8|Uint8Clamped|Int16|Uint16|Int32|Uint32|Float32|Float64|BigInt64|BigUint64)Array)\((?<innerContent>.*)\)$/u,valueMatch(x){cov_24tv8o6xo1().f[2]++;cov_24tv8o6xo1().s[31]++;return bufferSourceClasses.has(toStringTag(x));},toValue(s,rootInfo){cov_24tv8o6xo1().f[3]++;/* istanbul ignore next -- Should always be found */const{groups:{bufferSourceClass}={}}=/** @type {RegExpMatchArray} */ /** @type {import('../types.js').RootInfo} */rootInfo.match;const o=(cov_24tv8o6xo1().s[32]++,JSON.parse(s));const{byteLength,maxByteLength,byteOffset,dataViewByteOffset,dataViewByteLength,length}=(cov_24tv8o6xo1().s[33]++,o);// @ts-expect-error Ok
const buffer=(cov_24tv8o6xo1().s[34]++,new ArrayBuffer(byteLength,{maxByteLength}));let typedArray,TypedArray;cov_24tv8o6xo1().s[35]++;if((cov_24tv8o6xo1().b[3][0]++,bufferSourceClass.endsWith('Array'))||(cov_24tv8o6xo1().b[3][1]++,'typedArray'in o)){cov_24tv8o6xo1().b[2][0]++;cov_24tv8o6xo1().s[36]++;TypedArray=getTypedArray(/** @type {TypedArray} */(cov_24tv8o6xo1().b[4][0]++,o.typedArray)??(cov_24tv8o6xo1().b[4][1]++,bufferSourceClass));cov_24tv8o6xo1().s[37]++;typedArray=new TypedArray(buffer,byteOffset,length);cov_24tv8o6xo1().s[38]++;if('set'in o){cov_24tv8o6xo1().b[5][0]++;cov_24tv8o6xo1().s[39]++;o.set[0].forEach(/**
           * @param {string} s
           * @param {number} i
           * @returns {void}
           */(s,i)=>{cov_24tv8o6xo1().f[4]++;cov_24tv8o6xo1().s[40]++;if(typeof s==='string'){cov_24tv8o6xo1().b[6][0]++;cov_24tv8o6xo1().s[41]++;o.set[0][i]=BigInt(s);}else{cov_24tv8o6xo1().b[6][1]++;}});cov_24tv8o6xo1().s[42]++;typedArray.set(...(/**
           * @type {[
           *   array: Array<bigint> & Array<number>,
           *   offset?: number | undefined
           * ]}
           */o.set));}else{cov_24tv8o6xo1().b[5][1]++;}}else{cov_24tv8o6xo1().b[2][1]++;}/** @type {DataView|undefined} */let view;cov_24tv8o6xo1().s[43]++;if((cov_24tv8o6xo1().b[8][0]++,bufferSourceClass==='DataView')||(cov_24tv8o6xo1().b[8][1]++,dataViewMethods.some(method=>{cov_24tv8o6xo1().f[5]++;cov_24tv8o6xo1().s[44]++;return method in o;}))){cov_24tv8o6xo1().b[7][0]++;cov_24tv8o6xo1().s[45]++;view=new DataView(buffer,dataViewByteOffset,dataViewByteLength);cov_24tv8o6xo1().s[46]++;dataViewMethods.forEach(prop=>{cov_24tv8o6xo1().f[6]++;cov_24tv8o6xo1().s[47]++;o[prop]?.forEach(/**
           * @type {(info: [
           *   byteOffset: number,
           *   value: bigint|number,
           *   littleEndian?: boolean|undefined
           * ]) => void}
           */vals=>{cov_24tv8o6xo1().f[7]++;cov_24tv8o6xo1().s[48]++;if(typeof vals[1]==='string'){cov_24tv8o6xo1().b[9][0]++;cov_24tv8o6xo1().s[49]++;vals[1]=BigInt(vals[1]);}else{cov_24tv8o6xo1().b[9][1]++;}// @ts-expect-error It's ok
cov_24tv8o6xo1().s[50]++;view[prop](...vals);});});}else{cov_24tv8o6xo1().b[7][1]++;}cov_24tv8o6xo1().s[51]++;return{value:bufferSourceClass==='ArrayBuffer'?(cov_24tv8o6xo1().b[10][0]++,buffer):(cov_24tv8o6xo1().b[10][1]++,bufferSourceClass==='DataView'?(cov_24tv8o6xo1().b[11][0]++,view):(cov_24tv8o6xo1().b[11][1]++,typedArray))};},getInput({root}){cov_24tv8o6xo1().f[8]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[52]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[53]++;return byteLength;},setValue({root,value}){cov_24tv8o6xo1().f[9]++;const stringTag=(cov_24tv8o6xo1().s[54]++,toStringTag(value));cov_24tv8o6xo1().s[55]++;if((cov_24tv8o6xo1().b[13][0]++,stringTag==='ArrayBuffer')||(cov_24tv8o6xo1().b[13][1]++,stringTag==='DataView')){cov_24tv8o6xo1().b[12][0]++;cov_24tv8o6xo1().s[56]++;$e(root,`[value=${stringTag}].buffersource-returnType`)?.click();}else{cov_24tv8o6xo1().b[12][1]++;cov_24tv8o6xo1().s[57]++;$e(root,`[value=TypedArray].buffersource-returnType`)?.click();const typedArrays=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[58]++,$e(root,'.buffersource-typedArrays'));cov_24tv8o6xo1().s[59]++;typedArrays.value=stringTag;cov_24tv8o6xo1().s[60]++;typedArrays.dispatchEvent(new Event('change'));}const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[61]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[62]++;byteLength.$value=value;const buffer=(cov_24tv8o6xo1().s[63]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[14][0]++,value):(cov_24tv8o6xo1().b[14][1]++,value.buffer));cov_24tv8o6xo1().s[64]++;byteLength.value=buffer.byteLength;cov_24tv8o6xo1().s[65]++;byteLength.dispatchEvent(new Event('change'));const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[66]++,$e(root,'.maxByteLength'));cov_24tv8o6xo1().s[67]++;maxByteLength.value=buffer.maxByteLength;cov_24tv8o6xo1().s[68]++;maxByteLength.dispatchEvent(new Event('change'));cov_24tv8o6xo1().s[69]++;if(stringTag==='DataView'){cov_24tv8o6xo1().b[15][0]++;const dataViewByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[70]++,$e(root,'.dataViewByteLength'));cov_24tv8o6xo1().s[71]++;dataViewByteLength.value=value.byteLength;cov_24tv8o6xo1().s[72]++;dataViewByteLength.dispatchEvent(new Event('change'));const dataViewByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[73]++,$e(root,'.dataViewByteOffset'));cov_24tv8o6xo1().s[74]++;dataViewByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[75]++;dataViewByteOffset.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[15][1]++;cov_24tv8o6xo1().s[76]++;if(stringTag!=='ArrayBuffer'){cov_24tv8o6xo1().b[16][0]++;// TypedArray
const typedArrayByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[77]++,$e(root,'.typedArrayByteOffset'));cov_24tv8o6xo1().s[78]++;typedArrayByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[79]++;typedArrayByteOffset.dispatchEvent(new Event('change'));const typedArrayLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[80]++,$e(root,'.typedArrayLength'));cov_24tv8o6xo1().s[81]++;typedArrayLength.value=value.length;cov_24tv8o6xo1().s[82]++;typedArrayLength.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[16][1]++;}}},getValue({root}){cov_24tv8o6xo1().f[10]++;cov_24tv8o6xo1().s[83]++;return/** @type {HTMLInputElement & {$value: BufferSource}} */this.getInput({root}).$value;},viewUI({value,specificSchemaObject}){cov_24tv8o6xo1().f[11]++;const stringTag=(cov_24tv8o6xo1().s[84]++,toStringTag(value));const buffer=(cov_24tv8o6xo1().s[85]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[17][0]++,value):(cov_24tv8o6xo1().b[17][1]++,value.buffer));cov_24tv8o6xo1().s[86]++;return['div',{dataset:{type:'buffersource'}},[['b',{class:'emphasis',title:specificSchemaObject?.description?(cov_24tv8o6xo1().b[18][0]++,/^[aeiou]/iu.test(stringTag)?(cov_24tv8o6xo1().b[19][0]++,`(an ${stringTag})`):(cov_24tv8o6xo1().b[19][1]++,`(a ${stringTag})`)):(cov_24tv8o6xo1().b[18][1]++,undefined)},[(cov_24tv8o6xo1().b[20][0]++,specificSchemaObject?.description)??(cov_24tv8o6xo1().b[20][1]++,stringTag)]],['br'],['b',['Buffer byte length: ']],buffer.byteLength,['br'],['b',['Buffer max byte length: ']],buffer.maxByteLength,...(stringTag==='DataView'?(cov_24tv8o6xo1().b[21][0]++,[['br'],['b',['Data View byte length: ']],value.byteLength,['br'],['b',['Data View byte offset: ']],value.byteOffset]):(cov_24tv8o6xo1().b[21][1]++,[''])),...((cov_24tv8o6xo1().b[23][0]++,stringTag!=='DataView')&&(cov_24tv8o6xo1().b[23][1]++,stringTag!=='ArrayBuffer')// TypedArray
?(cov_24tv8o6xo1().b[22][0]++,[['br'],['b',['Typed Array byte offset: ']],value.byteOffset,['br'],['b',['Typed Array length: ']],value.length]):(cov_24tv8o6xo1().b[22][1]++,[''])),['br'],['button',{class:'buffersource-viewData',$on:{async click(e){cov_24tv8o6xo1().f[12]++;cov_24tv8o6xo1().s[87]++;e.preventDefault();const dialog=(cov_24tv8o6xo1().s[88]++,await dialogs.makeCancelDialog({// @ts-expect-error TS bug
children:(/** @type {import('jamilih').JamilihChildren} */[['select',{class:'buffersource-typedArrays-view','aria-label':'Typed Arrays',$on:{change(){cov_24tv8o6xo1().f[13]++;const typedArrayVal=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[89]++,this.value);const TypedArray=(cov_24tv8o6xo1().s[90]++,getTypedArray(/** @type {TypedArray} */typedArrayVal));const typedArray=(cov_24tv8o6xo1().s[91]++,new TypedArray(buffer));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[92]++,$e(/** @type {HTMLElement} */this.parentElement,'.typedArrayArea'));cov_24tv8o6xo1().s[93]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[94]++;typedArrayArea.append(...Array.from({length:typedArray.length},(_v,key)=>{cov_24tv8o6xo1().f[14]++;cov_24tv8o6xo1().s[95]++;return jml('span',[['b',[key]],' ',['span',[typedArray[key]?(cov_24tv8o6xo1().b[24][0]++,String(typedArray[key])):(cov_24tv8o6xo1().b[24][1]++,'0')]],' ']);}));}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[15]++;cov_24tv8o6xo1().s[96]++;return['option',{selected:stringTag===typedArray?(cov_24tv8o6xo1().b[25][0]++,true):(cov_24tv8o6xo1().b[25][1]++,undefined)},[typedArray]];})],['div',{class:'typedArrayArea'}]])}));/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[97]++;$e(dialog,'.buffersource-typedArrays-view').dispatchEvent(new Event('change'));// Todo: We could also add `DataView` get methods here
//        (and length/byte offset for the typed array) if
//        there is a demand
}}},['View data']]]];},editUI({typeNamespace,specificSchemaObject,value}){cov_24tv8o6xo1().f[16]++;cov_24tv8o6xo1().s[98]++;idx++;/**
     * @typedef {() => void} BuildInstances
     */const div=(cov_24tv8o6xo1().s[99]++,jml('div',{dataset:{type:'buffersource'},title:(cov_24tv8o6xo1().b[26][0]++,specificSchemaObject?.description)??(cov_24tv8o6xo1().b[26][1]++,'BufferSource')},[['fieldset',{class:'returnType',$on:{change(){cov_24tv8o6xo1().f[17]++;cov_24tv8o6xo1().s[100]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.$buildInstances();}},$custom:{/** @type {BuildInstances} */$buildInstances(){cov_24tv8o6xo1().f[18]++;const that=(/**
            * @type {HTMLFieldSetElement & {
            *   $buildInstances: BuildInstances
            * }}
            */cov_24tv8o6xo1().s[101]++,this);const ancestor=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[102]++,that.parentElement);const{value}=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[103]++,$e(that,`[name=${typeNamespace}-buffersource-returnType-${idx}]`+`:checked`));const byteLength=(/**
               * @type {HTMLInputElement & {
               *   $value: BufferSource,
               *   $dataView: DataView,
               *   $typedArray: TypedArrayInstance
               * }}
               */cov_24tv8o6xo1().s[104]++,$e(ancestor,'.byteLength'));const byteLengthVal=(cov_24tv8o6xo1().s[105]++,Number.parseInt(byteLength.value));const maxByteLength=(cov_24tv8o6xo1().s[106]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.maxByteLength').value));const buffer=(cov_24tv8o6xo1().s[107]++,new ArrayBuffer(// @ts-expect-error New ArrayBuffer argument
byteLengthVal,maxByteLength?(cov_24tv8o6xo1().b[27][0]++,{maxByteLength}):(cov_24tv8o6xo1().b[27][1]++,undefined)));const dataViewByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[108]++,$e(ancestor,'.dataViewByteOffset').value);const dataViewByteOffset=(cov_24tv8o6xo1().s[109]++,dataViewByteOffsetVal?(cov_24tv8o6xo1().b[28][0]++,Number.parseInt(dataViewByteOffsetVal)):(cov_24tv8o6xo1().b[28][1]++,0));const dataViewByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[110]++,$e(ancestor,'.dataViewByteLength').value);const dataViewByteLength=(cov_24tv8o6xo1().s[111]++,dataViewByteLengthVal?(cov_24tv8o6xo1().b[29][0]++,Number.parseInt(dataViewByteLengthVal)):(cov_24tv8o6xo1().b[29][1]++,undefined));const dataView=(cov_24tv8o6xo1().s[112]++,new DataView(buffer,dataViewByteOffset,dataViewByteLength));const{value:typedArrayValue}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[113]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[114]++,getTypedArray(/** @type {TypedArray} */typedArrayValue));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[115]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[116]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[30][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[30][1]++,0));const typedArrayLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[117]++,$e(ancestor,'.typedArrayLength').value);const typedArrayLength=(cov_24tv8o6xo1().s[118]++,typedArrayLengthVal?(cov_24tv8o6xo1().b[31][0]++,Number.parseInt(typedArrayLengthVal)):(cov_24tv8o6xo1().b[31][1]++,byteLengthVal));const typedArray=(cov_24tv8o6xo1().s[119]++,new TypedArray(buffer,typedArrayByteOffset,typedArrayLength));cov_24tv8o6xo1().s[120]++;byteLength.$dataView=dataView;cov_24tv8o6xo1().s[121]++;byteLength.$typedArray=typedArray;const typedArrayValues=(cov_24tv8o6xo1().s[122]++,$$e(ancestor,'.typedArrayArea .typedArrayValue').map(input=>{cov_24tv8o6xo1().f[19]++;cov_24tv8o6xo1().s[123]++;// Don't check dataset, as may be changing to BigInt now
return TypedArray.name.startsWith('Big')?(cov_24tv8o6xo1().b[32][0]++,BigInt(/** @type {HTMLInputElement} */input.value)):(cov_24tv8o6xo1().b[32][1]++,Number(/** @type {HTMLInputElement} */input.value));}));// @ts-expect-error Ok
cov_24tv8o6xo1().s[124]++;byteLength.$typedArray.set(typedArrayValues,0);cov_24tv8o6xo1().s[125]++;switch(value){case'ArrayBuffer':cov_24tv8o6xo1().b[33][0]++;cov_24tv8o6xo1().s[126]++;byteLength.$value=buffer;cov_24tv8o6xo1().s[127]++;break;case'DataView':cov_24tv8o6xo1().b[33][1]++;{cov_24tv8o6xo1().s[128]++;byteLength.$value=dataView;cov_24tv8o6xo1().s[129]++;break;}default:cov_24tv8o6xo1().b[33][2]++;cov_24tv8o6xo1().s[130]++;// 'TypedArray'
byteLength.$value=typedArray;cov_24tv8o6xo1().s[131]++;break;}}}},[['legend',['Return type']],['label',{$on:{click(){cov_24tv8o6xo1().f[20]++;cov_24tv8o6xo1().s[132]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[133]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType '+'buffersource-returnType-arraybuffer',name:`${typeNamespace}-buffersource-returnType-${idx}`,checked:true,value:'ArrayBuffer'// checked: toStringTag(value) !== ''
}],'ArrayBuffer']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[21]++;cov_24tv8o6xo1().s[134]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[135]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-dataview',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'DataView'// checked: toStringTag(value) !== ''
}],'DataView']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[22]++;cov_24tv8o6xo1().s[136]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=false;/** @type {HTMLElement} */cov_24tv8o6xo1().s[137]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=true;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-typedarray',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'TypedArray'// checked: toStringTag(value) !== ''
}],'Typed Array']],' ',['select',{hidden:true,class:'buffersource-typedArrays','aria-label':'Typed Arrays',$on:{change(e){cov_24tv8o6xo1().f[23]++;const that=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[138]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[139]++,that.parentElement?.parentElement);const select=(/**
                 * @type {HTMLSelectElement & {
                 *   $setMinsAndMaxes: SetMinsAndMaxes,
                 *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                 * }}
                 */cov_24tv8o6xo1().s[140]++,$e(ancestor,'.buffersource-typedArrays-init'));// Update to reflect current state changes if later revealing
cov_24tv8o6xo1().s[141]++;select.value=/** @type {HTMLSelectElement} */this.value;const typedArrayLength=(/**
                 * @type {HTMLInputElement & {
                 *   $checkBufferBounds: CheckBufferBounds
                 * }}
                 */cov_24tv8o6xo1().s[142]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[143]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[34][0]++;cov_24tv8o6xo1().s[144]++;return;}else{cov_24tv8o6xo1().b[34][1]++;}cov_24tv8o6xo1().s[145]++;select.$setMinsAndMaxes(/** @type {TypedArray} */ /** @type {HTMLSelectElement} */this.value);cov_24tv8o6xo1().s[146]++;select.$checkTypedArrayByteLength(e);const typedArrayByteOffset=(cov_24tv8o6xo1().s[147]++,$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[148]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[24]++;cov_24tv8o6xo1().s[149]++;return['option',[typedArray]];})]]],['fieldset',{$on:{change(){cov_24tv8o6xo1().f[25]++;cov_24tv8o6xo1().s[150]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.previousElementSibling.$buildInstances();}}},[['legend',['Construction options']],['fieldset',[['legend',['ArrayBuffer']],['label',['Byte length ',['input',{class:'byteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{$value:(cov_24tv8o6xo1().b[35][0]++,value)??(cov_24tv8o6xo1().b[35][1]++,new ArrayBuffer(0))},$on:{change(e){cov_24tv8o6xo1().f[26]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[151]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[152]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[153]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[154]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[36][0]++;cov_24tv8o6xo1().s[155]++;return;}else{cov_24tv8o6xo1().b[36][1]++;}const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[156]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.maxByteLength'));const val=(cov_24tv8o6xo1().s[157]++,that.value);cov_24tv8o6xo1().s[158]++;if(Number.parseInt(val)>Number.MAX_SAFE_INTEGER){cov_24tv8o6xo1().b[37][0]++;cov_24tv8o6xo1().s[159]++;that.setCustomValidity('The ArrayBuffer length exceeds the maximum '+'allowable size');cov_24tv8o6xo1().s[160]++;e.stopPropagation();cov_24tv8o6xo1().s[161]++;that.reportValidity();cov_24tv8o6xo1().s[162]++;return;}else{cov_24tv8o6xo1().b[37][1]++;}cov_24tv8o6xo1().s[163]++;that.setCustomValidity('');cov_24tv8o6xo1().s[164]++;that.reportValidity();cov_24tv8o6xo1().s[165]++;if(Number.parseInt(val)>Number.parseInt(maxByteLength.value)){cov_24tv8o6xo1().b[38][0]++;cov_24tv8o6xo1().s[166]++;maxByteLength.value=val;}else{cov_24tv8o6xo1().b[38][1]++;}const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[167]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[168]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);/**
                   * @type {HTMLSelectElement & {
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */cov_24tv8o6xo1().s[169]++;$e(/** @type {HTMLElement} */greatGrandparent.parentElement,'.buffersource-typedArrays-init').$checkTypedArrayByteLength(e);}}}]]],' ',['label',['Max byte length ',['input',{class:'maxByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[27]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[170]++,this);const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[171]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const val=(cov_24tv8o6xo1().s[172]++,that.value);cov_24tv8o6xo1().s[173]++;if(Number.parseInt(val)<Number.parseInt(byteLength.value)){cov_24tv8o6xo1().b[39][0]++;cov_24tv8o6xo1().s[174]++;// byteLength.value = val;
that.setCustomValidity('The max value cannot be less than the byte length');cov_24tv8o6xo1().s[175]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[39][1]++;cov_24tv8o6xo1().s[176]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[177]++;that.reportValidity();}}}]]]]],['fieldset',[['legend',['DataView']],['label',['Byte length ',['input',{class:'dataViewByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
                 * @typedef {(e: Event) => void} CheckDataViewByteLength
                 */ /** @type {CheckDataViewByteLength} */$checkDataViewByteLength(e){cov_24tv8o6xo1().f[28]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkDataViewByteLength: CheckDataViewByteLength
                  * }}
                  */cov_24tv8o6xo1().s[178]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[179]++,that.parentElement?.parentElement?.parentElement);const byteOffset=(cov_24tv8o6xo1().s[180]++,(cov_24tv8o6xo1().b[40][0]++,Number.parseInt(/** @type {HTMLInputElement} */$e(greatGrandparent,'.dataViewByteOffset').value))||(cov_24tv8o6xo1().b[40][1]++,0));const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[181]++,$e(greatGrandparent,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[182]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[41][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[41][1]++,0));const byteLength=(cov_24tv8o6xo1().s[183]++,that.value?(cov_24tv8o6xo1().b[42][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[42][1]++,bufferByteLength));cov_24tv8o6xo1().s[184]++;if(byteOffset+byteLength>bufferByteLength){cov_24tv8o6xo1().b[43][0]++;cov_24tv8o6xo1().s[185]++;that.setCustomValidity('The DataView byte length and offset exceed '+'the buffer\'s byte length');cov_24tv8o6xo1().s[186]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[43][1]++;cov_24tv8o6xo1().s[187]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[188]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[29]++;cov_24tv8o6xo1().s[189]++;/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */this.$checkDataViewByteLength(e);}}}]]],' ',['label',['Byte offset ',['input',{class:'dataViewByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[30]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[190]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[191]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[192]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);}}}]]]]],['fieldset',[['legend',['Typed array']],['label',['Byte offset ',['input',{class:'typedArrayByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,max:2**53-1,$custom:{/**
                 * @typedef {(e: Event) => void} CheckByteOffsetMultiple
                 */ /** @type {CheckByteOffsetMultiple} */$checkByteOffsetMultiple(e){cov_24tv8o6xo1().f[31]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                  * }}
                  */cov_24tv8o6xo1().s[193]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[194]++,that.parentElement?.parentElement?.parentElement?.parentElement);const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[195]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[196]++,getTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[197]++;if(Number.parseInt(that.value)%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[44][0]++;cov_24tv8o6xo1().s[198]++;that.setCustomValidity('Byte offset must be a multiple of the typed '+`array's bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[199]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[44][1]++;cov_24tv8o6xo1().s[200]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[201]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[32]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[202]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[203]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[204]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[205]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[45][0]++;cov_24tv8o6xo1().s[206]++;return;}else{cov_24tv8o6xo1().b[45][1]++;}/**
                   * @type {HTMLInputElement & {
                   *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                   * }}
                   */cov_24tv8o6xo1().s[207]++;this.$checkByteOffsetMultiple(e);}}}]]]// ' ',
// ['label', [
//   'Length ',
//   ['input', {
//     class: 'typedArrayLength',
//     type: 'number', step: '1', size: '4', pattern: '\\d+',
//     min: 0
//   }]
// ]]
]]]],['fieldset',[['legend',['Typed Array initialization (optional)']],['select',{class:'buffersource-typedArrays-init','aria-label':'Typed Arrays',$custom:{/**
             * @callback SetMinsAndMaxes
             * @param {TypedArray} typedArray
             * @returns {void}
             */ /** @type {SetMinsAndMaxes} */$setMinsAndMaxes(typedArray){cov_24tv8o6xo1().f[33]++;const{min,max}=(cov_24tv8o6xo1().s[208]++,getMinMaxForTypedArray(typedArray));/** @type {HTMLInputElement[]} */cov_24tv8o6xo1().s[209]++;$$e(/** @type {HTMLElement} */ /**
                   * @type {HTMLSelectElement & {
                   *   $setMinsAndMaxes: SetMinsAndMaxes,
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */this.parentElement,'.typedArrayValue').forEach(typedArrayValue=>{cov_24tv8o6xo1().f[34]++;cov_24tv8o6xo1().s[210]++;typedArrayValue.className='typedArrayValue typedArray-'+typedArray;cov_24tv8o6xo1().s[211]++;typedArrayValue.min=String(min);cov_24tv8o6xo1().s[212]++;typedArrayValue.max=String(max);});},/**
             * @typedef {(e: Event) => void} CheckTypedArrayByteLength
             */ /** @type {CheckTypedArrayByteLength} */$checkTypedArrayByteLength(e){cov_24tv8o6xo1().f[35]++;const that=(/**
              * @type {HTMLSelectElement & {
              *   $setMinsAndMaxes: SetMinsAndMaxes,
              *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
              * }}
              */cov_24tv8o6xo1().s[213]++,this);const TypedArray=(cov_24tv8o6xo1().s[214]++,getTypedArray(/** @type {TypedArray} */that.value));const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[215]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const arrayBufferLength=(cov_24tv8o6xo1().s[216]++,byteLength.value?(cov_24tv8o6xo1().b[46][0]++,Number.parseInt(byteLength.value)):(cov_24tv8o6xo1().b[46][1]++,0));cov_24tv8o6xo1().s[217]++;if(arrayBufferLength%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[47][0]++;cov_24tv8o6xo1().s[218]++;byteLength.setCustomValidity('Array buffer must be a multiple of the typed array\'s '+`bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[219]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[47][1]++;cov_24tv8o6xo1().s[220]++;byteLength.setCustomValidity('');}cov_24tv8o6xo1().s[221]++;byteLength.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[36]++;const that=(/**
                * @type {HTMLSelectElement & {
                *   $setMinsAndMaxes: SetMinsAndMaxes,
                *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                * }}
                */cov_24tv8o6xo1().s[222]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[223]++,that.parentElement?.parentElement?.parentElement);// Update to reflect current state changes if later revealing
/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[224]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.buffersource-typedArrays').value=that.value;const typedArrayLength=(/**
               * @type {HTMLInputElement & {
               *   $checkBufferBounds: CheckBufferBounds
               * }}
               */cov_24tv8o6xo1().s[225]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[226]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[48][0]++;cov_24tv8o6xo1().s[227]++;return;}else{cov_24tv8o6xo1().b[48][1]++;}cov_24tv8o6xo1().s[228]++;that.$checkTypedArrayByteLength(e);cov_24tv8o6xo1().s[229]++;that.$setMinsAndMaxes(/** @type {TypedArray} */that.value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[230]++,$e(/** @type {HTMLElement} */that?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[231]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);/**
               * @type {HTMLFieldSetElement & {
               *   $buildInstances: BuildInstances
               * }}
               */cov_24tv8o6xo1().s[232]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.returnType').$buildInstances();}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[37]++;cov_24tv8o6xo1().s[233]++;return['option',[typedArray]];})],' ',['label',['Array length: ',['input',{class:'typedArrayLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
               * When creating a view from a buffer, the bounds are outside
               * the buffer. In other words, `byteOffset + length *
               * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength`.
               * @typedef {(e: Event) => boolean} CheckBufferBounds
               */ /** @type {CheckBufferBounds} */$checkBufferBounds(e){cov_24tv8o6xo1().f[38]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[234]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[235]++,that.parentElement?.parentElement?.parentElement);const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[236]++,$e(ancestor,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[237]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[49][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[49][1]++,0));const length=(cov_24tv8o6xo1().s[238]++,that.value?(cov_24tv8o6xo1().b[50][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[50][1]++,bufferByteLength));const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[239]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[240]++,getTypedArray(/** @type {TypedArray} */value));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[241]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[242]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[51][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[51][1]++,0));cov_24tv8o6xo1().s[243]++;if(typedArrayByteOffset+length*TypedArray.BYTES_PER_ELEMENT>bufferByteLength){cov_24tv8o6xo1().b[52][0]++;cov_24tv8o6xo1().s[244]++;that.setCustomValidity('The byte offset and the length times bytes per element '+'is greater than the buffer length');cov_24tv8o6xo1().s[245]++;e.stopPropagation();cov_24tv8o6xo1().s[246]++;that.reportValidity();cov_24tv8o6xo1().s[247]++;return false;}else{cov_24tv8o6xo1().b[52][1]++;}cov_24tv8o6xo1().s[248]++;that.setCustomValidity('');cov_24tv8o6xo1().s[249]++;that.reportValidity();cov_24tv8o6xo1().s[250]++;return true;},/**
               * @typedef {() => void} BuildTypedArray
               */ /** @type {BuildTypedArray} */$buildTypedArray(){cov_24tv8o6xo1().f[39]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[251]++,this);const length=(cov_24tv8o6xo1().s[252]++,Number.parseInt(that.value));const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[253]++,that.parentElement?.parentElement);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[254]++,that.parentElement?.parentElement?.parentElement);const bufferByteLength=(/**
                   * @type {HTMLInputElement & {
                   *   $typedArray: TypedArrayInstance
                   * }}
                   */cov_24tv8o6xo1().s[255]++,$e(ancestor,'.byteLength'));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[256]++,$e(grandparent,'.typedArrayArea'));cov_24tv8o6xo1().s[257]++;typedArrayArea.addEventListener('change',e=>{cov_24tv8o6xo1().f[40]++;const input=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[258]++,e.target);cov_24tv8o6xo1().s[259]++;bufferByteLength.$typedArray.set([// @ts-expect-error Ok
input.dataset.bigint==='true'?(cov_24tv8o6xo1().b[53][0]++,BigInt(input.value)):(cov_24tv8o6xo1().b[53][1]++,Number(input.value))],Number.parseInt(/** @type {string} */input.dataset.key));});const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[260]++,$e(grandparent,'.buffersource-typedArrays-init'));const{min,max}=(cov_24tv8o6xo1().s[261]++,getMinMaxForTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[262]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[263]++;typedArrayArea.append(...Array.from({length},(_v,key)=>{cov_24tv8o6xo1().f[41]++;cov_24tv8o6xo1().s[264]++;return jml('label',[key,' ',['input',{class:'typedArrayValue typedArray-'+value,dataset:{key,bigint:String(value.startsWith('BigInt'))},type:'number',step:'1',pattern:value.startsWith('Float')?(cov_24tv8o6xo1().b[54][0]++,String.raw`\d+(?:\.\d+)?`):(cov_24tv8o6xo1().b[54][1]++,String.raw`\d+`),value:bufferByteLength.$typedArray[key]?(cov_24tv8o6xo1().b[55][0]++,String(bufferByteLength.$typedArray[key])):(cov_24tv8o6xo1().b[55][1]++,'0'),min,max}],' '// !key || key % 9 ? ' ' : ['br']
]);}));}},$on:{change(e){cov_24tv8o6xo1().f[42]++;const that=(/**
                   * @type {HTMLInputElement & {
                   *   $checkBufferBounds: CheckBufferBounds,
                   *   $buildTypedArray: BuildTypedArray
                   * }}
                   */cov_24tv8o6xo1().s[265]++,this);const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[266]++,this.parentElement?.parentElement);cov_24tv8o6xo1().s[267]++;if(!that.$checkBufferBounds(e)){cov_24tv8o6xo1().b[56][0]++;cov_24tv8o6xo1().s[268]++;return;}else{cov_24tv8o6xo1().b[56][1]++;}const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[269]++,$e(grandparent,'.buffersource-typedArrays-init'));const length=(cov_24tv8o6xo1().s[270]++,Number.parseInt(that.value));cov_24tv8o6xo1().s[271]++;try{const TypedArray=(cov_24tv8o6xo1().s[272]++,getTypedArray(/** @type {TypedArray} */value));// eslint-disable-next-line no-new -- Testing
cov_24tv8o6xo1().s[273]++;new TypedArray(length);}catch{cov_24tv8o6xo1().s[274]++;that.setCustomValidity('Typed Array length is too long');cov_24tv8o6xo1().s[275]++;e.stopPropagation();cov_24tv8o6xo1().s[276]++;that.reportValidity();cov_24tv8o6xo1().s[277]++;return;}cov_24tv8o6xo1().s[278]++;that.setCustomValidity('');cov_24tv8o6xo1().s[279]++;that.reportValidity();/**
                 * @type {HTMLFieldSetElement & {
                 *   $buildInstances: BuildInstances
                 * }}
                 */cov_24tv8o6xo1().s[280]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement?.parentElement,'.returnType').$buildInstances();cov_24tv8o6xo1().s[281]++;that.$buildTypedArray();}}}],['div',{class:'typedArrayArea'}]]]]],['fieldset',[['legend',['DataView initialization (optional)']],['select',{class:'dataViewMethod','aria-label':'Data View methods',$on:{change(){cov_24tv8o6xo1().f[43]++;const dataViewArea=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[282]++,$e(/** @type {HTMLElement} */this.parentElement,'.dataViewArea'));const val=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[283]++,this.value);const typedArray=(/** @type {TypedArray} */cov_24tv8o6xo1().s[284]++,val.slice(3)+'Array');cov_24tv8o6xo1().s[285]++;dataViewArea.textContent='';cov_24tv8o6xo1().s[286]++;dataViewArea.append(jml('label',['Byte offset ',['input',{type:'number',class:'dataViewSetByteOffset',step:'1',size:'4',pattern:String.raw`\d+`}]]),' ',jml('label',['Value ',['input',{type:'number',step:'1',size:'4',pattern:String.raw`\d+`,class:'typedArrayValue typedArray-'+typedArray,...getMinMaxForTypedArray(typedArray)}]]),(cov_24tv8o6xo1().b[58][0]++,val==='setInt8')||(cov_24tv8o6xo1().b[58][1]++,val==='setUint8')?(cov_24tv8o6xo1().b[57][0]++,''):(cov_24tv8o6xo1().b[57][1]++,jml('label',[['input',{class:'littleEndian',type:'checkbox'}],'Little endian'])),' ',jml('button',{$on:{click(e){cov_24tv8o6xo1().f[44]++;cov_24tv8o6xo1().s[287]++;e.preventDefault();const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[288]++,this.parentElement);const dataViewMethod=(/** @type {dataViewMethods[number]} */ /** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[289]++,ancestor.previousElementSibling?.value);const dataViewSetByteOffset=(cov_24tv8o6xo1().s[290]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.dataViewSetByteOffset').value));const typedArrayValue=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[291]++,$e(ancestor,'.typedArrayValue').value);const littleEndian=(/** @type {HTMLInputElement|null} */cov_24tv8o6xo1().s[292]++,$e(ancestor,'.littleEndian')?.checked);const byteLength=(/**
                         * @type {HTMLInputElement & {
                         *   $dataView: DataView,
                         * }}
                         */cov_24tv8o6xo1().s[293]++,$e(/** @type {HTMLElement} */ancestor?.parentElement?.parentElement,'.byteLength'));cov_24tv8o6xo1().s[294]++;if((cov_24tv8o6xo1().b[60][0]++,dataViewMethod==='setBigInt64')||(cov_24tv8o6xo1().b[60][1]++,dataViewMethod==='setBigUint64')){cov_24tv8o6xo1().b[59][0]++;cov_24tv8o6xo1().s[295]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,BigInt(typedArrayValue),littleEndian);}else{cov_24tv8o6xo1().b[59][1]++;cov_24tv8o6xo1().s[296]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,Number(typedArrayValue),littleEndian);}const typedArrayLength=(/**
                         * @type {HTMLInputElement & {
                         *   $buildTypedArray: BuildTypedArray
                         * }}
                         */cov_24tv8o6xo1().s[297]++,$e(/** @type {HTMLElement} */ancestor.parentElement?.parentElement,'.typedArrayLength'));cov_24tv8o6xo1().s[298]++;typedArrayLength.$buildTypedArray();}}},['Set']));}}},[['option',{value:''},['(Select a data view method)']],...dataViewMethods.map(dataViewMethod=>{cov_24tv8o6xo1().f[45]++;cov_24tv8o6xo1().s[299]++;return/** @type {import('jamilih').JamilihArray} */['option',[dataViewMethod]];})]],' ',['div',{class:'dataViewArea'}]]]]));cov_24tv8o6xo1().s[300]++;if((cov_24tv8o6xo1().b[62][0]++,this.setValue)&&(cov_24tv8o6xo1().b[62][1]++,value)){cov_24tv8o6xo1().b[61][0]++;cov_24tv8o6xo1().s[301]++;this.setValue({root:div,value});}else{cov_24tv8o6xo1().b[61][1]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[302]++,$e(div,'.byteLength'));cov_24tv8o6xo1().s[303]++;byteLength.$value=new ArrayBuffer(0);}cov_24tv8o6xo1().s[304]++;return[div];}});export default buffersourceType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,