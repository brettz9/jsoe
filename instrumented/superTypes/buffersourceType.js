function cov_24tv8o6xo1(){var path="/Users/brett/jsoe/src/superTypes/buffersourceType.js";var hash="db994c97801d9494a819408635c93edbcbae07fd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/superTypes/buffersourceType.js",statementMap:{"0":{start:{line:5,column:46},end:{line:16,column:1}},"1":{start:{line:18,column:42},end:{line:22,column:1}},"2":{start:{line:28,column:31},end:{line:58,column:1}},"3":{start:{line:29,column:2},end:{line:57,column:3}},"4":{start:{line:31,column:4},end:{line:31,column:33}},"5":{start:{line:33,column:4},end:{line:33,column:30}},"6":{start:{line:35,column:4},end:{line:35,column:30}},"7":{start:{line:37,column:4},end:{line:37,column:37}},"8":{start:{line:39,column:4},end:{line:39,column:32}},"9":{start:{line:41,column:4},end:{line:41,column:47}},"10":{start:{line:43,column:4},end:{line:43,column:37}},"11":{start:{line:45,column:4},end:{line:45,column:39}},"12":{start:{line:48,column:4},end:{line:48,column:41}},"13":{start:{line:50,column:4},end:{line:50,column:49}},"14":{start:{line:52,column:4},end:{line:52,column:40}},"15":{start:{line:82,column:22},end:{line:111,column:1}},"16":{start:{line:83,column:2},end:{line:110,column:3}},"17":{start:{line:85,column:4},end:{line:85,column:21}},"18":{start:{line:87,column:4},end:{line:87,column:22}},"19":{start:{line:89,column:4},end:{line:89,column:29}},"20":{start:{line:91,column:4},end:{line:91,column:22}},"21":{start:{line:93,column:4},end:{line:93,column:23}},"22":{start:{line:95,column:4},end:{line:95,column:22}},"23":{start:{line:97,column:4},end:{line:97,column:23}},"24":{start:{line:99,column:4},end:{line:99,column:24}},"25":{start:{line:101,column:4},end:{line:101,column:24}},"26":{start:{line:103,column:4},end:{line:103,column:25}},"27":{start:{line:105,column:4},end:{line:105,column:26}},"28":{start:{line:113,column:28},end:{line:118,column:2}},"29":{start:{line:120,column:10},end:{line:120,column:11}},"30":{start:{line:125,column:25},end:{line:1508,column:1}},"31":{start:{line:136,column:4},end:{line:136,column:51}},"32":{start:{line:143,column:52},end:{line:143,column:68}},"33":{start:{line:146,column:14},end:{line:146,column:27}},"34":{start:{line:151,column:8},end:{line:151,column:9}},"35":{start:{line:153,column:19},end:{line:153,column:63}},"36":{start:{line:156,column:4},end:{line:184,column:5}},"37":{start:{line:157,column:6},end:{line:159,column:8}},"38":{start:{line:161,column:6},end:{line:161,column:62}},"39":{start:{line:163,column:6},end:{line:183,column:7}},"40":{start:{line:164,column:8},end:{line:175,column:10}},"41":{start:{line:171,column:12},end:{line:173,column:13}},"42":{start:{line:172,column:14},end:{line:172,column:38}},"43":{start:{line:176,column:8},end:{line:182,column:24}},"44":{start:{line:188,column:4},end:{line:210,column:5}},"45":{start:{line:189,column:6},end:{line:189,column:25}},"46":{start:{line:191,column:6},end:{line:191,column:74}},"47":{start:{line:192,column:6},end:{line:209,column:9}},"48":{start:{line:193,column:8},end:{line:208,column:10}},"49":{start:{line:202,column:12},end:{line:204,column:13}},"50":{start:{line:203,column:14},end:{line:203,column:40}},"51":{start:{line:206,column:12},end:{line:206,column:32}},"52":{start:{line:211,column:4},end:{line:217,column:6}},"53":{start:{line:225,column:11},end:{line:225,column:34}},"54":{start:{line:226,column:4},end:{line:226,column:22}},"55":{start:{line:229,column:22},end:{line:229,column:40}},"56":{start:{line:230,column:4},end:{line:239,column:5}},"57":{start:{line:231,column:6},end:{line:231,column:72}},"58":{start:{line:233,column:6},end:{line:233,column:70}},"59":{start:{line:235,column:8},end:{line:235,column:45}},"60":{start:{line:237,column:6},end:{line:237,column:36}},"61":{start:{line:238,column:6},end:{line:238,column:53}},"62":{start:{line:246,column:11},end:{line:246,column:34}},"63":{start:{line:248,column:4},end:{line:248,column:30}},"64":{start:{line:250,column:19},end:{line:250,column:69}},"65":{start:{line:251,column:4},end:{line:251,column:41}},"66":{start:{line:252,column:4},end:{line:252,column:50}},"67":{start:{line:255,column:6},end:{line:255,column:32}},"68":{start:{line:257,column:4},end:{line:257,column:47}},"69":{start:{line:258,column:4},end:{line:258,column:53}},"70":{start:{line:260,column:4},end:{line:284,column:5}},"71":{start:{line:262,column:8},end:{line:262,column:39}},"72":{start:{line:264,column:6},end:{line:264,column:50}},"73":{start:{line:265,column:6},end:{line:265,column:60}},"74":{start:{line:268,column:8},end:{line:268,column:39}},"75":{start:{line:270,column:6},end:{line:270,column:50}},"76":{start:{line:271,column:6},end:{line:271,column:60}},"77":{start:{line:272,column:11},end:{line:284,column:5}},"78":{start:{line:274,column:8},end:{line:274,column:41}},"79":{start:{line:276,column:6},end:{line:276,column:52}},"80":{start:{line:277,column:6},end:{line:277,column:62}},"81":{start:{line:280,column:8},end:{line:280,column:37}},"82":{start:{line:282,column:6},end:{line:282,column:44}},"83":{start:{line:283,column:6},end:{line:283,column:58}},"84":{start:{line:287,column:4},end:{line:289,column:13}},"85":{start:{line:292,column:22},end:{line:292,column:40}},"86":{start:{line:293,column:19},end:{line:293,column:69}},"87":{start:{line:295,column:4},end:{line:402,column:7}},"88":{start:{line:338,column:12},end:{line:338,column:31}},"89":{start:{line:339,column:27},end:{line:389,column:14}},"90":{start:{line:347,column:77},end:{line:349,column:29}},"91":{start:{line:350,column:41},end:{line:352,column:23}},"92":{start:{line:353,column:41},end:{line:353,column:63}},"93":{start:{line:354,column:73},end:{line:358,column:23}},"94":{start:{line:359,column:22},end:{line:359,column:54}},"95":{start:{line:360,column:22},end:{line:375,column:24}},"96":{start:{line:364,column:26},end:{line:373,column:29}},"97":{start:{line:379,column:18},end:{line:383,column:35}},"98":{start:{line:391,column:45},end:{line:395,column:14}},"99":{start:{line:405,column:4},end:{line:405,column:10}},"100":{start:{line:411,column:16},end:{line:1492,column:6}},"101":{start:{line:422,column:16},end:{line:422,column:41}},"102":{start:{line:432,column:16},end:{line:432,column:20}},"103":{start:{line:433,column:60},end:{line:433,column:78}},"104":{start:{line:434,column:61},end:{line:437,column:13}},"105":{start:{line:447,column:16},end:{line:447,column:43}},"106":{start:{line:449,column:34},end:{line:449,column:67}},"107":{start:{line:450,column:34},end:{line:454,column:13}},"108":{start:{line:456,column:27},end:{line:459,column:13}},"109":{start:{line:461,column:74},end:{line:464,column:20}},"110":{start:{line:465,column:39},end:{line:467,column:17}},"111":{start:{line:469,column:74},end:{line:472,column:20}},"112":{start:{line:473,column:39},end:{line:475,column:25}},"113":{start:{line:477,column:29},end:{line:479,column:13}},"114":{start:{line:482,column:14},end:{line:482,column:60}},"115":{start:{line:485,column:31},end:{line:487,column:13}},"116":{start:{line:489,column:46},end:{line:492,column:22}},"117":{start:{line:493,column:41},end:{line:495,column:17}},"118":{start:{line:498,column:46},end:{line:501,column:22}},"119":{start:{line:502,column:37},end:{line:504,column:29}},"120":{start:{line:506,column:31},end:{line:508,column:13}},"121":{start:{line:510,column:12},end:{line:510,column:44}},"122":{start:{line:511,column:12},end:{line:511,column:48}},"123":{start:{line:513,column:37},end:{line:524,column:14}},"124":{start:{line:517,column:14},end:{line:523,column:18}},"125":{start:{line:527,column:12},end:{line:527,column:60}},"126":{start:{line:529,column:12},end:{line:539,column:13}},"127":{start:{line:531,column:14},end:{line:531,column:41}},"128":{start:{line:532,column:14},end:{line:532,column:20}},"129":{start:{line:534,column:14},end:{line:534,column:43}},"130":{start:{line:535,column:14},end:{line:535,column:20}},"131":{start:{line:537,column:14},end:{line:537,column:45}},"132":{start:{line:538,column:14},end:{line:538,column:20}},"133":{start:{line:547,column:41},end:{line:550,column:31}},"134":{start:{line:551,column:41},end:{line:554,column:32}},"135":{start:{line:573,column:41},end:{line:576,column:31}},"136":{start:{line:577,column:41},end:{line:580,column:32}},"137":{start:{line:597,column:41},end:{line:600,column:32}},"138":{start:{line:601,column:41},end:{line:604,column:31}},"139":{start:{line:623,column:61},end:{line:623,column:65}},"140":{start:{line:625,column:16},end:{line:625,column:49}},"141":{start:{line:635,column:17},end:{line:638,column:17}},"142":{start:{line:641,column:14},end:{line:641,column:75}},"143":{start:{line:649,column:18},end:{line:649,column:51}},"144":{start:{line:651,column:14},end:{line:653,column:15}},"145":{start:{line:652,column:16},end:{line:652,column:23}},"146":{start:{line:655,column:14},end:{line:658,column:16}},"147":{start:{line:660,column:14},end:{line:660,column:51}},"148":{start:{line:662,column:43},end:{line:666,column:15}},"149":{start:{line:671,column:18},end:{line:671,column:69}},"150":{start:{line:675,column:10},end:{line:675,column:42}},"151":{start:{line:685,column:16},end:{line:685,column:64}},"152":{start:{line:705,column:20},end:{line:705,column:24}},"153":{start:{line:709,column:20},end:{line:710,column:80}},"154":{start:{line:718,column:22},end:{line:718,column:55}},"155":{start:{line:720,column:18},end:{line:722,column:19}},"156":{start:{line:721,column:20},end:{line:721,column:27}},"157":{start:{line:724,column:73},end:{line:728,column:19}},"158":{start:{line:729,column:30},end:{line:729,column:40}},"159":{start:{line:731,column:18},end:{line:739,column:19}},"160":{start:{line:732,column:20},end:{line:735,column:22}},"161":{start:{line:736,column:20},end:{line:736,column:40}},"162":{start:{line:737,column:20},end:{line:737,column:42}},"163":{start:{line:738,column:20},end:{line:738,column:27}},"164":{start:{line:740,column:18},end:{line:740,column:45}},"165":{start:{line:741,column:18},end:{line:741,column:40}},"166":{start:{line:743,column:18},end:{line:747,column:19}},"167":{start:{line:746,column:20},end:{line:746,column:46}},"168":{start:{line:750,column:21},end:{line:750,column:69}},"169":{start:{line:756,column:22},end:{line:759,column:49}},"170":{start:{line:765,column:22},end:{line:769,column:51}},"171":{start:{line:784,column:64},end:{line:784,column:68}},"172":{start:{line:785,column:70},end:{line:789,column:19}},"173":{start:{line:790,column:30},end:{line:790,column:40}},"174":{start:{line:791,column:18},end:{line:801,column:19}},"175":{start:{line:795,column:20},end:{line:797,column:22}},"176":{start:{line:798,column:20},end:{line:798,column:40}},"177":{start:{line:800,column:20},end:{line:800,column:47}},"178":{start:{line:802,column:18},end:{line:802,column:40}},"179":{start:{line:829,column:22},end:{line:829,column:26}},"180":{start:{line:832,column:21},end:{line:832,column:69}},"181":{start:{line:834,column:37},end:{line:839,column:24}},"182":{start:{line:841,column:78},end:{line:845,column:28}},"183":{start:{line:846,column:43},end:{line:850,column:23}},"184":{start:{line:852,column:37},end:{line:856,column:38}},"185":{start:{line:858,column:18},end:{line:866,column:19}},"186":{start:{line:859,column:20},end:{line:862,column:22}},"187":{start:{line:863,column:20},end:{line:863,column:40}},"188":{start:{line:865,column:20},end:{line:865,column:47}},"189":{start:{line:867,column:18},end:{line:867,column:40}},"190":{start:{line:876,column:22},end:{line:878,column:48}},"191":{start:{line:894,column:20},end:{line:894,column:24}},"192":{start:{line:897,column:21},end:{line:897,column:69}},"193":{start:{line:903,column:22},end:{line:906,column:49}},"194":{start:{line:933,column:22},end:{line:933,column:26}},"195":{start:{line:935,column:20},end:{line:936,column:80}},"196":{start:{line:940,column:20},end:{line:940,column:66}},"197":{start:{line:943,column:37},end:{line:945,column:19}},"198":{start:{line:946,column:18},end:{line:958,column:19}},"199":{start:{line:949,column:20},end:{line:954,column:22}},"200":{start:{line:955,column:20},end:{line:955,column:40}},"201":{start:{line:957,column:20},end:{line:957,column:47}},"202":{start:{line:959,column:18},end:{line:959,column:40}},"203":{start:{line:964,column:64},end:{line:964,column:68}},"204":{start:{line:966,column:20},end:{line:967,column:80}},"205":{start:{line:975,column:22},end:{line:975,column:55}},"206":{start:{line:977,column:18},end:{line:979,column:19}},"207":{start:{line:978,column:20},end:{line:978,column:27}},"208":{start:{line:984,column:22},end:{line:984,column:57}},"209":{start:{line:1014,column:33},end:{line:1014,column:67}},"210":{start:{line:1016,column:48},end:{line:1030,column:17}},"211":{start:{line:1026,column:16},end:{line:1027,column:61}},"212":{start:{line:1028,column:16},end:{line:1028,column:50}},"213":{start:{line:1029,column:16},end:{line:1029,column:50}},"214":{start:{line:1044,column:18},end:{line:1044,column:22}},"215":{start:{line:1045,column:33},end:{line:1047,column:15}},"216":{start:{line:1049,column:66},end:{line:1053,column:15}},"217":{start:{line:1054,column:40},end:{line:1058,column:19}},"218":{start:{line:1059,column:14},end:{line:1067,column:15}},"219":{start:{line:1060,column:16},end:{line:1063,column:18}},"220":{start:{line:1064,column:16},end:{line:1064,column:36}},"221":{start:{line:1066,column:16},end:{line:1066,column:49}},"222":{start:{line:1068,column:14},end:{line:1068,column:42}},"223":{start:{line:1080,column:18},end:{line:1080,column:22}},"224":{start:{line:1084,column:16},end:{line:1085,column:61}},"225":{start:{line:1089,column:47},end:{line:1093,column:36}},"226":{start:{line:1101,column:18},end:{line:1101,column:51}},"227":{start:{line:1103,column:14},end:{line:1105,column:15}},"228":{start:{line:1104,column:16},end:{line:1104,column:23}},"229":{start:{line:1107,column:14},end:{line:1107,column:49}},"230":{start:{line:1109,column:14},end:{line:1109,column:76}},"231":{start:{line:1111,column:43},end:{line:1115,column:15}},"232":{start:{line:1120,column:18},end:{line:1120,column:69}},"233":{start:{line:1126,column:18},end:{line:1130,column:35}},"234":{start:{line:1134,column:10},end:{line:1134,column:42}},"235":{start:{line:1159,column:20},end:{line:1159,column:24}},"236":{start:{line:1162,column:18},end:{line:1162,column:66}},"237":{start:{line:1164,column:76},end:{line:1168,column:26}},"238":{start:{line:1169,column:41},end:{line:1173,column:21}},"239":{start:{line:1175,column:31},end:{line:1177,column:36}},"240":{start:{line:1180,column:18},end:{line:1180,column:64}},"241":{start:{line:1183,column:35},end:{line:1185,column:17}},"242":{start:{line:1188,column:50},end:{line:1191,column:26}},"243":{start:{line:1192,column:45},end:{line:1194,column:21}},"244":{start:{line:1196,column:16},end:{line:1208,column:17}},"245":{start:{line:1201,column:18},end:{line:1204,column:20}},"246":{start:{line:1205,column:18},end:{line:1205,column:38}},"247":{start:{line:1206,column:18},end:{line:1206,column:40}},"248":{start:{line:1207,column:18},end:{line:1207,column:31}},"249":{start:{line:1210,column:16},end:{line:1210,column:43}},"250":{start:{line:1211,column:16},end:{line:1211,column:38}},"251":{start:{line:1212,column:16},end:{line:1212,column:28}},"252":{start:{line:1226,column:20},end:{line:1226,column:24}},"253":{start:{line:1227,column:31},end:{line:1227,column:58}},"254":{start:{line:1229,column:18},end:{line:1229,column:51}},"255":{start:{line:1233,column:18},end:{line:1233,column:66}},"256":{start:{line:1240,column:23},end:{line:1243,column:19}},"257":{start:{line:1245,column:67},end:{line:1247,column:17}},"258":{start:{line:1249,column:16},end:{line:1259,column:19}},"259":{start:{line:1250,column:65},end:{line:1250,column:73}},"260":{start:{line:1251,column:18},end:{line:1258,column:21}},"261":{start:{line:1261,column:18},end:{line:1261,column:67}},"262":{start:{line:1263,column:35},end:{line:1265,column:17}},"263":{start:{line:1267,column:16},end:{line:1267,column:48}},"264":{start:{line:1268,column:16},end:{line:1291,column:18}},"265":{start:{line:1270,column:20},end:{line:1289,column:23}},"266":{start:{line:1303,column:20},end:{line:1303,column:24}},"267":{start:{line:1306,column:18},end:{line:1306,column:51}},"268":{start:{line:1309,column:16},end:{line:1311,column:17}},"269":{start:{line:1310,column:18},end:{line:1310,column:25}},"270":{start:{line:1314,column:18},end:{line:1314,column:67}},"271":{start:{line:1317,column:31},end:{line:1317,column:58}},"272":{start:{line:1318,column:16},end:{line:1329,column:17}},"273":{start:{line:1319,column:37},end:{line:1321,column:19}},"274":{start:{line:1323,column:18},end:{line:1323,column:41}},"275":{start:{line:1325,column:18},end:{line:1325,column:75}},"276":{start:{line:1326,column:18},end:{line:1326,column:38}},"277":{start:{line:1327,column:18},end:{line:1327,column:40}},"278":{start:{line:1328,column:18},end:{line:1328,column:25}},"279":{start:{line:1330,column:16},end:{line:1330,column:43}},"280":{start:{line:1331,column:16},end:{line:1331,column:38}},"281":{start:{line:1337,column:20},end:{line:1341,column:37}},"282":{start:{line:1343,column:16},end:{line:1343,column:40}},"283":{start:{line:1359,column:66},end:{line:1361,column:15}},"284":{start:{line:1363,column:59},end:{line:1363,column:71}},"285":{start:{line:1365,column:16},end:{line:1365,column:38}},"286":{start:{line:1368,column:14},end:{line:1368,column:44}},"287":{start:{line:1369,column:14},end:{line:1478,column:16}},"288":{start:{line:1407,column:22},end:{line:1407,column:41}},"289":{start:{line:1409,column:24},end:{line:1409,column:42}},"290":{start:{line:1413,column:59},end:{line:1415,column:34}},"291":{start:{line:1419,column:24},end:{line:1422,column:33}},"292":{start:{line:1424,column:56},end:{line:1427,column:32}},"293":{start:{line:1429,column:61},end:{line:1432,column:35}},"294":{start:{line:1440,column:26},end:{line:1444,column:27}},"295":{start:{line:1447,column:22},end:{line:1462,column:23}},"296":{start:{line:1451,column:24},end:{line:1455,column:26}},"297":{start:{line:1457,column:24},end:{line:1461,column:26}},"298":{start:{line:1469,column:29},end:{line:1473,column:25}},"299":{start:{line:1474,column:22},end:{line:1474,column:58}},"300":{start:{line:1484,column:12},end:{line:1486,column:14}},"301":{start:{line:1494,column:4},end:{line:1504,column:5}},"302":{start:{line:1495,column:6},end:{line:1495,column:40}},"303":{start:{line:1502,column:11},end:{line:1502,column:33}},"304":{start:{line:1503,column:6},end:{line:1503,column:45}},"305":{start:{line:1506,column:4},end:{line:1506,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:31},end:{line:28,column:32}},loc:{start:{line:28,column:47},end:{line:58,column:1}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:82,column:22},end:{line:82,column:23}},loc:{start:{line:82,column:32},end:{line:111,column:1}},line:82},"2":{name:"(anonymous_2)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:17},end:{line:137,column:3}},line:135},"3":{name:"(anonymous_3)",decl:{start:{line:138,column:2},end:{line:138,column:3}},loc:{start:{line:138,column:24},end:{line:218,column:3}},line:138},"4":{name:"(anonymous_4)",decl:{start:{line:170,column:10},end:{line:170,column:11}},loc:{start:{line:170,column:20},end:{line:174,column:11}},line:170},"5":{name:"(anonymous_5)",decl:{start:{line:188,column:65},end:{line:188,column:66}},loc:{start:{line:188,column:77},end:{line:190,column:5}},line:188},"6":{name:"(anonymous_6)",decl:{start:{line:192,column:30},end:{line:192,column:31}},loc:{start:{line:192,column:40},end:{line:209,column:7}},line:192},"7":{name:"(anonymous_7)",decl:{start:{line:201,column:10},end:{line:201,column:11}},loc:{start:{line:201,column:20},end:{line:207,column:11}},line:201},"8":{name:"(anonymous_8)",decl:{start:{line:219,column:2},end:{line:219,column:3}},loc:{start:{line:219,column:20},end:{line:227,column:3}},line:219},"9":{name:"(anonymous_9)",decl:{start:{line:228,column:2},end:{line:228,column:3}},loc:{start:{line:228,column:27},end:{line:285,column:3}},line:228},"10":{name:"(anonymous_10)",decl:{start:{line:286,column:2},end:{line:286,column:3}},loc:{start:{line:286,column:20},end:{line:290,column:3}},line:286},"11":{name:"(anonymous_11)",decl:{start:{line:291,column:2},end:{line:291,column:3}},loc:{start:{line:291,column:41},end:{line:403,column:3}},line:291},"12":{name:"(anonymous_12)",decl:{start:{line:337,column:10},end:{line:337,column:11}},loc:{start:{line:337,column:26},end:{line:399,column:11}},line:337},"13":{name:"(anonymous_13)",decl:{start:{line:346,column:20},end:{line:346,column:21}},loc:{start:{line:346,column:30},end:{line:376,column:21}},line:346},"14":{name:"(anonymous_14)",decl:{start:{line:363,column:27},end:{line:363,column:28}},loc:{start:{line:363,column:40},end:{line:374,column:25}},line:363},"15":{name:"(anonymous_15)",decl:{start:{line:378,column:35},end:{line:378,column:36}},loc:{start:{line:378,column:51},end:{line:384,column:17}},line:378},"16":{name:"(anonymous_16)",decl:{start:{line:404,column:2},end:{line:404,column:3}},loc:{start:{line:404,column:34},end:{line:1507,column:3}},line:404},"17":{name:"(anonymous_17)",decl:{start:{line:417,column:10},end:{line:417,column:11}},loc:{start:{line:417,column:20},end:{line:423,column:11}},line:417},"18":{name:"(anonymous_18)",decl:{start:{line:427,column:10},end:{line:427,column:11}},loc:{start:{line:427,column:29},end:{line:540,column:11}},line:427},"19":{name:"(anonymous_19)",decl:{start:{line:515,column:18},end:{line:515,column:19}},loc:{start:{line:515,column:29},end:{line:524,column:13}},line:515},"20":{name:"(anonymous_20)",decl:{start:{line:546,column:12},end:{line:546,column:13}},loc:{start:{line:546,column:21},end:{line:555,column:13}},line:546},"21":{name:"(anonymous_21)",decl:{start:{line:572,column:12},end:{line:572,column:13}},loc:{start:{line:572,column:21},end:{line:581,column:13}},line:572},"22":{name:"(anonymous_22)",decl:{start:{line:596,column:12},end:{line:596,column:13}},loc:{start:{line:596,column:21},end:{line:605,column:13}},line:596},"23":{name:"(anonymous_23)",decl:{start:{line:622,column:12},end:{line:622,column:13}},loc:{start:{line:622,column:23},end:{line:672,column:13}},line:622},"24":{name:"(anonymous_24)",decl:{start:{line:674,column:27},end:{line:674,column:28}},loc:{start:{line:674,column:43},end:{line:676,column:9}},line:674},"25":{name:"(anonymous_25)",decl:{start:{line:680,column:10},end:{line:680,column:11}},loc:{start:{line:680,column:20},end:{line:686,column:11}},line:680},"26":{name:"(anonymous_26)",decl:{start:{line:703,column:16},end:{line:703,column:17}},loc:{start:{line:703,column:27},end:{line:770,column:17}},line:703},"27":{name:"(anonymous_27)",decl:{start:{line:783,column:16},end:{line:783,column:17}},loc:{start:{line:783,column:27},end:{line:803,column:17}},line:783},"28":{name:"(anonymous_28)",decl:{start:{line:823,column:16},end:{line:823,column:17}},loc:{start:{line:823,column:45},end:{line:868,column:17}},line:823},"29":{name:"(anonymous_29)",decl:{start:{line:871,column:16},end:{line:871,column:17}},loc:{start:{line:871,column:27},end:{line:879,column:17}},line:871},"30":{name:"(anonymous_30)",decl:{start:{line:892,column:16},end:{line:892,column:17}},loc:{start:{line:892,column:27},end:{line:907,column:17}},line:892},"31":{name:"(anonymous_31)",decl:{start:{line:928,column:16},end:{line:928,column:17}},loc:{start:{line:928,column:45},end:{line:960,column:17}},line:928},"32":{name:"(anonymous_32)",decl:{start:{line:963,column:16},end:{line:963,column:17}},loc:{start:{line:963,column:27},end:{line:985,column:17}},line:963},"33":{name:"(anonymous_33)",decl:{start:{line:1013,column:12},end:{line:1013,column:13}},loc:{start:{line:1013,column:42},end:{line:1031,column:13}},line:1013},"34":{name:"(anonymous_34)",decl:{start:{line:1025,column:24},end:{line:1025,column:25}},loc:{start:{line:1025,column:45},end:{line:1030,column:15}},line:1025},"35":{name:"(anonymous_35)",decl:{start:{line:1038,column:12},end:{line:1038,column:13}},loc:{start:{line:1038,column:43},end:{line:1069,column:13}},line:1038},"36":{name:"(anonymous_36)",decl:{start:{line:1072,column:12},end:{line:1072,column:13}},loc:{start:{line:1072,column:23},end:{line:1131,column:13}},line:1072},"37":{name:"(anonymous_37)",decl:{start:{line:1133,column:27},end:{line:1133,column:28}},loc:{start:{line:1133,column:43},end:{line:1135,column:9}},line:1133},"38":{name:"(anonymous_38)",decl:{start:{line:1153,column:14},end:{line:1153,column:15}},loc:{start:{line:1153,column:37},end:{line:1213,column:15}},line:1153},"39":{name:"(anonymous_39)",decl:{start:{line:1220,column:14},end:{line:1220,column:15}},loc:{start:{line:1220,column:34},end:{line:1292,column:15}},line:1220},"40":{name:"(anonymous_40)",decl:{start:{line:1249,column:58},end:{line:1249,column:59}},loc:{start:{line:1249,column:65},end:{line:1259,column:17}},line:1249},"41":{name:"(anonymous_41)",decl:{start:{line:1269,column:42},end:{line:1269,column:43}},loc:{start:{line:1269,column:55},end:{line:1290,column:19}},line:1269},"42":{name:"(anonymous_42)",decl:{start:{line:1295,column:14},end:{line:1295,column:15}},loc:{start:{line:1295,column:25},end:{line:1344,column:15}},line:1295},"43":{name:"(anonymous_43)",decl:{start:{line:1358,column:12},end:{line:1358,column:13}},loc:{start:{line:1358,column:22},end:{line:1479,column:13}},line:1358},"44":{name:"(anonymous_44)",decl:{start:{line:1406,column:20},end:{line:1406,column:21}},loc:{start:{line:1406,column:30},end:{line:1475,column:21}},line:1406},"45":{name:"(anonymous_45)",decl:{start:{line:1483,column:33},end:{line:1483,column:34}},loc:{start:{line:1483,column:53},end:{line:1487,column:11}},line:1483}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:57,column:3}},type:"switch",locations:[{start:{line:30,column:2},end:{line:31,column:33}},{start:{line:32,column:2},end:{line:33,column:30}},{start:{line:34,column:2},end:{line:35,column:30}},{start:{line:36,column:2},end:{line:37,column:37}},{start:{line:38,column:2},end:{line:39,column:32}},{start:{line:40,column:2},end:{line:41,column:47}},{start:{line:42,column:2},end:{line:43,column:37}},{start:{line:44,column:2},end:{line:45,column:39}},{start:{line:46,column:2},end:{line:48,column:41}},{start:{line:49,column:2},end:{line:50,column:49}},{start:{line:51,column:2},end:{line:52,column:40}}],line:29},"1":{loc:{start:{line:83,column:2},end:{line:110,column:3}},type:"switch",locations:[{start:{line:84,column:2},end:{line:85,column:21}},{start:{line:86,column:2},end:{line:87,column:22}},{start:{line:88,column:2},end:{line:89,column:29}},{start:{line:90,column:2},end:{line:91,column:22}},{start:{line:92,column:2},end:{line:93,column:23}},{start:{line:94,column:2},end:{line:95,column:22}},{start:{line:96,column:2},end:{line:97,column:23}},{start:{line:98,column:2},end:{line:99,column:24}},{start:{line:100,column:2},end:{line:101,column:24}},{start:{line:102,column:2},end:{line:103,column:25}},{start:{line:104,column:2},end:{line:105,column:26}}],line:83},"2":{loc:{start:{line:139,column:19},end:{line:142,column:10}},type:"default-arg",locations:[{start:{line:142,column:8},end:{line:142,column:10}}],line:139},"3":{loc:{start:{line:156,column:4},end:{line:184,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:184,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:156},"4":{loc:{start:{line:156,column:8},end:{line:156,column:64}},type:"binary-expr",locations:[{start:{line:156,column:8},end:{line:156,column:43}},{start:{line:156,column:47},end:{line:156,column:64}}],line:156},"5":{loc:{start:{line:158,column:35},end:{line:158,column:68}},type:"binary-expr",locations:[{start:{line:158,column:35},end:{line:158,column:47}},{start:{line:158,column:51},end:{line:158,column:68}}],line:158},"6":{loc:{start:{line:163,column:6},end:{line:183,column:7}},type:"if",locations:[{start:{line:163,column:6},end:{line:183,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:163},"7":{loc:{start:{line:171,column:12},end:{line:173,column:13}},type:"if",locations:[{start:{line:171,column:12},end:{line:173,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:171},"8":{loc:{start:{line:188,column:4},end:{line:210,column:5}},type:"if",locations:[{start:{line:188,column:4},end:{line:210,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:188},"9":{loc:{start:{line:188,column:8},end:{line:190,column:6}},type:"binary-expr",locations:[{start:{line:188,column:8},end:{line:188,column:40}},{start:{line:188,column:44},end:{line:190,column:6}}],line:188},"10":{loc:{start:{line:202,column:12},end:{line:204,column:13}},type:"if",locations:[{start:{line:202,column:12},end:{line:204,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:202},"11":{loc:{start:{line:212,column:13},end:{line:216,column:22}},type:"cond-expr",locations:[{start:{line:213,column:10},end:{line:213,column:16}},{start:{line:214,column:10},end:{line:216,column:22}}],line:212},"12":{loc:{start:{line:214,column:10},end:{line:216,column:22}},type:"cond-expr",locations:[{start:{line:215,column:12},end:{line:215,column:16}},{start:{line:216,column:12},end:{line:216,column:22}}],line:214},"13":{loc:{start:{line:230,column:4},end:{line:239,column:5}},type:"if",locations:[{start:{line:230,column:4},end:{line:239,column:5}},{start:{line:232,column:11},end:{line:239,column:5}}],line:230},"14":{loc:{start:{line:230,column:8},end:{line:230,column:63}},type:"binary-expr",locations:[{start:{line:230,column:8},end:{line:230,column:35}},{start:{line:230,column:39},end:{line:230,column:63}}],line:230},"15":{loc:{start:{line:250,column:19},end:{line:250,column:69}},type:"cond-expr",locations:[{start:{line:250,column:49},end:{line:250,column:54}},{start:{line:250,column:57},end:{line:250,column:69}}],line:250},"16":{loc:{start:{line:260,column:4},end:{line:284,column:5}},type:"if",locations:[{start:{line:260,column:4},end:{line:284,column:5}},{start:{line:272,column:11},end:{line:284,column:5}}],line:260},"17":{loc:{start:{line:272,column:11},end:{line:284,column:5}},type:"if",locations:[{start:{line:272,column:11},end:{line:284,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:272},"18":{loc:{start:{line:293,column:19},end:{line:293,column:69}},type:"cond-expr",locations:[{start:{line:293,column:49},end:{line:293,column:54}},{start:{line:293,column:57},end:{line:293,column:69}}],line:293},"19":{loc:{start:{line:298,column:15},end:{line:302,column:21}},type:"cond-expr",locations:[{start:{line:299,column:12},end:{line:301,column:32}},{start:{line:302,column:12},end:{line:302,column:21}}],line:298},"20":{loc:{start:{line:299,column:12},end:{line:301,column:32}},type:"cond-expr",locations:[{start:{line:300,column:14},end:{line:300,column:33}},{start:{line:301,column:14},end:{line:301,column:32}}],line:299},"21":{loc:{start:{line:304,column:8},end:{line:304,column:54}},type:"binary-expr",locations:[{start:{line:304,column:8},end:{line:304,column:41}},{start:{line:304,column:45},end:{line:304,column:54}}],line:304},"22":{loc:{start:{line:313,column:9},end:{line:322,column:14}},type:"cond-expr",locations:[{start:{line:314,column:10},end:{line:321,column:9}},{start:{line:322,column:10},end:{line:322,column:14}}],line:313},"23":{loc:{start:{line:323,column:9},end:{line:332,column:14}},type:"cond-expr",locations:[{start:{line:324,column:10},end:{line:331,column:9}},{start:{line:332,column:10},end:{line:332,column:14}}],line:323},"24":{loc:{start:{line:323,column:10},end:{line:323,column:65}},type:"binary-expr",locations:[{start:{line:323,column:10},end:{line:323,column:34}},{start:{line:323,column:38},end:{line:323,column:65}}],line:323},"25":{loc:{start:{line:368,column:30},end:{line:370,column:37}},type:"cond-expr",locations:[{start:{line:369,column:34},end:{line:369,column:57}},{start:{line:370,column:34},end:{line:370,column:37}}],line:368},"26":{loc:{start:{line:380,column:30},end:{line:382,column:33}},type:"cond-expr",locations:[{start:{line:381,column:24},end:{line:381,column:28}},{start:{line:382,column:24},end:{line:382,column:33}}],line:380},"27":{loc:{start:{line:458,column:29},end:{line:458,column:72}},type:"cond-expr",locations:[{start:{line:458,column:45},end:{line:458,column:60}},{start:{line:458,column:63},end:{line:458,column:72}}],line:458},"28":{loc:{start:{line:465,column:39},end:{line:467,column:17}},type:"cond-expr",locations:[{start:{line:466,column:16},end:{line:466,column:54}},{start:{line:467,column:16},end:{line:467,column:17}}],line:465},"29":{loc:{start:{line:473,column:39},end:{line:475,column:25}},type:"cond-expr",locations:[{start:{line:474,column:16},end:{line:474,column:54}},{start:{line:475,column:16},end:{line:475,column:25}}],line:473},"30":{loc:{start:{line:493,column:41},end:{line:495,column:17}},type:"cond-expr",locations:[{start:{line:494,column:16},end:{line:494,column:56}},{start:{line:495,column:16},end:{line:495,column:17}}],line:493},"31":{loc:{start:{line:502,column:37},end:{line:504,column:29}},type:"cond-expr",locations:[{start:{line:503,column:16},end:{line:503,column:52}},{start:{line:504,column:16},end:{line:504,column:29}}],line:502},"32":{loc:{start:{line:517,column:21},end:{line:523,column:17}},type:"cond-expr",locations:[{start:{line:518,column:18},end:{line:520,column:17}},{start:{line:521,column:18},end:{line:523,column:17}}],line:517},"33":{loc:{start:{line:529,column:12},end:{line:539,column:13}},type:"switch",locations:[{start:{line:530,column:12},end:{line:532,column:20}},{start:{line:533,column:12},end:{line:536,column:13}},{start:{line:536,column:14},end:{line:538,column:20}}],line:529},"34":{loc:{start:{line:651,column:14},end:{line:653,column:15}},type:"if",locations:[{start:{line:651,column:14},end:{line:653,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:651},"35":{loc:{start:{line:700,column:24},end:{line:700,column:51}},type:"binary-expr",locations:[{start:{line:700,column:24},end:{line:700,column:29}},{start:{line:700,column:33},end:{line:700,column:51}}],line:700},"36":{loc:{start:{line:720,column:18},end:{line:722,column:19}},type:"if",locations:[{start:{line:720,column:18},end:{line:722,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:720},"37":{loc:{start:{line:731,column:18},end:{line:739,column:19}},type:"if",locations:[{start:{line:731,column:18},end:{line:739,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:731},"38":{loc:{start:{line:743,column:18},end:{line:747,column:19}},type:"if",locations:[{start:{line:743,column:18},end:{line:747,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:743},"39":{loc:{start:{line:791,column:18},end:{line:801,column:19}},type:"if",locations:[{start:{line:791,column:18},end:{line:801,column:19}},{start:{line:799,column:25},end:{line:801,column:19}}],line:791},"40":{loc:{start:{line:834,column:37},end:{line:839,column:24}},type:"binary-expr",locations:[{start:{line:834,column:37},end:{line:839,column:19}},{start:{line:839,column:23},end:{line:839,column:24}}],line:834},"41":{loc:{start:{line:846,column:43},end:{line:850,column:23}},type:"cond-expr",locations:[{start:{line:847,column:22},end:{line:849,column:21}},{start:{line:850,column:22},end:{line:850,column:23}}],line:846},"42":{loc:{start:{line:852,column:37},end:{line:856,column:38}},type:"cond-expr",locations:[{start:{line:853,column:22},end:{line:855,column:21}},{start:{line:856,column:22},end:{line:856,column:38}}],line:852},"43":{loc:{start:{line:858,column:18},end:{line:866,column:19}},type:"if",locations:[{start:{line:858,column:18},end:{line:866,column:19}},{start:{line:864,column:25},end:{line:866,column:19}}],line:858},"44":{loc:{start:{line:946,column:18},end:{line:958,column:19}},type:"if",locations:[{start:{line:946,column:18},end:{line:958,column:19}},{start:{line:956,column:25},end:{line:958,column:19}}],line:946},"45":{loc:{start:{line:977,column:18},end:{line:979,column:19}},type:"if",locations:[{start:{line:977,column:18},end:{line:979,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:977},"46":{loc:{start:{line:1054,column:40},end:{line:1058,column:19}},type:"cond-expr",locations:[{start:{line:1055,column:18},end:{line:1057,column:17}},{start:{line:1058,column:18},end:{line:1058,column:19}}],line:1054},"47":{loc:{start:{line:1059,column:14},end:{line:1067,column:15}},type:"if",locations:[{start:{line:1059,column:14},end:{line:1067,column:15}},{start:{line:1065,column:21},end:{line:1067,column:15}}],line:1059},"48":{loc:{start:{line:1103,column:14},end:{line:1105,column:15}},type:"if",locations:[{start:{line:1103,column:14},end:{line:1105,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1103},"49":{loc:{start:{line:1169,column:41},end:{line:1173,column:21}},type:"cond-expr",locations:[{start:{line:1170,column:20},end:{line:1172,column:19}},{start:{line:1173,column:20},end:{line:1173,column:21}}],line:1169},"50":{loc:{start:{line:1175,column:31},end:{line:1177,column:36}},type:"cond-expr",locations:[{start:{line:1176,column:20},end:{line:1176,column:47}},{start:{line:1177,column:20},end:{line:1177,column:36}}],line:1175},"51":{loc:{start:{line:1192,column:45},end:{line:1194,column:21}},type:"cond-expr",locations:[{start:{line:1193,column:20},end:{line:1193,column:60}},{start:{line:1194,column:20},end:{line:1194,column:21}}],line:1192},"52":{loc:{start:{line:1196,column:16},end:{line:1208,column:17}},type:"if",locations:[{start:{line:1196,column:16},end:{line:1208,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1196},"53":{loc:{start:{line:1253,column:20},end:{line:1255,column:43}},type:"cond-expr",locations:[{start:{line:1254,column:24},end:{line:1254,column:43}},{start:{line:1255,column:24},end:{line:1255,column:43}}],line:1253},"54":{loc:{start:{line:1279,column:33},end:{line:1281,column:43}},type:"cond-expr",locations:[{start:{line:1280,column:28},end:{line:1280,column:53}},{start:{line:1281,column:28},end:{line:1281,column:43}}],line:1279},"55":{loc:{start:{line:1282,column:31},end:{line:1284,column:31}},type:"cond-expr",locations:[{start:{line:1283,column:28},end:{line:1283,column:69}},{start:{line:1284,column:28},end:{line:1284,column:31}}],line:1282},"56":{loc:{start:{line:1309,column:16},end:{line:1311,column:17}},type:"if",locations:[{start:{line:1309,column:16},end:{line:1311,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1309},"57":{loc:{start:{line:1394,column:16},end:{line:1402,column:20}},type:"cond-expr",locations:[{start:{line:1395,column:20},end:{line:1395,column:22}},{start:{line:1396,column:20},end:{line:1402,column:20}}],line:1394},"58":{loc:{start:{line:1394,column:16},end:{line:1394,column:55}},type:"binary-expr",locations:[{start:{line:1394,column:16},end:{line:1394,column:33}},{start:{line:1394,column:37},end:{line:1394,column:55}}],line:1394},"59":{loc:{start:{line:1447,column:22},end:{line:1462,column:23}},type:"if",locations:[{start:{line:1447,column:22},end:{line:1462,column:23}},{start:{line:1456,column:29},end:{line:1462,column:23}}],line:1447},"60":{loc:{start:{line:1448,column:24},end:{line:1449,column:57}},type:"binary-expr",locations:[{start:{line:1448,column:24},end:{line:1448,column:56}},{start:{line:1449,column:24},end:{line:1449,column:57}}],line:1448},"61":{loc:{start:{line:1494,column:4},end:{line:1504,column:5}},type:"if",locations:[{start:{line:1494,column:4},end:{line:1504,column:5}},{start:{line:1496,column:11},end:{line:1504,column:5}}],line:1494},"62":{loc:{start:{line:1494,column:8},end:{line:1494,column:30}},type:"binary-expr",locations:[{start:{line:1494,column:8},end:{line:1494,column:21}},{start:{line:1494,column:25},end:{line:1494,column:30}}],line:1494}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},b:{"0":[0,0,0,0,0,0,0,0,0,0,0],"1":[0,0,0,0,0,0,0,0,0,0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"db994c97801d9494a819408635c93edbcbae07fd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_24tv8o6xo1=function(){return actualCoverage;};}return actualCoverage;}cov_24tv8o6xo1();import{$e,$$e}from'../utils/templateUtils.js';import{jml,toStringTag}from'../vendor-imports.js';import dialogs from'../utils/dialogs.js';const dataViewMethods=(/** @type {const} */cov_24tv8o6xo1().s[0]++,['setInt8','setUint8','setInt16','setUint16','setInt32','setUint32','setFloat32','setFloat64','setBigInt64','setBigUint64']);const typedArrays=(/** @type {const} */cov_24tv8o6xo1().s[1]++,['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']);/**
 * @param {TypedArray} typedArray
 * @returns {{min: number, max: number}}
 */cov_24tv8o6xo1().s[2]++;const getMinMaxForTypedArray=typedArray=>{cov_24tv8o6xo1().f[0]++;cov_24tv8o6xo1().s[3]++;switch(typedArray){case'Int8Array':cov_24tv8o6xo1().b[0][0]++;cov_24tv8o6xo1().s[4]++;return{min:-128,max:127};case'Uint8Array':cov_24tv8o6xo1().b[0][1]++;cov_24tv8o6xo1().s[5]++;return{min:0,max:255};case'Uint8ClampedArray':cov_24tv8o6xo1().b[0][2]++;cov_24tv8o6xo1().s[6]++;return{min:0,max:255};case'Int16Array':cov_24tv8o6xo1().b[0][3]++;cov_24tv8o6xo1().s[7]++;return{min:-32768,max:32767};case'Uint16Array':cov_24tv8o6xo1().b[0][4]++;cov_24tv8o6xo1().s[8]++;return{min:0,max:65535};case'Int32Array':cov_24tv8o6xo1().b[0][5]++;cov_24tv8o6xo1().s[9]++;return{min:-2147483648,max:2147483647};case'Uint32Array':cov_24tv8o6xo1().b[0][6]++;cov_24tv8o6xo1().s[10]++;return{min:0,max:4294967295};case'Float32Array':cov_24tv8o6xo1().b[0][7]++;cov_24tv8o6xo1().s[11]++;return{min:-3.4e38,max:3.4e38};case'Float64Array':cov_24tv8o6xo1().b[0][8]++;cov_24tv8o6xo1().s[12]++;// eslint-disable-next-line no-loss-of-precision -- Inevitable?
return{min:-1.8e308,max:1.8e308};case'BigInt64Array':cov_24tv8o6xo1().b[0][9]++;cov_24tv8o6xo1().s[13]++;return{min:-(2**63),max:2**63-1};case'BigUint64Array':cov_24tv8o6xo1().b[0][10]++;cov_24tv8o6xo1().s[14]++;return{min:0,max:2**64-1};/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected typed array type');}};/**
 * @typedef {"Int8Array"|"Uint8Array"|"Uint8ClampedArray"|
 *   "Int16Array"|"Uint16Array"|"Int32Array"|"Uint32Array"|
 *   "Float32Array"|"Float64Array"|"BigInt64Array"|
 *   "BigUint64Array"} TypedArray
 */ /**
 * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|
 *   Int16Array|Uint16Array|Int32Array|Uint32Array|
*   Float32Array|Float64Array|BigInt64Array|
*   BigUint64Array} TypedArrayInstance
 */ /**
 * @param {TypedArray} prop
 * @returns {Int8ArrayConstructor|Uint8ArrayConstructor|
 *   Uint8ClampedArrayConstructor|Int16ArrayConstructor|
 *   Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|
 *   Float32ArrayConstructor|Float64ArrayConstructor|
 *   BigInt64ArrayConstructor|BigUint64ArrayConstructor}
 */cov_24tv8o6xo1().s[15]++;const getTypedArray=prop=>{cov_24tv8o6xo1().f[1]++;cov_24tv8o6xo1().s[16]++;switch(prop){case'Int8Array':cov_24tv8o6xo1().b[1][0]++;cov_24tv8o6xo1().s[17]++;return Int8Array;case'Uint8Array':cov_24tv8o6xo1().b[1][1]++;cov_24tv8o6xo1().s[18]++;return Uint8Array;case'Uint8ClampedArray':cov_24tv8o6xo1().b[1][2]++;cov_24tv8o6xo1().s[19]++;return Uint8ClampedArray;case'Int16Array':cov_24tv8o6xo1().b[1][3]++;cov_24tv8o6xo1().s[20]++;return Int16Array;case'Uint16Array':cov_24tv8o6xo1().b[1][4]++;cov_24tv8o6xo1().s[21]++;return Uint16Array;case'Int32Array':cov_24tv8o6xo1().b[1][5]++;cov_24tv8o6xo1().s[22]++;return Int32Array;case'Uint32Array':cov_24tv8o6xo1().b[1][6]++;cov_24tv8o6xo1().s[23]++;return Uint32Array;case'Float32Array':cov_24tv8o6xo1().b[1][7]++;cov_24tv8o6xo1().s[24]++;return Float32Array;case'Float64Array':cov_24tv8o6xo1().b[1][8]++;cov_24tv8o6xo1().s[25]++;return Float64Array;case'BigInt64Array':cov_24tv8o6xo1().b[1][9]++;cov_24tv8o6xo1().s[26]++;return BigInt64Array;case'BigUint64Array':cov_24tv8o6xo1().b[1][10]++;cov_24tv8o6xo1().s[27]++;return BigUint64Array;/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected type');}};const bufferSourceClasses=(cov_24tv8o6xo1().s[28]++,new Set(['ArrayBuffer','DataView','Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']));let idx=(cov_24tv8o6xo1().s[29]++,0);/**
 * @type {import('../types.js').SuperTypeObject}
 */const buffersourceType=(cov_24tv8o6xo1().s[30]++,{option:['Buffer source (ArrayBuffer, DataView, TypedArrays)'],childTypes:['arraybuffer','dataview','int8array','uint8array','uint8clampedarray','int16array','uint16array','int32array','uint32array','float32array','float64array','bigint64array','biguint64array'],stringRegex:/^(?<bufferSourceClass>ArrayBuffer|DataView|(?:Int8|Uint8|Uint8Clamped|Int16|Uint16|Int32|Uint32|Float32|Float64|BigInt64|BigUint64)Array)\((?<innerContent>.*)\)$/u,valueMatch(x){cov_24tv8o6xo1().f[2]++;cov_24tv8o6xo1().s[31]++;return bufferSourceClasses.has(toStringTag(x));},toValue(s,rootInfo){cov_24tv8o6xo1().f[3]++;const{groups:{bufferSourceClass/* istanbul ignore next -- Should always be found */}=(cov_24tv8o6xo1().b[2][0]++,{})}=(/** @type {RegExpMatchArray} */ /** @type {import('../types.js').RootInfo} */cov_24tv8o6xo1().s[32]++,rootInfo.match);const o=(cov_24tv8o6xo1().s[33]++,JSON.parse(s));const{byteLength,maxByteLength,byteOffset,dataViewByteOffset,dataViewByteLength,length}=(cov_24tv8o6xo1().s[34]++,o);// @ts-expect-error Ok
const buffer=(cov_24tv8o6xo1().s[35]++,new ArrayBuffer(byteLength,{maxByteLength}));let typedArray,TypedArray;cov_24tv8o6xo1().s[36]++;if((cov_24tv8o6xo1().b[4][0]++,bufferSourceClass.endsWith('Array'))||(cov_24tv8o6xo1().b[4][1]++,'typedArray'in o)){cov_24tv8o6xo1().b[3][0]++;cov_24tv8o6xo1().s[37]++;TypedArray=getTypedArray(/** @type {TypedArray} */(cov_24tv8o6xo1().b[5][0]++,o.typedArray)??(cov_24tv8o6xo1().b[5][1]++,bufferSourceClass));cov_24tv8o6xo1().s[38]++;typedArray=new TypedArray(buffer,byteOffset,length);cov_24tv8o6xo1().s[39]++;if('set'in o){cov_24tv8o6xo1().b[6][0]++;cov_24tv8o6xo1().s[40]++;o.set[0].forEach(/**
           * @param {string} s
           * @param {number} i
           * @returns {void}
           */(s,i)=>{cov_24tv8o6xo1().f[4]++;cov_24tv8o6xo1().s[41]++;if(typeof s==='string'){cov_24tv8o6xo1().b[7][0]++;cov_24tv8o6xo1().s[42]++;o.set[0][i]=BigInt(s);}else{cov_24tv8o6xo1().b[7][1]++;}});cov_24tv8o6xo1().s[43]++;typedArray.set(...(/**
           * @type {[
           *   array: Array<bigint> & Array<number>,
           *   offset?: number | undefined
           * ]}
           */o.set));}else{cov_24tv8o6xo1().b[6][1]++;}}else{cov_24tv8o6xo1().b[3][1]++;}/** @type {DataView|undefined} */let view;cov_24tv8o6xo1().s[44]++;if((cov_24tv8o6xo1().b[9][0]++,bufferSourceClass==='DataView')||(cov_24tv8o6xo1().b[9][1]++,dataViewMethods.some(method=>{cov_24tv8o6xo1().f[5]++;cov_24tv8o6xo1().s[45]++;return method in o;}))){cov_24tv8o6xo1().b[8][0]++;cov_24tv8o6xo1().s[46]++;view=new DataView(buffer,dataViewByteOffset,dataViewByteLength);cov_24tv8o6xo1().s[47]++;dataViewMethods.forEach(prop=>{cov_24tv8o6xo1().f[6]++;cov_24tv8o6xo1().s[48]++;o[prop]?.forEach(/**
           * @type {(info: [
           *   byteOffset: number,
           *   value: bigint|number,
           *   littleEndian?: boolean|undefined
           * ]) => void}
           */vals=>{cov_24tv8o6xo1().f[7]++;cov_24tv8o6xo1().s[49]++;if(typeof vals[1]==='string'){cov_24tv8o6xo1().b[10][0]++;cov_24tv8o6xo1().s[50]++;vals[1]=BigInt(vals[1]);}else{cov_24tv8o6xo1().b[10][1]++;}// @ts-expect-error It's ok
cov_24tv8o6xo1().s[51]++;view[prop](...vals);});});}else{cov_24tv8o6xo1().b[8][1]++;}cov_24tv8o6xo1().s[52]++;return{value:bufferSourceClass==='ArrayBuffer'?(cov_24tv8o6xo1().b[11][0]++,buffer):(cov_24tv8o6xo1().b[11][1]++,bufferSourceClass==='DataView'?(cov_24tv8o6xo1().b[12][0]++,view):(cov_24tv8o6xo1().b[12][1]++,typedArray))};},getInput({root}){cov_24tv8o6xo1().f[8]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[53]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[54]++;return byteLength;},setValue({root,value}){cov_24tv8o6xo1().f[9]++;const stringTag=(cov_24tv8o6xo1().s[55]++,toStringTag(value));cov_24tv8o6xo1().s[56]++;if((cov_24tv8o6xo1().b[14][0]++,stringTag==='ArrayBuffer')||(cov_24tv8o6xo1().b[14][1]++,stringTag==='DataView')){cov_24tv8o6xo1().b[13][0]++;cov_24tv8o6xo1().s[57]++;$e(root,`[value=${stringTag}].buffersource-returnType`)?.click();}else{cov_24tv8o6xo1().b[13][1]++;cov_24tv8o6xo1().s[58]++;$e(root,`[value=TypedArray].buffersource-returnType`)?.click();const typedArrays=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[59]++,$e(root,'.buffersource-typedArrays'));cov_24tv8o6xo1().s[60]++;typedArrays.value=stringTag;cov_24tv8o6xo1().s[61]++;typedArrays.dispatchEvent(new Event('change'));}const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[62]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[63]++;byteLength.$value=value;const buffer=(cov_24tv8o6xo1().s[64]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[15][0]++,value):(cov_24tv8o6xo1().b[15][1]++,value.buffer));cov_24tv8o6xo1().s[65]++;byteLength.value=buffer.byteLength;cov_24tv8o6xo1().s[66]++;byteLength.dispatchEvent(new Event('change'));const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[67]++,$e(root,'.maxByteLength'));cov_24tv8o6xo1().s[68]++;maxByteLength.value=buffer.maxByteLength;cov_24tv8o6xo1().s[69]++;maxByteLength.dispatchEvent(new Event('change'));cov_24tv8o6xo1().s[70]++;if(stringTag==='DataView'){cov_24tv8o6xo1().b[16][0]++;const dataViewByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[71]++,$e(root,'.dataViewByteLength'));cov_24tv8o6xo1().s[72]++;dataViewByteLength.value=value.byteLength;cov_24tv8o6xo1().s[73]++;dataViewByteLength.dispatchEvent(new Event('change'));const dataViewByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[74]++,$e(root,'.dataViewByteOffset'));cov_24tv8o6xo1().s[75]++;dataViewByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[76]++;dataViewByteOffset.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[16][1]++;cov_24tv8o6xo1().s[77]++;if(stringTag!=='ArrayBuffer'){cov_24tv8o6xo1().b[17][0]++;// TypedArray
const typedArrayByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[78]++,$e(root,'.typedArrayByteOffset'));cov_24tv8o6xo1().s[79]++;typedArrayByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[80]++;typedArrayByteOffset.dispatchEvent(new Event('change'));const typedArrayLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[81]++,$e(root,'.typedArrayLength'));cov_24tv8o6xo1().s[82]++;typedArrayLength.value=value.length;cov_24tv8o6xo1().s[83]++;typedArrayLength.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[17][1]++;}}},getValue({root}){cov_24tv8o6xo1().f[10]++;cov_24tv8o6xo1().s[84]++;return/** @type {HTMLInputElement & {$value: BufferSource}} */this.getInput({root}).$value;},viewUI({value,specificSchemaObject}){cov_24tv8o6xo1().f[11]++;const stringTag=(cov_24tv8o6xo1().s[85]++,toStringTag(value));const buffer=(cov_24tv8o6xo1().s[86]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[18][0]++,value):(cov_24tv8o6xo1().b[18][1]++,value.buffer));cov_24tv8o6xo1().s[87]++;return['div',{dataset:{type:'buffersource'}},[['b',{class:'emphasis',title:specificSchemaObject?.description?(cov_24tv8o6xo1().b[19][0]++,/^[aeiou]/iu.test(stringTag)?(cov_24tv8o6xo1().b[20][0]++,`(an ${stringTag})`):(cov_24tv8o6xo1().b[20][1]++,`(a ${stringTag})`)):(cov_24tv8o6xo1().b[19][1]++,undefined)},[(cov_24tv8o6xo1().b[21][0]++,specificSchemaObject?.description)??(cov_24tv8o6xo1().b[21][1]++,stringTag)]],['br'],['b',['Buffer byte length: ']],buffer.byteLength,['br'],['b',['Buffer max byte length: ']],buffer.maxByteLength,...(stringTag==='DataView'?(cov_24tv8o6xo1().b[22][0]++,[['br'],['b',['Data View byte length: ']],value.byteLength,['br'],['b',['Data View byte offset: ']],value.byteOffset]):(cov_24tv8o6xo1().b[22][1]++,[''])),...((cov_24tv8o6xo1().b[24][0]++,stringTag!=='DataView')&&(cov_24tv8o6xo1().b[24][1]++,stringTag!=='ArrayBuffer')// TypedArray
?(cov_24tv8o6xo1().b[23][0]++,[['br'],['b',['Typed Array byte offset: ']],value.byteOffset,['br'],['b',['Typed Array length: ']],value.length]):(cov_24tv8o6xo1().b[23][1]++,[''])),['br'],['button',{class:'buffersource-viewData',$on:{async click(e){cov_24tv8o6xo1().f[12]++;cov_24tv8o6xo1().s[88]++;e.preventDefault();const dialog=(cov_24tv8o6xo1().s[89]++,await dialogs.makeCancelDialog({// @ts-expect-error TS bug
children:(/** @type {import('jamilih').JamilihChildren} */[['select',{class:'buffersource-typedArrays-view','aria-label':'Typed Arrays',$on:{change(){cov_24tv8o6xo1().f[13]++;const typedArrayVal=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[90]++,this.value);const TypedArray=(cov_24tv8o6xo1().s[91]++,getTypedArray(/** @type {TypedArray} */typedArrayVal));const typedArray=(cov_24tv8o6xo1().s[92]++,new TypedArray(buffer));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[93]++,$e(/** @type {HTMLElement} */this.parentElement,'.typedArrayArea'));cov_24tv8o6xo1().s[94]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[95]++;typedArrayArea.append(...Array.from({length:typedArray.length},(_v,key)=>{cov_24tv8o6xo1().f[14]++;cov_24tv8o6xo1().s[96]++;return jml('span',[['b',[key]],' ',['span',[typedArray[key]?(cov_24tv8o6xo1().b[25][0]++,String(typedArray[key])):(cov_24tv8o6xo1().b[25][1]++,'0')]],' ']);}));}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[15]++;cov_24tv8o6xo1().s[97]++;return['option',{selected:stringTag===typedArray?(cov_24tv8o6xo1().b[26][0]++,true):(cov_24tv8o6xo1().b[26][1]++,undefined)},[typedArray]];})],['div',{class:'typedArrayArea'}]])}));/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[98]++;$e(dialog,'.buffersource-typedArrays-view').dispatchEvent(new Event('change'));// Todo: We could also add `DataView` get methods here
//        (and length/byte offset for the typed array) if
//        there is a demand
}}},['View data']]]];},editUI({typeNamespace,value}){cov_24tv8o6xo1().f[16]++;cov_24tv8o6xo1().s[99]++;idx++;/**
     * @typedef {() => void} BuildInstances
     */const div=(cov_24tv8o6xo1().s[100]++,jml('div',{dataset:{type:'buffersource'}},[['fieldset',{class:'returnType',$on:{change(){cov_24tv8o6xo1().f[17]++;cov_24tv8o6xo1().s[101]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.$buildInstances();}},$custom:{/** @type {BuildInstances} */$buildInstances(){cov_24tv8o6xo1().f[18]++;const that=(/**
            * @type {HTMLFieldSetElement & {
            *   $buildInstances: BuildInstances
            * }}
            */cov_24tv8o6xo1().s[102]++,this);const ancestor=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[103]++,that.parentElement);const{value}=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[104]++,$e(that,`[name=${typeNamespace}-buffersource-returnType-${idx}]`+`:checked`));const byteLength=(/**
               * @type {HTMLInputElement & {
               *   $value: BufferSource,
               *   $dataView: DataView,
               *   $typedArray: TypedArrayInstance
               * }}
               */cov_24tv8o6xo1().s[105]++,$e(ancestor,'.byteLength'));const byteLengthVal=(cov_24tv8o6xo1().s[106]++,Number.parseInt(byteLength.value));const maxByteLength=(cov_24tv8o6xo1().s[107]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.maxByteLength').value));const buffer=(cov_24tv8o6xo1().s[108]++,new ArrayBuffer(// @ts-expect-error New ArrayBuffer argument
byteLengthVal,maxByteLength?(cov_24tv8o6xo1().b[27][0]++,{maxByteLength}):(cov_24tv8o6xo1().b[27][1]++,undefined)));const dataViewByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[109]++,$e(ancestor,'.dataViewByteOffset').value);const dataViewByteOffset=(cov_24tv8o6xo1().s[110]++,dataViewByteOffsetVal?(cov_24tv8o6xo1().b[28][0]++,Number.parseInt(dataViewByteOffsetVal)):(cov_24tv8o6xo1().b[28][1]++,0));const dataViewByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[111]++,$e(ancestor,'.dataViewByteLength').value);const dataViewByteLength=(cov_24tv8o6xo1().s[112]++,dataViewByteLengthVal?(cov_24tv8o6xo1().b[29][0]++,Number.parseInt(dataViewByteLengthVal)):(cov_24tv8o6xo1().b[29][1]++,undefined));const dataView=(cov_24tv8o6xo1().s[113]++,new DataView(buffer,dataViewByteOffset,dataViewByteLength));const{value:typedArrayValue}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[114]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[115]++,getTypedArray(/** @type {TypedArray} */typedArrayValue));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[116]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[117]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[30][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[30][1]++,0));const typedArrayLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[118]++,$e(ancestor,'.typedArrayLength').value);const typedArrayLength=(cov_24tv8o6xo1().s[119]++,typedArrayLengthVal?(cov_24tv8o6xo1().b[31][0]++,Number.parseInt(typedArrayLengthVal)):(cov_24tv8o6xo1().b[31][1]++,byteLengthVal));const typedArray=(cov_24tv8o6xo1().s[120]++,new TypedArray(buffer,typedArrayByteOffset,typedArrayLength));cov_24tv8o6xo1().s[121]++;byteLength.$dataView=dataView;cov_24tv8o6xo1().s[122]++;byteLength.$typedArray=typedArray;const typedArrayValues=(cov_24tv8o6xo1().s[123]++,$$e(ancestor,'.typedArrayArea .typedArrayValue').map(input=>{cov_24tv8o6xo1().f[19]++;cov_24tv8o6xo1().s[124]++;// Don't check dataset, as may be changing to BigInt now
return TypedArray.name.startsWith('Big')?(cov_24tv8o6xo1().b[32][0]++,BigInt(/** @type {HTMLInputElement} */input.value)):(cov_24tv8o6xo1().b[32][1]++,Number(/** @type {HTMLInputElement} */input.value));}));// @ts-expect-error Ok
cov_24tv8o6xo1().s[125]++;byteLength.$typedArray.set(typedArrayValues,0);cov_24tv8o6xo1().s[126]++;switch(value){case'ArrayBuffer':cov_24tv8o6xo1().b[33][0]++;cov_24tv8o6xo1().s[127]++;byteLength.$value=buffer;cov_24tv8o6xo1().s[128]++;break;case'DataView':cov_24tv8o6xo1().b[33][1]++;{cov_24tv8o6xo1().s[129]++;byteLength.$value=dataView;cov_24tv8o6xo1().s[130]++;break;}default:cov_24tv8o6xo1().b[33][2]++;cov_24tv8o6xo1().s[131]++;// 'TypedArray'
byteLength.$value=typedArray;cov_24tv8o6xo1().s[132]++;break;}}}},[['legend',['Return type']],['label',{$on:{click(){cov_24tv8o6xo1().f[20]++;cov_24tv8o6xo1().s[133]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[134]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType '+'buffersource-returnType-arraybuffer',name:`${typeNamespace}-buffersource-returnType-${idx}`,checked:true,value:'ArrayBuffer'// checked: toStringTag(value) !== ''
}],'ArrayBuffer']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[21]++;cov_24tv8o6xo1().s[135]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[136]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-dataview',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'DataView'// checked: toStringTag(value) !== ''
}],'DataView']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[22]++;cov_24tv8o6xo1().s[137]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=false;/** @type {HTMLElement} */cov_24tv8o6xo1().s[138]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=true;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-typedarray',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'TypedArray'// checked: toStringTag(value) !== ''
}],'Typed Array']],' ',['select',{hidden:true,class:'buffersource-typedArrays','aria-label':'Typed Arrays',$on:{change(e){cov_24tv8o6xo1().f[23]++;const that=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[139]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[140]++,that.parentElement?.parentElement);const select=(/**
                 * @type {HTMLSelectElement & {
                 *   $setMinsAndMaxes: SetMinsAndMaxes,
                 *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                 * }}
                 */cov_24tv8o6xo1().s[141]++,$e(ancestor,'.buffersource-typedArrays-init'));// Update to reflect current state changes if later revealing
cov_24tv8o6xo1().s[142]++;select.value=/** @type {HTMLSelectElement} */this.value;const typedArrayLength=(/**
                 * @type {HTMLInputElement & {
                 *   $checkBufferBounds: CheckBufferBounds
                 * }}
                 */cov_24tv8o6xo1().s[143]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[144]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[34][0]++;cov_24tv8o6xo1().s[145]++;return;}else{cov_24tv8o6xo1().b[34][1]++;}cov_24tv8o6xo1().s[146]++;select.$setMinsAndMaxes(/** @type {TypedArray} */ /** @type {HTMLSelectElement} */this.value);cov_24tv8o6xo1().s[147]++;select.$checkTypedArrayByteLength(e);const typedArrayByteOffset=(cov_24tv8o6xo1().s[148]++,$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[149]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[24]++;cov_24tv8o6xo1().s[150]++;return['option',[typedArray]];})]]],['fieldset',{$on:{change(){cov_24tv8o6xo1().f[25]++;cov_24tv8o6xo1().s[151]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.previousElementSibling.$buildInstances();}}},[['legend',['Construction options']],['fieldset',[['legend',['ArrayBuffer']],['label',['Byte length ',['input',{class:'byteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{$value:(cov_24tv8o6xo1().b[35][0]++,value)??(cov_24tv8o6xo1().b[35][1]++,new ArrayBuffer(0))},$on:{change(e){cov_24tv8o6xo1().f[26]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[152]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[153]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[154]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[155]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[36][0]++;cov_24tv8o6xo1().s[156]++;return;}else{cov_24tv8o6xo1().b[36][1]++;}const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[157]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.maxByteLength'));const val=(cov_24tv8o6xo1().s[158]++,that.value);cov_24tv8o6xo1().s[159]++;if(Number.parseInt(val)>Number.MAX_SAFE_INTEGER){cov_24tv8o6xo1().b[37][0]++;cov_24tv8o6xo1().s[160]++;that.setCustomValidity('The ArrayBuffer length exceeds the maximum '+'allowable size');cov_24tv8o6xo1().s[161]++;e.stopPropagation();cov_24tv8o6xo1().s[162]++;that.reportValidity();cov_24tv8o6xo1().s[163]++;return;}else{cov_24tv8o6xo1().b[37][1]++;}cov_24tv8o6xo1().s[164]++;that.setCustomValidity('');cov_24tv8o6xo1().s[165]++;that.reportValidity();cov_24tv8o6xo1().s[166]++;if(Number.parseInt(val)>Number.parseInt(maxByteLength.value)){cov_24tv8o6xo1().b[38][0]++;cov_24tv8o6xo1().s[167]++;maxByteLength.value=val;}else{cov_24tv8o6xo1().b[38][1]++;}const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[168]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[169]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);/**
                   * @type {HTMLSelectElement & {
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */cov_24tv8o6xo1().s[170]++;$e(/** @type {HTMLElement} */greatGrandparent.parentElement,'.buffersource-typedArrays-init').$checkTypedArrayByteLength(e);}}}]]],' ',['label',['Max byte length ',['input',{class:'maxByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[27]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[171]++,this);const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[172]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const val=(cov_24tv8o6xo1().s[173]++,that.value);cov_24tv8o6xo1().s[174]++;if(Number.parseInt(val)<Number.parseInt(byteLength.value)){cov_24tv8o6xo1().b[39][0]++;cov_24tv8o6xo1().s[175]++;// byteLength.value = val;
that.setCustomValidity('The max value cannot be less than the byte length');cov_24tv8o6xo1().s[176]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[39][1]++;cov_24tv8o6xo1().s[177]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[178]++;that.reportValidity();}}}]]]]],['fieldset',[['legend',['DataView']],['label',['Byte length ',['input',{class:'dataViewByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
                 * @typedef {(e: Event) => void} CheckDataViewByteLength
                 */ /** @type {CheckDataViewByteLength} */$checkDataViewByteLength(e){cov_24tv8o6xo1().f[28]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkDataViewByteLength: CheckDataViewByteLength
                  * }}
                  */cov_24tv8o6xo1().s[179]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[180]++,that.parentElement?.parentElement?.parentElement);const byteOffset=(cov_24tv8o6xo1().s[181]++,(cov_24tv8o6xo1().b[40][0]++,Number.parseInt(/** @type {HTMLInputElement} */$e(greatGrandparent,'.dataViewByteOffset').value))||(cov_24tv8o6xo1().b[40][1]++,0));const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[182]++,$e(greatGrandparent,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[183]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[41][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[41][1]++,0));const byteLength=(cov_24tv8o6xo1().s[184]++,that.value?(cov_24tv8o6xo1().b[42][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[42][1]++,bufferByteLength));cov_24tv8o6xo1().s[185]++;if(byteOffset+byteLength>bufferByteLength){cov_24tv8o6xo1().b[43][0]++;cov_24tv8o6xo1().s[186]++;that.setCustomValidity('The DataView byte length and offset exceed '+'the buffer\'s byte length');cov_24tv8o6xo1().s[187]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[43][1]++;cov_24tv8o6xo1().s[188]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[189]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[29]++;cov_24tv8o6xo1().s[190]++;/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */this.$checkDataViewByteLength(e);}}}]]],' ',['label',['Byte offset ',['input',{class:'dataViewByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[30]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[191]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[192]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[193]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);}}}]]]]],['fieldset',[['legend',['Typed array']],['label',['Byte offset ',['input',{class:'typedArrayByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,max:2**53-1,$custom:{/**
                 * @typedef {(e: Event) => void} CheckByteOffsetMultiple
                 */ /** @type {CheckByteOffsetMultiple} */$checkByteOffsetMultiple(e){cov_24tv8o6xo1().f[31]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                  * }}
                  */cov_24tv8o6xo1().s[194]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[195]++,that.parentElement?.parentElement?.parentElement?.parentElement);const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[196]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[197]++,getTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[198]++;if(Number.parseInt(that.value)%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[44][0]++;cov_24tv8o6xo1().s[199]++;that.setCustomValidity('Byte offset must be a multiple of the typed '+`array's bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[200]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[44][1]++;cov_24tv8o6xo1().s[201]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[202]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[32]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[203]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[204]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[205]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[206]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[45][0]++;cov_24tv8o6xo1().s[207]++;return;}else{cov_24tv8o6xo1().b[45][1]++;}/**
                   * @type {HTMLInputElement & {
                   *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                   * }}
                   */cov_24tv8o6xo1().s[208]++;this.$checkByteOffsetMultiple(e);}}}]]]// ' ',
// ['label', [
//   'Length ',
//   ['input', {
//     class: 'typedArrayLength',
//     type: 'number', step: '1', size: '4', pattern: '\\d+',
//     min: 0
//   }]
// ]]
]]]],['fieldset',[['legend',['Typed Array initialization (optional)']],['select',{class:'buffersource-typedArrays-init','aria-label':'Typed Arrays',$custom:{/**
             * @callback SetMinsAndMaxes
             * @param {TypedArray} typedArray
             * @returns {void}
             */ /** @type {SetMinsAndMaxes} */$setMinsAndMaxes(typedArray){cov_24tv8o6xo1().f[33]++;const{min,max}=(cov_24tv8o6xo1().s[209]++,getMinMaxForTypedArray(typedArray));/** @type {HTMLInputElement[]} */cov_24tv8o6xo1().s[210]++;$$e(/** @type {HTMLElement} */ /**
                   * @type {HTMLSelectElement & {
                   *   $setMinsAndMaxes: SetMinsAndMaxes,
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */this.parentElement,'.typedArrayValue').forEach(typedArrayValue=>{cov_24tv8o6xo1().f[34]++;cov_24tv8o6xo1().s[211]++;typedArrayValue.className='typedArrayValue typedArray-'+typedArray;cov_24tv8o6xo1().s[212]++;typedArrayValue.min=String(min);cov_24tv8o6xo1().s[213]++;typedArrayValue.max=String(max);});},/**
             * @typedef {(e: Event) => void} CheckTypedArrayByteLength
             */ /** @type {CheckTypedArrayByteLength} */$checkTypedArrayByteLength(e){cov_24tv8o6xo1().f[35]++;const that=(/**
              * @type {HTMLSelectElement & {
              *   $setMinsAndMaxes: SetMinsAndMaxes,
              *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
              * }}
              */cov_24tv8o6xo1().s[214]++,this);const TypedArray=(cov_24tv8o6xo1().s[215]++,getTypedArray(/** @type {TypedArray} */that.value));const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[216]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const arrayBufferLength=(cov_24tv8o6xo1().s[217]++,byteLength.value?(cov_24tv8o6xo1().b[46][0]++,Number.parseInt(byteLength.value)):(cov_24tv8o6xo1().b[46][1]++,0));cov_24tv8o6xo1().s[218]++;if(arrayBufferLength%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[47][0]++;cov_24tv8o6xo1().s[219]++;byteLength.setCustomValidity('Array buffer must be a multiple of the typed array\'s '+`bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[220]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[47][1]++;cov_24tv8o6xo1().s[221]++;byteLength.setCustomValidity('');}cov_24tv8o6xo1().s[222]++;byteLength.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[36]++;const that=(/**
                * @type {HTMLSelectElement & {
                *   $setMinsAndMaxes: SetMinsAndMaxes,
                *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                * }}
                */cov_24tv8o6xo1().s[223]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[224]++,that.parentElement?.parentElement?.parentElement);// Update to reflect current state changes if later revealing
/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[225]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.buffersource-typedArrays').value=that.value;const typedArrayLength=(/**
               * @type {HTMLInputElement & {
               *   $checkBufferBounds: CheckBufferBounds
               * }}
               */cov_24tv8o6xo1().s[226]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[227]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[48][0]++;cov_24tv8o6xo1().s[228]++;return;}else{cov_24tv8o6xo1().b[48][1]++;}cov_24tv8o6xo1().s[229]++;that.$checkTypedArrayByteLength(e);cov_24tv8o6xo1().s[230]++;that.$setMinsAndMaxes(/** @type {TypedArray} */that.value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[231]++,$e(/** @type {HTMLElement} */that?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[232]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);/**
               * @type {HTMLFieldSetElement & {
               *   $buildInstances: BuildInstances
               * }}
               */cov_24tv8o6xo1().s[233]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.returnType').$buildInstances();}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[37]++;cov_24tv8o6xo1().s[234]++;return['option',[typedArray]];})],' ',['label',['Array length: ',['input',{class:'typedArrayLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
               * When creating a view from a buffer, the bounds are outside
               * the buffer. In other words, `byteOffset + length *
               * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength`.
               * @typedef {(e: Event) => boolean} CheckBufferBounds
               */ /** @type {CheckBufferBounds} */$checkBufferBounds(e){cov_24tv8o6xo1().f[38]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[235]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[236]++,that.parentElement?.parentElement?.parentElement);const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[237]++,$e(ancestor,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[238]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[49][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[49][1]++,0));const length=(cov_24tv8o6xo1().s[239]++,that.value?(cov_24tv8o6xo1().b[50][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[50][1]++,bufferByteLength));const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[240]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[241]++,getTypedArray(/** @type {TypedArray} */value));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[242]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[243]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[51][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[51][1]++,0));cov_24tv8o6xo1().s[244]++;if(typedArrayByteOffset+length*TypedArray.BYTES_PER_ELEMENT>bufferByteLength){cov_24tv8o6xo1().b[52][0]++;cov_24tv8o6xo1().s[245]++;that.setCustomValidity('The byte offset and the length times bytes per element '+'is greater than the buffer length');cov_24tv8o6xo1().s[246]++;e.stopPropagation();cov_24tv8o6xo1().s[247]++;that.reportValidity();cov_24tv8o6xo1().s[248]++;return false;}else{cov_24tv8o6xo1().b[52][1]++;}cov_24tv8o6xo1().s[249]++;that.setCustomValidity('');cov_24tv8o6xo1().s[250]++;that.reportValidity();cov_24tv8o6xo1().s[251]++;return true;},/**
               * @typedef {() => void} BuildTypedArray
               */ /** @type {BuildTypedArray} */$buildTypedArray(){cov_24tv8o6xo1().f[39]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[252]++,this);const length=(cov_24tv8o6xo1().s[253]++,Number.parseInt(that.value));const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[254]++,that.parentElement?.parentElement);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[255]++,that.parentElement?.parentElement?.parentElement);const bufferByteLength=(/**
                   * @type {HTMLInputElement & {
                   *   $typedArray: TypedArrayInstance
                   * }}
                   */cov_24tv8o6xo1().s[256]++,$e(ancestor,'.byteLength'));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[257]++,$e(grandparent,'.typedArrayArea'));cov_24tv8o6xo1().s[258]++;typedArrayArea.addEventListener('change',e=>{cov_24tv8o6xo1().f[40]++;const input=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[259]++,e.target);cov_24tv8o6xo1().s[260]++;bufferByteLength.$typedArray.set([// @ts-expect-error Ok
input.dataset.bigint==='true'?(cov_24tv8o6xo1().b[53][0]++,BigInt(input.value)):(cov_24tv8o6xo1().b[53][1]++,Number(input.value))],Number.parseInt(/** @type {string} */input.dataset.key));});const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[261]++,$e(grandparent,'.buffersource-typedArrays-init'));const{min,max}=(cov_24tv8o6xo1().s[262]++,getMinMaxForTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[263]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[264]++;typedArrayArea.append(...Array.from({length},(_v,key)=>{cov_24tv8o6xo1().f[41]++;cov_24tv8o6xo1().s[265]++;return jml('label',[key,' ',['input',{class:'typedArrayValue typedArray-'+value,dataset:{key,bigint:String(value.startsWith('BigInt'))},type:'number',step:'1',pattern:value.startsWith('Float')?(cov_24tv8o6xo1().b[54][0]++,String.raw`\d+(?:\.\d+)?`):(cov_24tv8o6xo1().b[54][1]++,String.raw`\d+`),value:bufferByteLength.$typedArray[key]?(cov_24tv8o6xo1().b[55][0]++,String(bufferByteLength.$typedArray[key])):(cov_24tv8o6xo1().b[55][1]++,'0'),min,max}],' '// !key || key % 9 ? ' ' : ['br']
]);}));}},$on:{change(e){cov_24tv8o6xo1().f[42]++;const that=(/**
                   * @type {HTMLInputElement & {
                   *   $checkBufferBounds: CheckBufferBounds,
                   *   $buildTypedArray: BuildTypedArray
                   * }}
                   */cov_24tv8o6xo1().s[266]++,this);const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[267]++,this.parentElement?.parentElement);cov_24tv8o6xo1().s[268]++;if(!that.$checkBufferBounds(e)){cov_24tv8o6xo1().b[56][0]++;cov_24tv8o6xo1().s[269]++;return;}else{cov_24tv8o6xo1().b[56][1]++;}const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[270]++,$e(grandparent,'.buffersource-typedArrays-init'));const length=(cov_24tv8o6xo1().s[271]++,Number.parseInt(that.value));cov_24tv8o6xo1().s[272]++;try{const TypedArray=(cov_24tv8o6xo1().s[273]++,getTypedArray(/** @type {TypedArray} */value));// eslint-disable-next-line no-new -- Testing
cov_24tv8o6xo1().s[274]++;new TypedArray(length);}catch{cov_24tv8o6xo1().s[275]++;that.setCustomValidity('Typed Array length is too long');cov_24tv8o6xo1().s[276]++;e.stopPropagation();cov_24tv8o6xo1().s[277]++;that.reportValidity();cov_24tv8o6xo1().s[278]++;return;}cov_24tv8o6xo1().s[279]++;that.setCustomValidity('');cov_24tv8o6xo1().s[280]++;that.reportValidity();/**
                 * @type {HTMLFieldSetElement & {
                 *   $buildInstances: BuildInstances
                 * }}
                 */cov_24tv8o6xo1().s[281]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement?.parentElement,'.returnType').$buildInstances();cov_24tv8o6xo1().s[282]++;that.$buildTypedArray();}}}],['div',{class:'typedArrayArea'}]]]]],['fieldset',[['legend',['DataView initialization (optional)']],['select',{class:'dataViewMethod','aria-label':'Data View methods',$on:{change(){cov_24tv8o6xo1().f[43]++;const dataViewArea=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[283]++,$e(/** @type {HTMLElement} */this.parentElement,'.dataViewArea'));const val=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[284]++,this.value);const typedArray=(/** @type {TypedArray} */cov_24tv8o6xo1().s[285]++,val.slice(3)+'Array');cov_24tv8o6xo1().s[286]++;dataViewArea.textContent='';cov_24tv8o6xo1().s[287]++;dataViewArea.append(jml('label',['Byte offset ',['input',{type:'number',class:'dataViewSetByteOffset',step:'1',size:'4',pattern:String.raw`\d+`}]]),' ',jml('label',['Value ',['input',{type:'number',step:'1',size:'4',pattern:String.raw`\d+`,class:'typedArrayValue typedArray-'+typedArray,...getMinMaxForTypedArray(typedArray)}]]),(cov_24tv8o6xo1().b[58][0]++,val==='setInt8')||(cov_24tv8o6xo1().b[58][1]++,val==='setUint8')?(cov_24tv8o6xo1().b[57][0]++,''):(cov_24tv8o6xo1().b[57][1]++,jml('label',[['input',{class:'littleEndian',type:'checkbox'}],'Little endian'])),' ',jml('button',{$on:{click(e){cov_24tv8o6xo1().f[44]++;cov_24tv8o6xo1().s[288]++;e.preventDefault();const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[289]++,this.parentElement);const dataViewMethod=(/** @type {dataViewMethods[number]} */ /** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[290]++,ancestor.previousElementSibling?.value);const dataViewSetByteOffset=(cov_24tv8o6xo1().s[291]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.dataViewSetByteOffset').value));const typedArrayValue=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[292]++,$e(ancestor,'.typedArrayValue').value);const littleEndian=(/** @type {HTMLInputElement|null} */cov_24tv8o6xo1().s[293]++,$e(ancestor,'.littleEndian')?.checked);const byteLength=(/**
                         * @type {HTMLInputElement & {
                         *   $dataView: DataView,
                         * }}
                         */cov_24tv8o6xo1().s[294]++,$e(/** @type {HTMLElement} */ancestor?.parentElement?.parentElement,'.byteLength'));cov_24tv8o6xo1().s[295]++;if((cov_24tv8o6xo1().b[60][0]++,dataViewMethod==='setBigInt64')||(cov_24tv8o6xo1().b[60][1]++,dataViewMethod==='setBigUint64')){cov_24tv8o6xo1().b[59][0]++;cov_24tv8o6xo1().s[296]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,BigInt(typedArrayValue),littleEndian);}else{cov_24tv8o6xo1().b[59][1]++;cov_24tv8o6xo1().s[297]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,Number(typedArrayValue),littleEndian);}const typedArrayLength=(/**
                         * @type {HTMLInputElement & {
                         *   $buildTypedArray: BuildTypedArray
                         * }}
                         */cov_24tv8o6xo1().s[298]++,$e(/** @type {HTMLElement} */ancestor.parentElement?.parentElement,'.typedArrayLength'));cov_24tv8o6xo1().s[299]++;typedArrayLength.$buildTypedArray();}}},['Set']));}}},[['option',{value:''},['(Select a data view method)']],...dataViewMethods.map(dataViewMethod=>{cov_24tv8o6xo1().f[45]++;cov_24tv8o6xo1().s[300]++;return/** @type {import('jamilih').JamilihArray} */['option',[dataViewMethod]];})]],' ',['div',{class:'dataViewArea'}]]]]));cov_24tv8o6xo1().s[301]++;if((cov_24tv8o6xo1().b[62][0]++,this.setValue)&&(cov_24tv8o6xo1().b[62][1]++,value)){cov_24tv8o6xo1().b[61][0]++;cov_24tv8o6xo1().s[302]++;this.setValue({root:div,value});}else{cov_24tv8o6xo1().b[61][1]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[303]++,$e(div,'.byteLength'));cov_24tv8o6xo1().s[304]++;byteLength.$value=new ArrayBuffer(0);}cov_24tv8o6xo1().s[305]++;return[div];}});export default buffersourceType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjR0djhvNnhvMSIsImFjdHVhbENvdmVyYWdlIiwiJGUiLCIkJGUiLCJqbWwiLCJ0b1N0cmluZ1RhZyIsImRpYWxvZ3MiLCJkYXRhVmlld01ldGhvZHMiLCJzIiwidHlwZWRBcnJheXMiLCJnZXRNaW5NYXhGb3JUeXBlZEFycmF5IiwidHlwZWRBcnJheSIsImYiLCJiIiwibWluIiwibWF4IiwiRXJyb3IiLCJnZXRUeXBlZEFycmF5IiwicHJvcCIsIkludDhBcnJheSIsIlVpbnQ4QXJyYXkiLCJVaW50OENsYW1wZWRBcnJheSIsIkludDE2QXJyYXkiLCJVaW50MTZBcnJheSIsIkludDMyQXJyYXkiLCJVaW50MzJBcnJheSIsIkZsb2F0MzJBcnJheSIsIkZsb2F0NjRBcnJheSIsIkJpZ0ludDY0QXJyYXkiLCJCaWdVaW50NjRBcnJheSIsImJ1ZmZlclNvdXJjZUNsYXNzZXMiLCJTZXQiLCJpZHgiLCJidWZmZXJzb3VyY2VUeXBlIiwib3B0aW9uIiwiY2hpbGRUeXBlcyIsInN0cmluZ1JlZ2V4IiwidmFsdWVNYXRjaCIsIngiLCJoYXMiLCJ0b1ZhbHVlIiwicm9vdEluZm8iLCJncm91cHMiLCJidWZmZXJTb3VyY2VDbGFzcyIsIm1hdGNoIiwibyIsIkpTT04iLCJwYXJzZSIsImJ5dGVMZW5ndGgiLCJtYXhCeXRlTGVuZ3RoIiwiYnl0ZU9mZnNldCIsImRhdGFWaWV3Qnl0ZU9mZnNldCIsImRhdGFWaWV3Qnl0ZUxlbmd0aCIsImxlbmd0aCIsImJ1ZmZlciIsIkFycmF5QnVmZmVyIiwiVHlwZWRBcnJheSIsImVuZHNXaXRoIiwic2V0IiwiZm9yRWFjaCIsImkiLCJCaWdJbnQiLCJ2aWV3Iiwic29tZSIsIm1ldGhvZCIsIkRhdGFWaWV3IiwidmFscyIsInZhbHVlIiwiZ2V0SW5wdXQiLCJyb290Iiwic2V0VmFsdWUiLCJzdHJpbmdUYWciLCJjbGljayIsImRpc3BhdGNoRXZlbnQiLCJFdmVudCIsIiR2YWx1ZSIsInR5cGVkQXJyYXlCeXRlT2Zmc2V0IiwidHlwZWRBcnJheUxlbmd0aCIsImdldFZhbHVlIiwidmlld1VJIiwic3BlY2lmaWNTY2hlbWFPYmplY3QiLCJkYXRhc2V0IiwidHlwZSIsImNsYXNzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInRlc3QiLCJ1bmRlZmluZWQiLCIkb24iLCJlIiwicHJldmVudERlZmF1bHQiLCJkaWFsb2ciLCJtYWtlQ2FuY2VsRGlhbG9nIiwiY2hpbGRyZW4iLCJjaGFuZ2UiLCJ0eXBlZEFycmF5VmFsIiwidHlwZWRBcnJheUFyZWEiLCJwYXJlbnRFbGVtZW50IiwidGV4dENvbnRlbnQiLCJhcHBlbmQiLCJBcnJheSIsImZyb20iLCJfdiIsImtleSIsIlN0cmluZyIsIm1hcCIsInNlbGVjdGVkIiwiZWRpdFVJIiwidHlwZU5hbWVzcGFjZSIsImRpdiIsIiRidWlsZEluc3RhbmNlcyIsIiRjdXN0b20iLCJ0aGF0IiwiYW5jZXN0b3IiLCJieXRlTGVuZ3RoVmFsIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJkYXRhVmlld0J5dGVPZmZzZXRWYWwiLCJkYXRhVmlld0J5dGVMZW5ndGhWYWwiLCJkYXRhVmlldyIsInR5cGVkQXJyYXlWYWx1ZSIsInR5cGVkQXJyYXlCeXRlT2Zmc2V0VmFsIiwidHlwZWRBcnJheUxlbmd0aFZhbCIsIiRkYXRhVmlldyIsIiR0eXBlZEFycmF5IiwidHlwZWRBcnJheVZhbHVlcyIsImlucHV0IiwibmFtZSIsInN0YXJ0c1dpdGgiLCJoaWRkZW4iLCJjaGVja2VkIiwic2VsZWN0IiwiJGNoZWNrQnVmZmVyQm91bmRzIiwiJHNldE1pbnNBbmRNYXhlcyIsIiRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoIiwiJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsInN0ZXAiLCJzaXplIiwicGF0dGVybiIsInJhdyIsInZhbCIsIk1BWF9TQUZFX0lOVEVHRVIiLCJzZXRDdXN0b21WYWxpZGl0eSIsInN0b3BQcm9wYWdhdGlvbiIsInJlcG9ydFZhbGlkaXR5IiwiZ3JlYXRHcmFuZHBhcmVudCIsIiRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aCIsImJ1ZmZlckJ5dGVMZW5ndGhWYWwiLCJidWZmZXJCeXRlTGVuZ3RoIiwiQllURVNfUEVSX0VMRU1FTlQiLCJjbGFzc05hbWUiLCJhcnJheUJ1ZmZlckxlbmd0aCIsIiRidWlsZFR5cGVkQXJyYXkiLCJncmFuZHBhcmVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJiaWdpbnQiLCJkYXRhVmlld0FyZWEiLCJzbGljZSIsImRhdGFWaWV3TWV0aG9kIiwiZGF0YVZpZXdTZXRCeXRlT2Zmc2V0IiwibGl0dGxlRW5kaWFuIl0sInNvdXJjZXMiOlsiYnVmZmVyc291cmNlVHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyRlLCAkJGV9IGZyb20gJy4uL3V0aWxzL3RlbXBsYXRlVXRpbHMuanMnO1xuaW1wb3J0IHtqbWwsIHRvU3RyaW5nVGFnfSBmcm9tICcuLi92ZW5kb3ItaW1wb3J0cy5qcyc7XG5pbXBvcnQgZGlhbG9ncyBmcm9tICcuLi91dGlscy9kaWFsb2dzLmpzJztcblxuY29uc3QgZGF0YVZpZXdNZXRob2RzID0gLyoqIEB0eXBlIHtjb25zdH0gKi8gKFtcbiAgJ3NldEludDgnLFxuICAnc2V0VWludDgnLFxuICAnc2V0SW50MTYnLFxuICAnc2V0VWludDE2JyxcbiAgJ3NldEludDMyJyxcbiAgJ3NldFVpbnQzMicsXG4gICdzZXRGbG9hdDMyJyxcbiAgJ3NldEZsb2F0NjQnLFxuICAnc2V0QmlnSW50NjQnLFxuICAnc2V0QmlnVWludDY0J1xuXSk7XG5cbmNvbnN0IHR5cGVkQXJyYXlzID0gLyoqIEB0eXBlIHtjb25zdH0gKi8gKFtcbiAgJ0ludDhBcnJheScsICdVaW50OEFycmF5JywgJ1VpbnQ4Q2xhbXBlZEFycmF5JywgJ0ludDE2QXJyYXknLFxuICAnVWludDE2QXJyYXknLCAnSW50MzJBcnJheScsICdVaW50MzJBcnJheScsICdGbG9hdDMyQXJyYXknLFxuICAnRmxvYXQ2NEFycmF5JywgJ0JpZ0ludDY0QXJyYXknLCAnQmlnVWludDY0QXJyYXknXG5dKTtcblxuLyoqXG4gKiBAcGFyYW0ge1R5cGVkQXJyYXl9IHR5cGVkQXJyYXlcbiAqIEByZXR1cm5zIHt7bWluOiBudW1iZXIsIG1heDogbnVtYmVyfX1cbiAqL1xuY29uc3QgZ2V0TWluTWF4Rm9yVHlwZWRBcnJheSA9ICh0eXBlZEFycmF5KSA9PiB7XG4gIHN3aXRjaCAodHlwZWRBcnJheSkge1xuICBjYXNlICdJbnQ4QXJyYXknOlxuICAgIHJldHVybiB7bWluOiAtMTI4LCBtYXg6IDEyN307XG4gIGNhc2UgJ1VpbnQ4QXJyYXknOlxuICAgIHJldHVybiB7bWluOiAwLCBtYXg6IDI1NX07XG4gIGNhc2UgJ1VpbnQ4Q2xhbXBlZEFycmF5JzpcbiAgICByZXR1cm4ge21pbjogMCwgbWF4OiAyNTV9O1xuICBjYXNlICdJbnQxNkFycmF5JzpcbiAgICByZXR1cm4ge21pbjogLTMyNzY4LCBtYXg6IDMyNzY3fTtcbiAgY2FzZSAnVWludDE2QXJyYXknOlxuICAgIHJldHVybiB7bWluOiAwLCBtYXg6IDY1NTM1fTtcbiAgY2FzZSAnSW50MzJBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IC0yMTQ3NDgzNjQ4LCBtYXg6IDIxNDc0ODM2NDd9O1xuICBjYXNlICdVaW50MzJBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IDAsIG1heDogNDI5NDk2NzI5NX07XG4gIGNhc2UgJ0Zsb2F0MzJBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IC0zLjRlMzgsIG1heDogMy40ZTM4fTtcbiAgY2FzZSAnRmxvYXQ2NEFycmF5JzpcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9zcy1vZi1wcmVjaXNpb24gLS0gSW5ldml0YWJsZT9cbiAgICByZXR1cm4ge21pbjogLTEuOGUzMDgsIG1heDogMS44ZTMwOH07XG4gIGNhc2UgJ0JpZ0ludDY0QXJyYXknOlxuICAgIHJldHVybiB7bWluOiAtKDIgKiogNjMpLCBtYXg6ICgyICoqIDYzKSAtIDF9O1xuICBjYXNlICdCaWdVaW50NjRBcnJheSc6XG4gICAgcmV0dXJuIHttaW46IDAsIG1heDogKDIgKiogNjQpIC0gMX07XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0IC0tIEd1YXJkICovXG4gIGRlZmF1bHQ6XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgLS0gR3VhcmQgKi9cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdHlwZWQgYXJyYXkgdHlwZScpO1xuICB9XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtcIkludDhBcnJheVwifFwiVWludDhBcnJheVwifFwiVWludDhDbGFtcGVkQXJyYXlcInxcbiAqICAgXCJJbnQxNkFycmF5XCJ8XCJVaW50MTZBcnJheVwifFwiSW50MzJBcnJheVwifFwiVWludDMyQXJyYXlcInxcbiAqICAgXCJGbG9hdDMyQXJyYXlcInxcIkZsb2F0NjRBcnJheVwifFwiQmlnSW50NjRBcnJheVwifFxuICogICBcIkJpZ1VpbnQ2NEFycmF5XCJ9IFR5cGVkQXJyYXlcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtJbnQ4QXJyYXl8VWludDhBcnJheXxVaW50OENsYW1wZWRBcnJheXxcbiAqICAgSW50MTZBcnJheXxVaW50MTZBcnJheXxJbnQzMkFycmF5fFVpbnQzMkFycmF5fFxuKiAgIEZsb2F0MzJBcnJheXxGbG9hdDY0QXJyYXl8QmlnSW50NjRBcnJheXxcbiogICBCaWdVaW50NjRBcnJheX0gVHlwZWRBcnJheUluc3RhbmNlXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1R5cGVkQXJyYXl9IHByb3BcbiAqIEByZXR1cm5zIHtJbnQ4QXJyYXlDb25zdHJ1Y3RvcnxVaW50OEFycmF5Q29uc3RydWN0b3J8XG4gKiAgIFVpbnQ4Q2xhbXBlZEFycmF5Q29uc3RydWN0b3J8SW50MTZBcnJheUNvbnN0cnVjdG9yfFxuICogICBVaW50MTZBcnJheUNvbnN0cnVjdG9yfEludDMyQXJyYXlDb25zdHJ1Y3RvcnxVaW50MzJBcnJheUNvbnN0cnVjdG9yfFxuICogICBGbG9hdDMyQXJyYXlDb25zdHJ1Y3RvcnxGbG9hdDY0QXJyYXlDb25zdHJ1Y3RvcnxcbiAqICAgQmlnSW50NjRBcnJheUNvbnN0cnVjdG9yfEJpZ1VpbnQ2NEFycmF5Q29uc3RydWN0b3J9XG4gKi9cbmNvbnN0IGdldFR5cGVkQXJyYXkgPSAocHJvcCkgPT4ge1xuICBzd2l0Y2ggKHByb3ApIHtcbiAgY2FzZSAnSW50OEFycmF5JzpcbiAgICByZXR1cm4gSW50OEFycmF5O1xuICBjYXNlICdVaW50OEFycmF5JzpcbiAgICByZXR1cm4gVWludDhBcnJheTtcbiAgY2FzZSAnVWludDhDbGFtcGVkQXJyYXknOlxuICAgIHJldHVybiBVaW50OENsYW1wZWRBcnJheTtcbiAgY2FzZSAnSW50MTZBcnJheSc6XG4gICAgcmV0dXJuIEludDE2QXJyYXk7XG4gIGNhc2UgJ1VpbnQxNkFycmF5JzpcbiAgICByZXR1cm4gVWludDE2QXJyYXk7XG4gIGNhc2UgJ0ludDMyQXJyYXknOlxuICAgIHJldHVybiBJbnQzMkFycmF5O1xuICBjYXNlICdVaW50MzJBcnJheSc6XG4gICAgcmV0dXJuIFVpbnQzMkFycmF5O1xuICBjYXNlICdGbG9hdDMyQXJyYXknOlxuICAgIHJldHVybiBGbG9hdDMyQXJyYXk7XG4gIGNhc2UgJ0Zsb2F0NjRBcnJheSc6XG4gICAgcmV0dXJuIEZsb2F0NjRBcnJheTtcbiAgY2FzZSAnQmlnSW50NjRBcnJheSc6XG4gICAgcmV0dXJuIEJpZ0ludDY0QXJyYXk7XG4gIGNhc2UgJ0JpZ1VpbnQ2NEFycmF5JzpcbiAgICByZXR1cm4gQmlnVWludDY0QXJyYXk7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0IC0tIEd1YXJkICovXG4gIGRlZmF1bHQ6XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgLS0gR3VhcmQgKi9cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdHlwZScpO1xuICB9XG59O1xuXG5jb25zdCBidWZmZXJTb3VyY2VDbGFzc2VzID0gbmV3IFNldChbXG4gICdBcnJheUJ1ZmZlcicsICdEYXRhVmlldycsXG4gICdJbnQ4QXJyYXknLCAnVWludDhBcnJheScsICdVaW50OENsYW1wZWRBcnJheScsICdJbnQxNkFycmF5JywgJ1VpbnQxNkFycmF5JyxcbiAgJ0ludDMyQXJyYXknLCAnVWludDMyQXJyYXknLCAnRmxvYXQzMkFycmF5JywgJ0Zsb2F0NjRBcnJheScsICdCaWdJbnQ2NEFycmF5JyxcbiAgJ0JpZ1VpbnQ2NEFycmF5J1xuXSk7XG5cbmxldCBpZHggPSAwO1xuXG4vKipcbiAqIEB0eXBlIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3VwZXJUeXBlT2JqZWN0fVxuICovXG5jb25zdCBidWZmZXJzb3VyY2VUeXBlID0ge1xuICBvcHRpb246IFsnQnVmZmVyIHNvdXJjZSAoQXJyYXlCdWZmZXIsIERhdGFWaWV3LCBUeXBlZEFycmF5cyknXSxcbiAgY2hpbGRUeXBlczogW1xuICAgICdhcnJheWJ1ZmZlcicsXG4gICAgJ2RhdGF2aWV3JyxcbiAgICAnaW50OGFycmF5JywgJ3VpbnQ4YXJyYXknLCAndWludDhjbGFtcGVkYXJyYXknLCAnaW50MTZhcnJheScsXG4gICAgJ3VpbnQxNmFycmF5JywgJ2ludDMyYXJyYXknLCAndWludDMyYXJyYXknLCAnZmxvYXQzMmFycmF5JyxcbiAgICAnZmxvYXQ2NGFycmF5JywgJ2JpZ2ludDY0YXJyYXknLCAnYmlndWludDY0YXJyYXknXG4gIF0sXG4gIHN0cmluZ1JlZ2V4OiAvXig/PGJ1ZmZlclNvdXJjZUNsYXNzPkFycmF5QnVmZmVyfERhdGFWaWV3fCg/OkludDh8VWludDh8VWludDhDbGFtcGVkfEludDE2fFVpbnQxNnxJbnQzMnxVaW50MzJ8RmxvYXQzMnxGbG9hdDY0fEJpZ0ludDY0fEJpZ1VpbnQ2NClBcnJheSlcXCgoPzxpbm5lckNvbnRlbnQ+LiopXFwpJC91LFxuICB2YWx1ZU1hdGNoICh4KSB7XG4gICAgcmV0dXJuIGJ1ZmZlclNvdXJjZUNsYXNzZXMuaGFzKHRvU3RyaW5nVGFnKHgpKTtcbiAgfSxcbiAgdG9WYWx1ZSAocywgcm9vdEluZm8pIHtcbiAgICBjb25zdCB7Z3JvdXBzOiB7XG4gICAgICBidWZmZXJTb3VyY2VDbGFzc1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0IC0tIFNob3VsZCBhbHdheXMgYmUgZm91bmQgKi9cbiAgICB9ID0ge319ID0gLyoqIEB0eXBlIHtSZWdFeHBNYXRjaEFycmF5fSAqLyAoXG4gICAgICAvKiogQHR5cGUge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5Sb290SW5mb30gKi8gKHJvb3RJbmZvKS5tYXRjaFxuICAgICk7XG5cbiAgICBjb25zdCBvID0gSlNPTi5wYXJzZShzKTtcbiAgICBjb25zdCB7XG4gICAgICBieXRlTGVuZ3RoLCBtYXhCeXRlTGVuZ3RoLCBieXRlT2Zmc2V0LFxuICAgICAgZGF0YVZpZXdCeXRlT2Zmc2V0LFxuICAgICAgZGF0YVZpZXdCeXRlTGVuZ3RoLCBsZW5ndGhcbiAgICB9ID0gbztcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIE9rXG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGJ5dGVMZW5ndGgsIHttYXhCeXRlTGVuZ3RofSk7XG5cbiAgICBsZXQgdHlwZWRBcnJheSwgVHlwZWRBcnJheTtcbiAgICBpZiAoYnVmZmVyU291cmNlQ2xhc3MuZW5kc1dpdGgoJ0FycmF5JykgfHwgJ3R5cGVkQXJyYXknIGluIG8pIHtcbiAgICAgIFR5cGVkQXJyYXkgPSBnZXRUeXBlZEFycmF5KFxuICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovIChvLnR5cGVkQXJyYXkgPz8gYnVmZmVyU291cmNlQ2xhc3MpXG4gICAgICApO1xuXG4gICAgICB0eXBlZEFycmF5ID0gbmV3IFR5cGVkQXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuXG4gICAgICBpZiAoJ3NldCcgaW4gbykge1xuICAgICAgICBvLnNldFswXS5mb3JFYWNoKFxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzXG4gICAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGlcbiAgICAgICAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgICAgICAgKi9cbiAgICAgICAgICAocywgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBvLnNldFswXVtpXSA9IEJpZ0ludChzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHR5cGVkQXJyYXkuc2V0KC4uLihcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBAdHlwZSB7W1xuICAgICAgICAgICAqICAgYXJyYXk6IEFycmF5PGJpZ2ludD4gJiBBcnJheTxudW1iZXI+LFxuICAgICAgICAgICAqICAgb2Zmc2V0PzogbnVtYmVyIHwgdW5kZWZpbmVkXG4gICAgICAgICAgICogXX1cbiAgICAgICAgICAgKi8gKG8uc2V0KSkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAdHlwZSB7RGF0YVZpZXd8dW5kZWZpbmVkfSAqL1xuICAgIGxldCB2aWV3O1xuICAgIGlmIChidWZmZXJTb3VyY2VDbGFzcyA9PT0gJ0RhdGFWaWV3JyB8fCBkYXRhVmlld01ldGhvZHMuc29tZSgobWV0aG9kKSA9PiB7XG4gICAgICByZXR1cm4gbWV0aG9kIGluIG87XG4gICAgfSkpIHtcbiAgICAgIHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyLCBkYXRhVmlld0J5dGVPZmZzZXQsIGRhdGFWaWV3Qnl0ZUxlbmd0aCk7XG4gICAgICBkYXRhVmlld01ldGhvZHMuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgICBvW3Byb3BdPy5mb3JFYWNoKFxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIEB0eXBlIHsoaW5mbzogW1xuICAgICAgICAgICAqICAgYnl0ZU9mZnNldDogbnVtYmVyLFxuICAgICAgICAgICAqICAgdmFsdWU6IGJpZ2ludHxudW1iZXIsXG4gICAgICAgICAgICogICBsaXR0bGVFbmRpYW4/OiBib29sZWFufHVuZGVmaW5lZFxuICAgICAgICAgICAqIF0pID0+IHZvaWR9XG4gICAgICAgICAgICovXG4gICAgICAgICAgKHZhbHMpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsc1sxXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgdmFsc1sxXSA9IEJpZ0ludCh2YWxzWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSXQncyBva1xuICAgICAgICAgICAgdmlld1twcm9wXSguLi52YWxzKTtcbiAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiBidWZmZXJTb3VyY2VDbGFzcyA9PT0gJ0FycmF5QnVmZmVyJ1xuICAgICAgICA/IGJ1ZmZlclxuICAgICAgICA6IGJ1ZmZlclNvdXJjZUNsYXNzID09PSAnRGF0YVZpZXcnXG4gICAgICAgICAgPyB2aWV3XG4gICAgICAgICAgOiB0eXBlZEFycmF5XG4gICAgfTtcbiAgfSxcbiAgZ2V0SW5wdXQgKHtyb290fSkge1xuICAgIGNvbnN0IGJ5dGVMZW5ndGggPVxuICAgICAgLyoqXG4gICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAqICAgJHZhbHVlOiBCdWZmZXJTb3VyY2VcbiAgICAgICAqIH19XG4gICAgICAgKi8gKCRlKHJvb3QsICcuYnl0ZUxlbmd0aCcpKTtcbiAgICByZXR1cm4gYnl0ZUxlbmd0aDtcbiAgfSxcbiAgc2V0VmFsdWUgKHtyb290LCB2YWx1ZX0pIHtcbiAgICBjb25zdCBzdHJpbmdUYWcgPSB0b1N0cmluZ1RhZyh2YWx1ZSk7XG4gICAgaWYgKHN0cmluZ1RhZyA9PT0gJ0FycmF5QnVmZmVyJyB8fCBzdHJpbmdUYWcgPT09ICdEYXRhVmlldycpIHtcbiAgICAgICRlKHJvb3QsIGBbdmFsdWU9JHtzdHJpbmdUYWd9XS5idWZmZXJzb3VyY2UtcmV0dXJuVHlwZWApPy5jbGljaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkZShyb290LCBgW3ZhbHVlPVR5cGVkQXJyYXldLmJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlYCk/LmNsaWNrKCk7XG4gICAgICBjb25zdCB0eXBlZEFycmF5cyA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgJGUocm9vdCwgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMnKVxuICAgICAgKTtcbiAgICAgIHR5cGVkQXJyYXlzLnZhbHVlID0gc3RyaW5nVGFnO1xuICAgICAgdHlwZWRBcnJheXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScpKTtcbiAgICB9XG5cbiAgICBjb25zdCBieXRlTGVuZ3RoID1cbiAgICAgIC8qKlxuICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgKiAgICR2YWx1ZTogQnVmZmVyU291cmNlXG4gICAgICAgKiB9fVxuICAgICAgICovICgkZShyb290LCAnLmJ5dGVMZW5ndGgnKSk7XG5cbiAgICBieXRlTGVuZ3RoLiR2YWx1ZSA9IHZhbHVlO1xuXG4gICAgY29uc3QgYnVmZmVyID0gc3RyaW5nVGFnID09PSAnQXJyYXlCdWZmZXInID8gdmFsdWUgOiB2YWx1ZS5idWZmZXI7XG4gICAgYnl0ZUxlbmd0aC52YWx1ZSA9IGJ1ZmZlci5ieXRlTGVuZ3RoO1xuICAgIGJ5dGVMZW5ndGguZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScpKTtcblxuICAgIGNvbnN0IG1heEJ5dGVMZW5ndGggPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICRlKHJvb3QsICcubWF4Qnl0ZUxlbmd0aCcpXG4gICAgKTtcbiAgICBtYXhCeXRlTGVuZ3RoLnZhbHVlID0gYnVmZmVyLm1heEJ5dGVMZW5ndGg7XG4gICAgbWF4Qnl0ZUxlbmd0aC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuXG4gICAgaWYgKHN0cmluZ1RhZyA9PT0gJ0RhdGFWaWV3Jykge1xuICAgICAgY29uc3QgZGF0YVZpZXdCeXRlTGVuZ3RoID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICRlKHJvb3QsICcuZGF0YVZpZXdCeXRlTGVuZ3RoJylcbiAgICAgICk7XG4gICAgICBkYXRhVmlld0J5dGVMZW5ndGgudmFsdWUgPSB2YWx1ZS5ieXRlTGVuZ3RoO1xuICAgICAgZGF0YVZpZXdCeXRlTGVuZ3RoLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG5cbiAgICAgIGNvbnN0IGRhdGFWaWV3Qnl0ZU9mZnNldCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKFxuICAgICAgICAkZShyb290LCAnLmRhdGFWaWV3Qnl0ZU9mZnNldCcpXG4gICAgICApO1xuICAgICAgZGF0YVZpZXdCeXRlT2Zmc2V0LnZhbHVlID0gdmFsdWUuYnl0ZU9mZnNldDtcbiAgICAgIGRhdGFWaWV3Qnl0ZU9mZnNldC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuICAgIH0gZWxzZSBpZiAoc3RyaW5nVGFnICE9PSAnQXJyYXlCdWZmZXInKSB7IC8vIFR5cGVkQXJyYXlcbiAgICAgIGNvbnN0IHR5cGVkQXJyYXlCeXRlT2Zmc2V0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICRlKHJvb3QsICcudHlwZWRBcnJheUJ5dGVPZmZzZXQnKVxuICAgICAgKTtcbiAgICAgIHR5cGVkQXJyYXlCeXRlT2Zmc2V0LnZhbHVlID0gdmFsdWUuYnl0ZU9mZnNldDtcbiAgICAgIHR5cGVkQXJyYXlCeXRlT2Zmc2V0LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG5cbiAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgJGUocm9vdCwgJy50eXBlZEFycmF5TGVuZ3RoJylcbiAgICAgICk7XG4gICAgICB0eXBlZEFycmF5TGVuZ3RoLnZhbHVlID0gdmFsdWUubGVuZ3RoO1xuICAgICAgdHlwZWRBcnJheUxlbmd0aC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuICAgIH1cbiAgfSxcbiAgZ2V0VmFsdWUgKHtyb290fSkge1xuICAgIHJldHVybiAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7JHZhbHVlOiBCdWZmZXJTb3VyY2V9fSAqLyAoXG4gICAgICB0aGlzLmdldElucHV0KHtyb290fSlcbiAgICApLiR2YWx1ZTtcbiAgfSxcbiAgdmlld1VJICh7dmFsdWUsIHNwZWNpZmljU2NoZW1hT2JqZWN0fSkge1xuICAgIGNvbnN0IHN0cmluZ1RhZyA9IHRvU3RyaW5nVGFnKHZhbHVlKTtcbiAgICBjb25zdCBidWZmZXIgPSBzdHJpbmdUYWcgPT09ICdBcnJheUJ1ZmZlcicgPyB2YWx1ZSA6IHZhbHVlLmJ1ZmZlcjtcblxuICAgIHJldHVybiBbJ2RpdicsIHtkYXRhc2V0OiB7dHlwZTogJ2J1ZmZlcnNvdXJjZSd9fSwgW1xuICAgICAgWydiJywge1xuICAgICAgICBjbGFzczogJ2VtcGhhc2lzJyxcbiAgICAgICAgdGl0bGU6IHNwZWNpZmljU2NoZW1hT2JqZWN0Py5kZXNjcmlwdGlvblxuICAgICAgICAgID8gKC9eW2FlaW91XS9pdSkudGVzdChzdHJpbmdUYWcpXG4gICAgICAgICAgICA/IGAoYW4gJHtzdHJpbmdUYWd9KWBcbiAgICAgICAgICAgIDogYChhICR7c3RyaW5nVGFnfSlgXG4gICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgIH0sIFtcbiAgICAgICAgc3BlY2lmaWNTY2hlbWFPYmplY3Q/LmRlc2NyaXB0aW9uID8/IHN0cmluZ1RhZ1xuICAgICAgXV0sXG4gICAgICBbJ2JyJ10sXG4gICAgICBbJ2InLCBbJ0J1ZmZlciBieXRlIGxlbmd0aDogJ11dLFxuICAgICAgYnVmZmVyLmJ5dGVMZW5ndGgsXG4gICAgICBbJ2JyJ10sXG4gICAgICBbJ2InLCBbJ0J1ZmZlciBtYXggYnl0ZSBsZW5ndGg6ICddXSxcbiAgICAgIGJ1ZmZlci5tYXhCeXRlTGVuZ3RoLFxuXG4gICAgICAuLi5zdHJpbmdUYWcgPT09ICdEYXRhVmlldydcbiAgICAgICAgPyBbXG4gICAgICAgICAgWydiciddLFxuICAgICAgICAgIFsnYicsIFsnRGF0YSBWaWV3IGJ5dGUgbGVuZ3RoOiAnXV0sXG4gICAgICAgICAgdmFsdWUuYnl0ZUxlbmd0aCxcbiAgICAgICAgICBbJ2JyJ10sXG4gICAgICAgICAgWydiJywgWydEYXRhIFZpZXcgYnl0ZSBvZmZzZXQ6ICddXSxcbiAgICAgICAgICB2YWx1ZS5ieXRlT2Zmc2V0XG4gICAgICAgIF1cbiAgICAgICAgOiBbJyddLFxuICAgICAgLi4uKHN0cmluZ1RhZyAhPT0gJ0RhdGFWaWV3JyAmJiBzdHJpbmdUYWcgIT09ICdBcnJheUJ1ZmZlcicpIC8vIFR5cGVkQXJyYXlcbiAgICAgICAgPyBbXG4gICAgICAgICAgWydiciddLFxuICAgICAgICAgIFsnYicsIFsnVHlwZWQgQXJyYXkgYnl0ZSBvZmZzZXQ6ICddXSxcbiAgICAgICAgICB2YWx1ZS5ieXRlT2Zmc2V0LFxuICAgICAgICAgIFsnYnInXSxcbiAgICAgICAgICBbJ2InLCBbJ1R5cGVkIEFycmF5IGxlbmd0aDogJ11dLFxuICAgICAgICAgIHZhbHVlLmxlbmd0aFxuICAgICAgICBdXG4gICAgICAgIDogWycnXSxcbiAgICAgIFsnYnInXSxcbiAgICAgIFsnYnV0dG9uJywge1xuICAgICAgICBjbGFzczogJ2J1ZmZlcnNvdXJjZS12aWV3RGF0YScsXG4gICAgICAgICRvbjoge1xuICAgICAgICAgIGFzeW5jIGNsaWNrIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBkaWFsb2cgPSBhd2FpdCBkaWFsb2dzLm1ha2VDYW5jZWxEaWFsb2coe1xuICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFRTIGJ1Z1xuICAgICAgICAgICAgICBjaGlsZHJlbjogLyoqIEB0eXBlIHtpbXBvcnQoJ2phbWlsaWgnKS5KYW1pbGloQ2hpbGRyZW59ICovIChbXG4gICAgICAgICAgICAgICAgWydzZWxlY3QnLCB7XG4gICAgICAgICAgICAgICAgICBjbGFzczogJ2J1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy12aWV3JyxcbiAgICAgICAgICAgICAgICAgICdhcmlhLWxhYmVsJzogJ1R5cGVkIEFycmF5cycsXG4gICAgICAgICAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5VmFsID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICkudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh0eXBlZEFycmF5VmFsKVxuICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheSA9IG5ldyBUeXBlZEFycmF5KGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUFyZWEgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlBcmVhJ1xuICAgICAgICAgICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlBcmVhLnRleHRDb250ZW50ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZWRBcnJheUFyZWEuYXBwZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uQXJyYXkuZnJvbSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxlbmd0aDogdHlwZWRBcnJheS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIChfdiwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBqbWwoJ3NwYW4nLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgWydiJywgW2tleV1dLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ3NwYW4nLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlZEFycmF5W2tleV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBTdHJpbmcodHlwZWRBcnJheVtrZXldKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICcwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1dLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIHR5cGVkQXJyYXlzLm1hcCgodHlwZWRBcnJheSkgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFsnb3B0aW9uJywge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogc3RyaW5nVGFnID09PSB0eXBlZEFycmF5XG4gICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgIH0sIFt0eXBlZEFycmF5XV07XG4gICAgICAgICAgICAgICAgfSldLFxuICAgICAgICAgICAgICAgIFsnZGl2Jywge1xuICAgICAgICAgICAgICAgICAgY2xhc3M6ICd0eXBlZEFycmF5QXJlYSdcbiAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgJGUoZGlhbG9nLCAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy12aWV3JylcbiAgICAgICAgICAgICkuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICAgICAgbmV3IEV2ZW50KCdjaGFuZ2UnKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIC8vIFRvZG86IFdlIGNvdWxkIGFsc28gYWRkIGBEYXRhVmlld2AgZ2V0IG1ldGhvZHMgaGVyZVxuICAgICAgICAgICAgLy8gICAgICAgIChhbmQgbGVuZ3RoL2J5dGUgb2Zmc2V0IGZvciB0aGUgdHlwZWQgYXJyYXkpIGlmXG4gICAgICAgICAgICAvLyAgICAgICAgdGhlcmUgaXMgYSBkZW1hbmRcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIFsnVmlldyBkYXRhJ11dXG4gICAgXV07XG4gIH0sXG4gIGVkaXRVSSAoe3R5cGVOYW1lc3BhY2UsIHZhbHVlfSkge1xuICAgIGlkeCsrO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGVkZWYgeygpID0+IHZvaWR9IEJ1aWxkSW5zdGFuY2VzXG4gICAgICovXG5cbiAgICBjb25zdCBkaXYgPSBqbWwoJ2RpdicsIHtcbiAgICAgIGRhdGFzZXQ6IHt0eXBlOiAnYnVmZmVyc291cmNlJ31cbiAgICB9LCBbXG4gICAgICBbJ2ZpZWxkc2V0Jywge1xuICAgICAgICBjbGFzczogJ3JldHVyblR5cGUnLFxuICAgICAgICAkb246IHtcbiAgICAgICAgICBjaGFuZ2UgKCkge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAdHlwZSB7SFRNTEZpZWxkU2V0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAqICAgJGJ1aWxkSW5zdGFuY2VzOiBCdWlsZEluc3RhbmNlc1xuICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAqLyAodGhpcykuJGJ1aWxkSW5zdGFuY2VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgLyoqIEB0eXBlIHtCdWlsZEluc3RhbmNlc30gKi9cbiAgICAgICAgICAkYnVpbGRJbnN0YW5jZXMgKCkge1xuICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKlxuICAgICAgICAgICAgKiBAdHlwZSB7SFRNTEZpZWxkU2V0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICogICAkYnVpbGRJbnN0YW5jZXM6IEJ1aWxkSW5zdGFuY2VzXG4gICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAqLyAodGhpcyk7XG4gICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTERpdkVsZW1lbnR9ICovICh0aGF0LnBhcmVudEVsZW1lbnQpO1xuICAgICAgICAgICAgY29uc3Qge3ZhbHVlfSA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICB0aGF0LCBgW25hbWU9JHt0eXBlTmFtZXNwYWNlfS1idWZmZXJzb3VyY2UtcmV0dXJuVHlwZS0ke2lkeH1dYCArXG4gICAgICAgICAgICAgICAgICAgICAgYDpjaGVja2VkYFxuICAgICAgICAgICAgKSk7XG5cbiAgICAgICAgICAgIGNvbnN0IGJ5dGVMZW5ndGggPVxuICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAqICAgJHZhbHVlOiBCdWZmZXJTb3VyY2UsXG4gICAgICAgICAgICAgICAqICAgJGRhdGFWaWV3OiBEYXRhVmlldyxcbiAgICAgICAgICAgICAgICogICAkdHlwZWRBcnJheTogVHlwZWRBcnJheUluc3RhbmNlXG4gICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcuYnl0ZUxlbmd0aCcpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjb25zdCBieXRlTGVuZ3RoVmFsID0gTnVtYmVyLnBhcnNlSW50KGJ5dGVMZW5ndGgudmFsdWUpO1xuICAgICAgICAgICAgY29uc3QgbWF4Qnl0ZUxlbmd0aCA9IE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcubWF4Qnl0ZUxlbmd0aCcpXG4gICAgICAgICAgICAgICkudmFsdWVcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihcbiAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBOZXcgQXJyYXlCdWZmZXIgYXJndW1lbnRcbiAgICAgICAgICAgICAgYnl0ZUxlbmd0aFZhbCwgbWF4Qnl0ZUxlbmd0aCA/IHttYXhCeXRlTGVuZ3RofSA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgZGF0YVZpZXdCeXRlT2Zmc2V0VmFsID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAnLmRhdGFWaWV3Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICkpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgZGF0YVZpZXdCeXRlT2Zmc2V0ID0gZGF0YVZpZXdCeXRlT2Zmc2V0VmFsXG4gICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KGRhdGFWaWV3Qnl0ZU9mZnNldFZhbClcbiAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgICBjb25zdCBkYXRhVmlld0J5dGVMZW5ndGhWYWwgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICcuZGF0YVZpZXdCeXRlTGVuZ3RoJ1xuICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICBjb25zdCBkYXRhVmlld0J5dGVMZW5ndGggPSBkYXRhVmlld0J5dGVMZW5ndGhWYWxcbiAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQoZGF0YVZpZXdCeXRlTGVuZ3RoVmFsKVxuICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgY29uc3QgZGF0YVZpZXcgPSBuZXcgRGF0YVZpZXcoXG4gICAgICAgICAgICAgIGJ1ZmZlciwgZGF0YVZpZXdCeXRlT2Zmc2V0LCBkYXRhVmlld0J5dGVMZW5ndGhcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNvbnN0IHt2YWx1ZTogdHlwZWRBcnJheVZhbHVlfSA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgJGUoYW5jZXN0b3IsICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnKVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7VHlwZWRBcnJheX0gKi8gKHR5cGVkQXJyYXlWYWx1ZSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbCA9XG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICcudHlwZWRBcnJheUJ5dGVPZmZzZXQnXG4gICAgICAgICAgICAgICkpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXQgPSB0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbFxuICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludCh0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbClcbiAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5TGVuZ3RoVmFsID1cbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgJy50eXBlZEFycmF5TGVuZ3RoJ1xuICAgICAgICAgICAgICApKS52YWx1ZTtcbiAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPSB0eXBlZEFycmF5TGVuZ3RoVmFsXG4gICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KHR5cGVkQXJyYXlMZW5ndGhWYWwpXG4gICAgICAgICAgICAgIDogYnl0ZUxlbmd0aFZhbDtcblxuICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheSA9IG5ldyBUeXBlZEFycmF5KFxuICAgICAgICAgICAgICBidWZmZXIsIHR5cGVkQXJyYXlCeXRlT2Zmc2V0LCB0eXBlZEFycmF5TGVuZ3RoXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBieXRlTGVuZ3RoLiRkYXRhVmlldyA9IGRhdGFWaWV3O1xuICAgICAgICAgICAgYnl0ZUxlbmd0aC4kdHlwZWRBcnJheSA9IHR5cGVkQXJyYXk7XG5cbiAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlWYWx1ZXMgPSAkJGUoXG4gICAgICAgICAgICAgIGFuY2VzdG9yLCAnLnR5cGVkQXJyYXlBcmVhIC50eXBlZEFycmF5VmFsdWUnXG4gICAgICAgICAgICApLm1hcCgoaW5wdXQpID0+IHtcbiAgICAgICAgICAgICAgLy8gRG9uJ3QgY2hlY2sgZGF0YXNldCwgYXMgbWF5IGJlIGNoYW5naW5nIHRvIEJpZ0ludCBub3dcbiAgICAgICAgICAgICAgcmV0dXJuIFR5cGVkQXJyYXkubmFtZS5zdGFydHNXaXRoKCdCaWcnKVxuICAgICAgICAgICAgICAgID8gQmlnSW50KFxuICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoaW5wdXQpLnZhbHVlXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIDogTnVtYmVyKFxuICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoaW5wdXQpLnZhbHVlXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIE9rXG4gICAgICAgICAgICBieXRlTGVuZ3RoLiR0eXBlZEFycmF5LnNldCh0eXBlZEFycmF5VmFsdWVzLCAwKTtcblxuICAgICAgICAgICAgc3dpdGNoICh2YWx1ZSkge1xuICAgICAgICAgICAgY2FzZSAnQXJyYXlCdWZmZXInOlxuICAgICAgICAgICAgICBieXRlTGVuZ3RoLiR2YWx1ZSA9IGJ1ZmZlcjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdEYXRhVmlldyc6IHtcbiAgICAgICAgICAgICAgYnl0ZUxlbmd0aC4kdmFsdWUgPSBkYXRhVmlldztcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9IGRlZmF1bHQ6IC8vICdUeXBlZEFycmF5J1xuICAgICAgICAgICAgICBieXRlTGVuZ3RoLiR2YWx1ZSA9IHR5cGVkQXJyYXk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgW1xuICAgICAgICBbJ2xlZ2VuZCcsIFsnUmV0dXJuIHR5cGUnXV0sXG4gICAgICAgIFsnbGFiZWwnLCB7XG4gICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICBjbGljayAoKSB7XG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAodGhpcy5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cydcbiAgICAgICAgICAgICAgKSkuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICh0aGlzPy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0J1xuICAgICAgICAgICAgICApKS5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIFtcbiAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIGNsYXNzOiAnYnVmZmVyc291cmNlLXJldHVyblR5cGUgJyArXG4gICAgICAgICAgICAgICdidWZmZXJzb3VyY2UtcmV0dXJuVHlwZS1hcnJheWJ1ZmZlcicsXG4gICAgICAgICAgICBuYW1lOiBgJHt0eXBlTmFtZXNwYWNlfS1idWZmZXJzb3VyY2UtcmV0dXJuVHlwZS0ke2lkeH1gLFxuICAgICAgICAgICAgY2hlY2tlZDogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQXJyYXlCdWZmZXInXG4gICAgICAgICAgICAvLyBjaGVja2VkOiB0b1N0cmluZ1RhZyh2YWx1ZSkgIT09ICcnXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgJ0FycmF5QnVmZmVyJ1xuICAgICAgICBdXSxcbiAgICAgICAgJyAnLFxuICAgICAgICBbJ2xhYmVsJywge1xuICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgY2xpY2sgKCkge1xuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKHRoaXMucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMnXG4gICAgICAgICAgICAgICkpLmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAodGhpcz8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCdcbiAgICAgICAgICAgICAgKSkuaGlkZGVuID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBbXG4gICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBjbGFzczogJ2J1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlIGJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLWRhdGF2aWV3JyxcbiAgICAgICAgICAgIG5hbWU6IGAke3R5cGVOYW1lc3BhY2V9LWJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLSR7aWR4fWAsXG4gICAgICAgICAgICB2YWx1ZTogJ0RhdGFWaWV3J1xuICAgICAgICAgICAgLy8gY2hlY2tlZDogdG9TdHJpbmdUYWcodmFsdWUpICE9PSAnJ1xuICAgICAgICAgIH1dLFxuICAgICAgICAgICdEYXRhVmlldydcbiAgICAgICAgXV0sXG4gICAgICAgICcgJyxcbiAgICAgICAgWydsYWJlbCcsIHtcbiAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgIGNsaWNrICgpIHtcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICh0aGlzLnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzJ1xuICAgICAgICAgICAgICApKS5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovICh0aGlzPy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0J1xuICAgICAgICAgICAgICApKS5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgW1xuICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgY2xhc3M6ICdidWZmZXJzb3VyY2UtcmV0dXJuVHlwZSBidWZmZXJzb3VyY2UtcmV0dXJuVHlwZS10eXBlZGFycmF5JyxcbiAgICAgICAgICAgIG5hbWU6IGAke3R5cGVOYW1lc3BhY2V9LWJ1ZmZlcnNvdXJjZS1yZXR1cm5UeXBlLSR7aWR4fWAsXG4gICAgICAgICAgICB2YWx1ZTogJ1R5cGVkQXJyYXknXG4gICAgICAgICAgICAvLyBjaGVja2VkOiB0b1N0cmluZ1RhZyh2YWx1ZSkgIT09ICcnXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgJ1R5cGVkIEFycmF5J1xuICAgICAgICBdXSxcbiAgICAgICAgJyAnLFxuICAgICAgICBbJ3NlbGVjdCcsIHtcbiAgICAgICAgICBoaWRkZW46IHRydWUsIGNsYXNzOiAnYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzJyxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6ICdUeXBlZCBBcnJheXMnLFxuICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAodGhpcyk7XG4gICAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgIHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHNlbGVjdCA9XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAqICAgJHNldE1pbnNBbmRNYXhlczogU2V0TWluc0FuZE1heGVzLFxuICAgICAgICAgICAgICAgICAqICAgJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGg6IENoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICgkZShcbiAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgJy5idWZmZXJzb3VyY2UtdHlwZWRBcnJheXMtaW5pdCdcbiAgICAgICAgICAgICAgICApKTtcblxuICAgICAgICAgICAgICAvLyBVcGRhdGUgdG8gcmVmbGVjdCBjdXJyZW50IHN0YXRlIGNoYW5nZXMgaWYgbGF0ZXIgcmV2ZWFsaW5nXG4gICAgICAgICAgICAgIHNlbGVjdC52YWx1ZSA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovICh0aGlzKS52YWx1ZTtcblxuICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5TGVuZ3RoID1cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHNcbiAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy50eXBlZEFycmF5TGVuZ3RoJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBpZiAoIXR5cGVkQXJyYXlMZW5ndGguJGNoZWNrQnVmZmVyQm91bmRzKGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgc2VsZWN0LiRzZXRNaW5zQW5kTWF4ZXMoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtUeXBlZEFycmF5fSAqL1xuICAgICAgICAgICAgICAgICgvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAodGhpcykudmFsdWUpXG4gICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgc2VsZWN0LiRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoKGUpO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlCeXRlT2Zmc2V0ID0gJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAodGhpcz8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy50eXBlZEFycmF5Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgKiAgICRjaGVja0J5dGVPZmZzZXRNdWx0aXBsZTogQ2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGVcbiAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICovICh0eXBlZEFycmF5Qnl0ZU9mZnNldCkuJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgdHlwZWRBcnJheXMubWFwKCh0eXBlZEFycmF5KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFsnb3B0aW9uJywgW3R5cGVkQXJyYXldXTtcbiAgICAgICAgfSldXG4gICAgICBdXSxcbiAgICAgIFsnZmllbGRzZXQnLCB7XG4gICAgICAgICRvbjoge1xuICAgICAgICAgIGNoYW5nZSAoKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MRmllbGRTZXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICogICAkYnVpbGRJbnN0YW5jZXM6IEJ1aWxkSW5zdGFuY2VzXG4gICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICovICh0aGlzLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLiRidWlsZEluc3RhbmNlcygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgW1xuICAgICAgICBbJ2xlZ2VuZCcsIFsnQ29uc3RydWN0aW9uIG9wdGlvbnMnXV0sXG4gICAgICAgIFsnZmllbGRzZXQnLCBbXG4gICAgICAgICAgWydsZWdlbmQnLCBbJ0FycmF5QnVmZmVyJ11dLFxuICAgICAgICAgIFsnbGFiZWwnLCBbXG4gICAgICAgICAgICAnQnl0ZSBsZW5ndGggJyxcbiAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgIGNsYXNzOiAnYnl0ZUxlbmd0aCcsXG4gICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgICAgICAgJHZhbHVlOiB2YWx1ZSA/PyBuZXcgQXJyYXlCdWZmZXIoMClcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICB0aGF0LlxuICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5TGVuZ3RoID1cbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0J1ZmZlckJvdW5kczogQ2hlY2tCdWZmZXJCb3VuZHNcbiAgICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy50eXBlZEFycmF5TGVuZ3RoJylcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGlmICghdHlwZWRBcnJheUxlbmd0aC4kY2hlY2tCdWZmZXJCb3VuZHMoZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBjb25zdCBtYXhCeXRlTGVuZ3RoID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgICB0aGF0LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgKSwgJy5tYXhCeXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICAgICAgICBjb25zdCB2YWwgPSB0aGF0LnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoTnVtYmVyLnBhcnNlSW50KHZhbCkgPiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUikge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KFxuICAgICAgICAgICAgICAgICAgICAgICdUaGUgQXJyYXlCdWZmZXIgbGVuZ3RoIGV4Y2VlZHMgdGhlIG1heGltdW0gJyArXG4gICAgICAgICAgICAgICAgICAgICAgJ2FsbG93YWJsZSBzaXplJ1xuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICAgICAgICAgICAgdGhhdC5yZXBvcnRWYWxpZGl0eSgpO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIE51bWJlci5wYXJzZUludCh2YWwpID4gTnVtYmVyLnBhcnNlSW50KG1heEJ5dGVMZW5ndGgudmFsdWUpXG4gICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4Qnl0ZUxlbmd0aC52YWx1ZSA9IHZhbDtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgY29uc3QgZ3JlYXRHcmFuZHBhcmVudCA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgICAgICh0aGF0LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpO1xuXG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tEYXRhVmlld0J5dGVMZW5ndGg6IENoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgZ3JlYXRHcmFuZHBhcmVudCxcbiAgICAgICAgICAgICAgICAgICAgJy5kYXRhVmlld0J5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICAgICApKS4kY2hlY2tEYXRhVmlld0J5dGVMZW5ndGgoZSk7XG5cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aDogQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgICAgIChncmVhdEdyYW5kcGFyZW50LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICAgICAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0J1xuICAgICAgICAgICAgICAgICAgKSkuJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGgoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICAgIF1dLFxuICAgICAgICAgICcgJyxcbiAgICAgICAgICBbJ2xhYmVsJywgW1xuICAgICAgICAgICAgJ01heCBieXRlIGxlbmd0aCAnLFxuICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgY2xhc3M6ICdtYXhCeXRlTGVuZ3RoJyxcbiAgICAgICAgICAgICAgdHlwZTogJ251bWJlcicsIHN0ZXA6ICcxJywgc2l6ZTogJzQnLFxuICAgICAgICAgICAgICBwYXR0ZXJuOiBTdHJpbmcucmF3YFxcZCtgLFxuICAgICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICAgIGNoYW5nZSAoZSkge1xuICAgICAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgdGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICksICcuYnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgdmFsID0gdGhhdC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgTnVtYmVyLnBhcnNlSW50KHZhbCkgPCBOdW1iZXIucGFyc2VJbnQoYnl0ZUxlbmd0aC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAvLyBieXRlTGVuZ3RoLnZhbHVlID0gdmFsO1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KFxuICAgICAgICAgICAgICAgICAgICAgICdUaGUgbWF4IHZhbHVlIGNhbm5vdCBiZSBsZXNzIHRoYW4gdGhlIGJ5dGUgbGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB0aGF0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICAgIF1dXG4gICAgICAgIF1dLFxuICAgICAgICBbJ2ZpZWxkc2V0JywgW1xuICAgICAgICAgIFsnbGVnZW5kJywgWydEYXRhVmlldyddXSxcbiAgICAgICAgICBbJ2xhYmVsJywgW1xuICAgICAgICAgICAgJ0J5dGUgbGVuZ3RoICcsXG4gICAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgICBjbGFzczogJ2RhdGFWaWV3Qnl0ZUxlbmd0aCcsXG4gICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHR5cGVkZWYgeyhlOiBFdmVudCkgPT4gdm9pZH0gQ2hlY2tEYXRhVmlld0J5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7Q2hlY2tEYXRhVmlld0J5dGVMZW5ndGh9ICovXG4gICAgICAgICAgICAgICAgJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqXG4gICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aDogQ2hlY2tEYXRhVmlld0J5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICovIChcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBjb25zdCBncmVhdEdyYW5kcGFyZW50ID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICAgKHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCk7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IGJ5dGVPZmZzZXQgPSBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICAgIGdyZWF0R3JhbmRwYXJlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgJy5kYXRhVmlld0J5dGVPZmZzZXQnXG4gICAgICAgICAgICAgICAgICAgICkpLnZhbHVlXG4gICAgICAgICAgICAgICAgICApIHx8IDA7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IGJ1ZmZlckJ5dGVMZW5ndGhWYWwgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgJGUoXG4gICAgICAgICAgICAgICAgICAgICAgZ3JlYXRHcmFuZHBhcmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAnLmJ5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICAgICAgICkpLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgY29uc3QgYnVmZmVyQnl0ZUxlbmd0aCA9IGJ1ZmZlckJ5dGVMZW5ndGhWYWxcbiAgICAgICAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgICAgYnVmZmVyQnl0ZUxlbmd0aFZhbFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogMDtcblxuICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9IHRoYXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgICAgdGhhdC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogYnVmZmVyQnl0ZUxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgaWYgKGJ5dGVPZmZzZXQgKyBieXRlTGVuZ3RoID4gYnVmZmVyQnl0ZUxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KFxuICAgICAgICAgICAgICAgICAgICAgICdUaGUgRGF0YVZpZXcgYnl0ZSBsZW5ndGggYW5kIG9mZnNldCBleGNlZWQgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAndGhlIGJ1ZmZlclxcJ3MgYnl0ZSBsZW5ndGgnXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICAgIGNoYW5nZSAoZSkge1xuICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAqICAgJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoOiBDaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICAgICAgICkuJGNoZWNrRGF0YVZpZXdCeXRlTGVuZ3RoKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV1cbiAgICAgICAgICBdXSxcbiAgICAgICAgICAnICcsXG4gICAgICAgICAgWydsYWJlbCcsIFtcbiAgICAgICAgICAgICdCeXRlIG9mZnNldCAnLFxuICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgY2xhc3M6ICdkYXRhVmlld0J5dGVPZmZzZXQnLFxuICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywgc3RlcDogJzEnLCBzaXplOiAnNCcsXG4gICAgICAgICAgICAgIHBhdHRlcm46IFN0cmluZy5yYXdgXFxkK2AsXG4gICAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBjb25zdCBncmVhdEdyYW5kcGFyZW50ID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICAgKHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCk7XG5cbiAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aDogQ2hlY2tEYXRhVmlld0J5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICBncmVhdEdyYW5kcGFyZW50LFxuICAgICAgICAgICAgICAgICAgICAnLmRhdGFWaWV3Qnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICkpLiRjaGVja0RhdGFWaWV3Qnl0ZUxlbmd0aChlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgXV1cbiAgICAgICAgXV0sXG4gICAgICAgIFsnZmllbGRzZXQnLCBbXG4gICAgICAgICAgWydsZWdlbmQnLCBbJ1R5cGVkIGFycmF5J11dLFxuICAgICAgICAgIFsnbGFiZWwnLCBbXG4gICAgICAgICAgICAnQnl0ZSBvZmZzZXQgJyxcbiAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgIGNsYXNzOiAndHlwZWRBcnJheUJ5dGVPZmZzZXQnLFxuICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywgc3RlcDogJzEnLCBzaXplOiAnNCcsXG4gICAgICAgICAgICAgIHBhdHRlcm46IFN0cmluZy5yYXdgXFxkK2AsXG4gICAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgICAgbWF4OiAoMiAqKiA1MykgLSAxLFxuICAgICAgICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHR5cGVkZWYgeyhlOiBFdmVudCkgPT4gdm9pZH0gQ2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7Q2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGV9ICovXG4gICAgICAgICAgICAgICAgJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlIChlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0aGF0ID0gLyoqXG4gICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgKiAgICRjaGVja0J5dGVPZmZzZXRNdWx0aXBsZTogQ2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICovICh0aGlzKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGFuY2VzdG9yID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgICB0aGF0LlxuICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IHt2YWx1ZX0gPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0JylcbiAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnN0IFR5cGVkQXJyYXkgPSBnZXRUeXBlZEFycmF5KFxuICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIE51bWJlci5wYXJzZUludCh0aGF0LnZhbHVlKSAlIFR5cGVkQXJyYXkuQllURVNfUEVSX0VMRU1FTlRcbiAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KFxuICAgICAgICAgICAgICAgICAgICAgICdCeXRlIG9mZnNldCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgdGhlIHR5cGVkICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgYGFycmF5J3MgYnl0ZXMtcGVyLWVsZW1lbnQgc2l6ZSAoJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgVHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlgXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICAgIGNoYW5nZSAoZSkge1xuICAgICAgICAgICAgICAgICAgY29uc3QgdGhhdCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgIHRoYXQuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPVxuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgICAgICAqICAgJGNoZWNrQnVmZmVyQm91bmRzOiBDaGVja0J1ZmZlckJvdW5kc1xuICAgICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLnR5cGVkQXJyYXlMZW5ndGgnKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgaWYgKCF0eXBlZEFycmF5TGVuZ3RoLiRjaGVja0J1ZmZlckJvdW5kcyhlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGU6IENoZWNrQnl0ZU9mZnNldE11bHRpcGxlXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovICh0aGlzKS4kY2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGUoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICAgIF1dXG4gICAgICAgICAgLy8gJyAnLFxuICAgICAgICAgIC8vIFsnbGFiZWwnLCBbXG4gICAgICAgICAgLy8gICAnTGVuZ3RoICcsXG4gICAgICAgICAgLy8gICBbJ2lucHV0Jywge1xuICAgICAgICAgIC8vICAgICBjbGFzczogJ3R5cGVkQXJyYXlMZW5ndGgnLFxuICAgICAgICAgIC8vICAgICB0eXBlOiAnbnVtYmVyJywgc3RlcDogJzEnLCBzaXplOiAnNCcsIHBhdHRlcm46ICdcXFxcZCsnLFxuICAgICAgICAgIC8vICAgICBtaW46IDBcbiAgICAgICAgICAvLyAgIH1dXG4gICAgICAgICAgLy8gXV1cbiAgICAgICAgXV1cbiAgICAgIF1dLFxuICAgICAgWydmaWVsZHNldCcsIFtcbiAgICAgICAgWydsZWdlbmQnLCBbJ1R5cGVkIEFycmF5IGluaXRpYWxpemF0aW9uIChvcHRpb25hbCknXV0sXG4gICAgICAgIFsnc2VsZWN0Jywge1xuICAgICAgICAgIGNsYXNzOiAnYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnLFxuICAgICAgICAgICdhcmlhLWxhYmVsJzogJ1R5cGVkIEFycmF5cycsXG4gICAgICAgICAgJGN1c3RvbToge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAY2FsbGJhY2sgU2V0TWluc0FuZE1heGVzXG4gICAgICAgICAgICAgKiBAcGFyYW0ge1R5cGVkQXJyYXl9IHR5cGVkQXJyYXlcbiAgICAgICAgICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKiBAdHlwZSB7U2V0TWluc0FuZE1heGVzfSAqL1xuICAgICAgICAgICAgJHNldE1pbnNBbmRNYXhlcyAodHlwZWRBcnJheSkge1xuICAgICAgICAgICAgICBjb25zdCB7bWluLCBtYXh9ID0gZ2V0TWluTWF4Rm9yVHlwZWRBcnJheSh0eXBlZEFycmF5KTtcblxuICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnRbXX0gKi8gKFxuICAgICAgICAgICAgICAgICQkZSgvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAqICAgJHNldE1pbnNBbmRNYXhlczogU2V0TWluc0FuZE1heGVzLFxuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aDogQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICAgICAqLyAodGhpcykucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICksICcudHlwZWRBcnJheVZhbHVlJylcbiAgICAgICAgICAgICAgKS5mb3JFYWNoKCh0eXBlZEFycmF5VmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICB0eXBlZEFycmF5VmFsdWUuY2xhc3NOYW1lID1cbiAgICAgICAgICAgICAgICAgICd0eXBlZEFycmF5VmFsdWUgdHlwZWRBcnJheS0nICsgdHlwZWRBcnJheTtcbiAgICAgICAgICAgICAgICB0eXBlZEFycmF5VmFsdWUubWluID0gU3RyaW5nKG1pbik7XG4gICAgICAgICAgICAgICAgdHlwZWRBcnJheVZhbHVlLm1heCA9IFN0cmluZyhtYXgpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHR5cGVkZWYgeyhlOiBFdmVudCkgPT4gdm9pZH0gQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKiBAdHlwZSB7Q2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aH0gKi9cbiAgICAgICAgICAgICRjaGVja1R5cGVkQXJyYXlCeXRlTGVuZ3RoIChlKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKipcbiAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICogICAkc2V0TWluc0FuZE1heGVzOiBTZXRNaW5zQW5kTWF4ZXMsXG4gICAgICAgICAgICAgICogICAkY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aDogQ2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aFxuICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICovICh0aGlzKTtcbiAgICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtUeXBlZEFycmF5fSAqLyAodGhhdC52YWx1ZSlcbiAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICBjb25zdCBieXRlTGVuZ3RoID0gLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAodGhhdC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLmJ5dGVMZW5ndGgnXG4gICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgICBjb25zdCBhcnJheUJ1ZmZlckxlbmd0aCA9IGJ5dGVMZW5ndGgudmFsdWVcbiAgICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludChcbiAgICAgICAgICAgICAgICAgIGJ5dGVMZW5ndGgudmFsdWVcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgICBpZiAoYXJyYXlCdWZmZXJMZW5ndGggJSBUeXBlZEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKSB7XG4gICAgICAgICAgICAgICAgYnl0ZUxlbmd0aC5zZXRDdXN0b21WYWxpZGl0eShcbiAgICAgICAgICAgICAgICAgICdBcnJheSBidWZmZXIgbXVzdCBiZSBhIG11bHRpcGxlIG9mIHRoZSB0eXBlZCBhcnJheVxcJ3MgJyArXG4gICAgICAgICAgICAgICAgICAgIGBieXRlcy1wZXItZWxlbWVudCBzaXplICgke1R5cGVkQXJyYXkuQllURVNfUEVSX0VMRU1FTlR9KWBcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYnl0ZUxlbmd0aC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnl0ZUxlbmd0aC5yZXBvcnRWYWxpZGl0eSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICBjaGFuZ2UgKGUpIHtcbiAgICAgICAgICAgICAgY29uc3QgdGhhdCA9XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnQgJiB7XG4gICAgICAgICAgICAgICAgKiAgICRzZXRNaW5zQW5kTWF4ZXM6IFNldE1pbnNBbmRNYXhlcyxcbiAgICAgICAgICAgICAgICAqICAgJGNoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGg6IENoZWNrVHlwZWRBcnJheUJ5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgdGhhdC5cbiAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAvLyBVcGRhdGUgdG8gcmVmbGVjdCBjdXJyZW50IHN0YXRlIGNoYW5nZXMgaWYgbGF0ZXIgcmV2ZWFsaW5nXG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovICgkZShcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICh0aGlzLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzJ1xuICAgICAgICAgICAgICApKS52YWx1ZSA9IHRoYXQudmFsdWU7XG5cbiAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUxlbmd0aCA9XG4gICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICogICAkY2hlY2tCdWZmZXJCb3VuZHM6IENoZWNrQnVmZmVyQm91bmRzXG4gICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAqLyAoXG4gICAgICAgICAgICAgICAgICAkZShhbmNlc3RvciwgJy50eXBlZEFycmF5TGVuZ3RoJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBpZiAoIXR5cGVkQXJyYXlMZW5ndGguJGNoZWNrQnVmZmVyQm91bmRzKGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhhdC4kY2hlY2tUeXBlZEFycmF5Qnl0ZUxlbmd0aChlKTtcblxuICAgICAgICAgICAgICB0aGF0LiRzZXRNaW5zQW5kTWF4ZXMoLyoqIEB0eXBlIHtUeXBlZEFycmF5fSAqLyAodGhhdC52YWx1ZSkpO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlCeXRlT2Zmc2V0ID0gJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAodGhhdD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgJy50eXBlZEFycmF5Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgKiAgICRjaGVja0J5dGVPZmZzZXRNdWx0aXBsZTogQ2hlY2tCeXRlT2Zmc2V0TXVsdGlwbGVcbiAgICAgICAgICAgICAgICogfX1cbiAgICAgICAgICAgICAgICovICh0eXBlZEFycmF5Qnl0ZU9mZnNldCkuJGNoZWNrQnl0ZU9mZnNldE11bHRpcGxlKGUpO1xuXG4gICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTEZpZWxkU2V0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICogICAkYnVpbGRJbnN0YW5jZXM6IEJ1aWxkSW5zdGFuY2VzXG4gICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAodGhpcy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAnLnJldHVyblR5cGUnXG4gICAgICAgICAgICAgICkpLiRidWlsZEluc3RhbmNlcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgdHlwZWRBcnJheXMubWFwKCh0eXBlZEFycmF5KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFsnb3B0aW9uJywgW3R5cGVkQXJyYXldXTtcbiAgICAgICAgfSldLFxuICAgICAgICAnICcsXG4gICAgICAgIFsnbGFiZWwnLCBbXG4gICAgICAgICAgJ0FycmF5IGxlbmd0aDogJyxcbiAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgY2xhc3M6ICd0eXBlZEFycmF5TGVuZ3RoJyxcbiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLCBzdGVwOiAnMScsIHNpemU6ICc0JyxcbiAgICAgICAgICAgIHBhdHRlcm46IFN0cmluZy5yYXdgXFxkK2AsXG4gICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICAkY3VzdG9tOiB7XG4gICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgKiBXaGVuIGNyZWF0aW5nIGEgdmlldyBmcm9tIGEgYnVmZmVyLCB0aGUgYm91bmRzIGFyZSBvdXRzaWRlXG4gICAgICAgICAgICAgICAqIHRoZSBidWZmZXIuIEluIG90aGVyIHdvcmRzLCBgYnl0ZU9mZnNldCArIGxlbmd0aCAqXG4gICAgICAgICAgICAgICAqIFR5cGVkQXJyYXkuQllURVNfUEVSX0VMRU1FTlQgPiBidWZmZXIuYnl0ZUxlbmd0aGAuXG4gICAgICAgICAgICAgICAqIEB0eXBlZGVmIHsoZTogRXZlbnQpID0+IGJvb2xlYW59IENoZWNrQnVmZmVyQm91bmRzXG4gICAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAgIC8qKiBAdHlwZSB7Q2hlY2tCdWZmZXJCb3VuZHN9ICovXG4gICAgICAgICAgICAgICRjaGVja0J1ZmZlckJvdW5kcyAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKipcbiAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICogICAkY2hlY2tCdWZmZXJCb3VuZHM6IENoZWNrQnVmZmVyQm91bmRzLFxuICAgICAgICAgICAgICAgICogICAkYnVpbGRUeXBlZEFycmF5OiBCdWlsZFR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgKi8gKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgYW5jZXN0b3IgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICB0aGF0LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJ1ZmZlckJ5dGVMZW5ndGhWYWwgPSAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICRlKFxuICAgICAgICAgICAgICAgICAgICBhbmNlc3RvcixcbiAgICAgICAgICAgICAgICAgICAgJy5ieXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICAgICAgY29uc3QgYnVmZmVyQnl0ZUxlbmd0aCA9IGJ1ZmZlckJ5dGVMZW5ndGhWYWxcbiAgICAgICAgICAgICAgICAgID8gTnVtYmVyLnBhcnNlSW50KFxuICAgICAgICAgICAgICAgICAgICBidWZmZXJCeXRlTGVuZ3RoVmFsXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBsZW5ndGggPSB0aGF0LnZhbHVlXG4gICAgICAgICAgICAgICAgICA/IE51bWJlci5wYXJzZUludCh0aGF0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgOiBidWZmZXJCeXRlTGVuZ3RoO1xuXG4gICAgICAgICAgICAgICAgY29uc3Qge3ZhbHVlfSA9IC8qKiBAdHlwZSB7SFRNTFNlbGVjdEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICRlKGFuY2VzdG9yLCAnLmJ1ZmZlcnNvdXJjZS10eXBlZEFycmF5cy1pbml0JylcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgVHlwZWRBcnJheSA9IGdldFR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh2YWx1ZSlcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXRWYWwgPVxuICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlCeXRlT2Zmc2V0J1xuICAgICAgICAgICAgICAgICAgKSkudmFsdWU7XG4gICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUJ5dGVPZmZzZXQgPSB0eXBlZEFycmF5Qnl0ZU9mZnNldFZhbFxuICAgICAgICAgICAgICAgICAgPyBOdW1iZXIucGFyc2VJbnQodHlwZWRBcnJheUJ5dGVPZmZzZXRWYWwpXG4gICAgICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAodHlwZWRBcnJheUJ5dGVPZmZzZXQgK1xuICAgICAgICAgICAgICAgICAgICAobGVuZ3RoICogVHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVCkpID5cbiAgICAgICAgICAgICAgICAgIGJ1ZmZlckJ5dGVMZW5ndGhcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoXG4gICAgICAgICAgICAgICAgICAgICdUaGUgYnl0ZSBvZmZzZXQgYW5kIHRoZSBsZW5ndGggdGltZXMgYnl0ZXMgcGVyIGVsZW1lbnQgJyArXG4gICAgICAgICAgICAgICAgICAgICdpcyBncmVhdGVyIHRoYW4gdGhlIGJ1ZmZlciBsZW5ndGgnXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICAgICAgICAgICAgICB0aGF0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAqIEB0eXBlZGVmIHsoKSA9PiB2b2lkfSBCdWlsZFR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgICAgLyoqIEB0eXBlIHtCdWlsZFR5cGVkQXJyYXl9ICovXG4gICAgICAgICAgICAgICRidWlsZFR5cGVkQXJyYXkgKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRoYXQgPSAvKipcbiAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICogICAkY2hlY2tCdWZmZXJCb3VuZHM6IENoZWNrQnVmZmVyQm91bmRzLFxuICAgICAgICAgICAgICAgICogICAkYnVpbGRUeXBlZEFycmF5OiBCdWlsZFR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgKi8gKHRoaXMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IE51bWJlci5wYXJzZUludCh0aGF0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBncmFuZHBhcmVudCA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgIHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgIHRoYXQucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgY29uc3QgYnVmZmVyQnl0ZUxlbmd0aCA9XG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkdHlwZWRBcnJheTogVHlwZWRBcnJheUluc3RhbmNlXG4gICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgICAgICAgICAgICcuYnl0ZUxlbmd0aCdcbiAgICAgICAgICAgICAgICAgICkpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgdHlwZWRBcnJheUFyZWEgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICBncmFuZHBhcmVudCwgJy50eXBlZEFycmF5QXJlYSdcbiAgICAgICAgICAgICAgICApKTtcblxuICAgICAgICAgICAgICAgIHR5cGVkQXJyYXlBcmVhLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IC8qKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudH0gKi8gKGUudGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgIGJ1ZmZlckJ5dGVMZW5ndGguJHR5cGVkQXJyYXkuc2V0KFtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBPa1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5kYXRhc2V0LmJpZ2ludCA9PT0gJ3RydWUnXG4gICAgICAgICAgICAgICAgICAgICAgPyBCaWdJbnQoaW5wdXQudmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgOiBOdW1iZXIoaW5wdXQudmFsdWUpXG4gICAgICAgICAgICAgICAgICBdLCBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAoaW5wdXQuZGF0YXNldC5rZXkpXG4gICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCB7dmFsdWV9ID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgJGUoZ3JhbmRwYXJlbnQsICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgY29uc3Qge21pbiwgbWF4fSA9IGdldE1pbk1heEZvclR5cGVkQXJyYXkoXG4gICAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh2YWx1ZSlcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgdHlwZWRBcnJheUFyZWEudGV4dENvbnRlbnQgPSAnJztcbiAgICAgICAgICAgICAgICB0eXBlZEFycmF5QXJlYS5hcHBlbmQoXG4gICAgICAgICAgICAgICAgICAuLi5BcnJheS5mcm9tKHtsZW5ndGh9LCAoX3YsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gam1sKCdsYWJlbCcsIFtcbiAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgJyAnLFxuICAgICAgICAgICAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3R5cGVkQXJyYXlWYWx1ZSB0eXBlZEFycmF5LScgKyB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5LCBiaWdpbnQ6IFN0cmluZyh2YWx1ZS5zdGFydHNXaXRoKCdCaWdJbnQnKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywgc3RlcDogJzEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogdmFsdWUuc3RhcnRzV2l0aCgnRmxvYXQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IFN0cmluZy5yYXdgXFxkKyg/OlxcLlxcZCspP2BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBTdHJpbmcucmF3YFxcZCtgLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGJ1ZmZlckJ5dGVMZW5ndGguJHR5cGVkQXJyYXlba2V5XVxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IFN0cmluZyhidWZmZXJCeXRlTGVuZ3RoLiR0eXBlZEFycmF5W2tleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogJzAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWluLCBtYXhcbiAgICAgICAgICAgICAgICAgICAgICB9XSxcbiAgICAgICAgICAgICAgICAgICAgICAnICdcbiAgICAgICAgICAgICAgICAgICAgICAvLyAha2V5IHx8IGtleSAlIDkgPyAnICcgOiBbJ2JyJ11cbiAgICAgICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAkb246IHtcbiAgICAgICAgICAgICAgY2hhbmdlIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGhhdCA9XG4gICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAgICogICAkY2hlY2tCdWZmZXJCb3VuZHM6IENoZWNrQnVmZmVyQm91bmRzLFxuICAgICAgICAgICAgICAgICAgICogICAkYnVpbGRUeXBlZEFycmF5OiBCdWlsZFR5cGVkQXJyYXlcbiAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgICB0aGlzXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGdyYW5kcGFyZW50ID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGlmICghdGhhdC4kY2hlY2tCdWZmZXJCb3VuZHMoZSkpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zdCB7dmFsdWV9ID0gLyoqIEB0eXBlIHtIVE1MU2VsZWN0RWxlbWVudH0gKi8gKFxuICAgICAgICAgICAgICAgICAgJGUoZ3JhbmRwYXJlbnQsICcuYnVmZmVyc291cmNlLXR5cGVkQXJyYXlzLWluaXQnKVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBsZW5ndGggPSBOdW1iZXIucGFyc2VJbnQodGhhdC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IFR5cGVkQXJyYXkgPSBnZXRUeXBlZEFycmF5KFxuICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovICh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3IC0tIFRlc3RpbmdcbiAgICAgICAgICAgICAgICAgIG5ldyBUeXBlZEFycmF5KGxlbmd0aCk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgICB0aGF0LnNldEN1c3RvbVZhbGlkaXR5KCdUeXBlZCBBcnJheSBsZW5ndGggaXMgdG9vIGxvbmcnKTtcbiAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICB0aGF0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoYXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICAgICAgICAgIHRoYXQucmVwb3J0VmFsaWRpdHkoKTtcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIEB0eXBlIHtIVE1MRmllbGRTZXRFbGVtZW50ICYge1xuICAgICAgICAgICAgICAgICAqICAgJGJ1aWxkSW5zdGFuY2VzOiBCdWlsZEluc3RhbmNlc1xuICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovXG4gICAgICAgICAgICAgICAgICAodGhpcy5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50KSxcbiAgICAgICAgICAgICAgICAgICcucmV0dXJuVHlwZSdcbiAgICAgICAgICAgICAgICApKS4kYnVpbGRJbnN0YW5jZXMoKTtcblxuICAgICAgICAgICAgICAgIHRoYXQuJGJ1aWxkVHlwZWRBcnJheSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfV0sXG4gICAgICAgICAgWydkaXYnLCB7XG4gICAgICAgICAgICBjbGFzczogJ3R5cGVkQXJyYXlBcmVhJ1xuICAgICAgICAgIH1dXG4gICAgICAgIF1dXG4gICAgICBdXSxcbiAgICAgIFsnZmllbGRzZXQnLCBbXG4gICAgICAgIFsnbGVnZW5kJywgWydEYXRhVmlldyBpbml0aWFsaXphdGlvbiAob3B0aW9uYWwpJ11dLFxuICAgICAgICBbJ3NlbGVjdCcsIHtcbiAgICAgICAgICBjbGFzczogJ2RhdGFWaWV3TWV0aG9kJyxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6ICdEYXRhIFZpZXcgbWV0aG9kcycsXG4gICAgICAgICAgJG9uOiB7XG4gICAgICAgICAgICBjaGFuZ2UgKCkge1xuICAgICAgICAgICAgICBjb25zdCBkYXRhVmlld0FyZWEgPSAvKiogQHR5cGUge0hUTUxEaXZFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKHRoaXMucGFyZW50RWxlbWVudCksICcuZGF0YVZpZXdBcmVhJ1xuICAgICAgICAgICAgICApKTtcblxuICAgICAgICAgICAgICBjb25zdCB2YWwgPSAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAodGhpcykudmFsdWU7XG4gICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXkgPSAvKiogQHR5cGUge1R5cGVkQXJyYXl9ICovIChcbiAgICAgICAgICAgICAgICB2YWwuc2xpY2UoMykgKyAnQXJyYXknXG4gICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgZGF0YVZpZXdBcmVhLnRleHRDb250ZW50ID0gJyc7XG4gICAgICAgICAgICAgIGRhdGFWaWV3QXJlYS5hcHBlbmQoXG4gICAgICAgICAgICAgICAgam1sKFxuICAgICAgICAgICAgICAgICAgJ2xhYmVsJywgW1xuICAgICAgICAgICAgICAgICAgICAnQnl0ZSBvZmZzZXQgJyxcbiAgICAgICAgICAgICAgICAgICAgWydpbnB1dCcsIHtcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ2RhdGFWaWV3U2V0Qnl0ZU9mZnNldCcsXG4gICAgICAgICAgICAgICAgICAgICAgc3RlcDogJzEnLCBzaXplOiAnNCcsXG4gICAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYFxuICAgICAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgJyAnLFxuICAgICAgICAgICAgICAgIGptbChcbiAgICAgICAgICAgICAgICAgICdsYWJlbCcsIFtcbiAgICAgICAgICAgICAgICAgICAgJ1ZhbHVlICcsXG4gICAgICAgICAgICAgICAgICAgIFsnaW5wdXQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ251bWJlcicsXG4gICAgICAgICAgICAgICAgICAgICAgc3RlcDogJzEnLCBzaXplOiAnNCcsXG4gICAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogU3RyaW5nLnJhd2BcXGQrYCxcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3R5cGVkQXJyYXlWYWx1ZSB0eXBlZEFycmF5LScgKyB0eXBlZEFycmF5LFxuICAgICAgICAgICAgICAgICAgICAgIC4uLmdldE1pbk1heEZvclR5cGVkQXJyYXkodHlwZWRBcnJheSlcbiAgICAgICAgICAgICAgICAgICAgfV1cbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIHZhbCA9PT0gJ3NldEludDgnIHx8IHZhbCA9PT0gJ3NldFVpbnQ4J1xuICAgICAgICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgICAgICAgOiBqbWwoJ2xhYmVsJywgW1xuICAgICAgICAgICAgICAgICAgICBbJ2lucHV0Jywge1xuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnbGl0dGxlRW5kaWFuJyxcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2hlY2tib3gnXG4gICAgICAgICAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgICAgICAgICAnTGl0dGxlIGVuZGlhbidcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICcgJyxcbiAgICAgICAgICAgICAgICBqbWwoJ2J1dHRvbicsIHtcbiAgICAgICAgICAgICAgICAgICRvbjoge1xuICAgICAgICAgICAgICAgICAgICBjbGljayAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YVZpZXdNZXRob2QgPVxuICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtkYXRhVmlld01ldGhvZHNbbnVtYmVyXX0gKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxTZWxlY3RFbGVtZW50fSAqLyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3IucHJldmlvdXNFbGVtZW50U2libGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICApPy52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFWaWV3U2V0Qnl0ZU9mZnNldCA9XG4gICAgICAgICAgICAgICAgICAgICAgICBOdW1iZXIucGFyc2VJbnQoLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnLmRhdGFWaWV3U2V0Qnl0ZU9mZnNldCdcbiAgICAgICAgICAgICAgICAgICAgICAgICkpLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlZEFycmF5VmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50fSAqLyAoJGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFuY2VzdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlWYWx1ZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICkpLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpdHRsZUVuZGlhbiA9XG4gICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxJbnB1dEVsZW1lbnR8bnVsbH0gKi8gKCRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhbmNlc3RvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJy5saXR0bGVFbmRpYW4nXG4gICAgICAgICAgICAgICAgICAgICAgICApKT8uY2hlY2tlZDtcblxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJ5dGVMZW5ndGggPVxuICAgICAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAqICAgJGRhdGFWaWV3OiBEYXRhVmlldyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgKi8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAkZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhbmNlc3Rvcj8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJy5ieXRlTGVuZ3RoJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVZpZXdNZXRob2QgPT09ICdzZXRCaWdJbnQ2NCcgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFWaWV3TWV0aG9kID09PSAnc2V0QmlnVWludDY0J1xuICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnl0ZUxlbmd0aC4kZGF0YVZpZXdbZGF0YVZpZXdNZXRob2RdKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhVmlld1NldEJ5dGVPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIEJpZ0ludCh0eXBlZEFycmF5VmFsdWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBsaXR0bGVFbmRpYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ5dGVMZW5ndGguJGRhdGFWaWV3W2RhdGFWaWV3TWV0aG9kXShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVZpZXdTZXRCeXRlT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBOdW1iZXIodHlwZWRBcnJheVZhbHVlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGl0dGxlRW5kaWFuXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkQXJyYXlMZW5ndGggPVxuICAgICAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudCAmIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAqICAgJGJ1aWxkVHlwZWRBcnJheTogQnVpbGRUeXBlZEFycmF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgKiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICovICgkZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKGFuY2VzdG9yLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnLnR5cGVkQXJyYXlMZW5ndGgnXG4gICAgICAgICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlZEFycmF5TGVuZ3RoLiRidWlsZFR5cGVkQXJyYXkoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIFsnU2V0J10pXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBbXG4gICAgICAgICAgWydvcHRpb24nLCB7dmFsdWU6ICcnfSwgWycoU2VsZWN0IGEgZGF0YSB2aWV3IG1ldGhvZCknXV0sXG4gICAgICAgICAgLi4uZGF0YVZpZXdNZXRob2RzLm1hcCgoZGF0YVZpZXdNZXRob2QpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAvKiogQHR5cGUge2ltcG9ydCgnamFtaWxpaCcpLkphbWlsaWhBcnJheX0gKi8gKFxuICAgICAgICAgICAgICBbJ29wdGlvbicsIFtkYXRhVmlld01ldGhvZF1dXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pXG4gICAgICAgIF1dLFxuICAgICAgICAnICcsXG4gICAgICAgIFsnZGl2Jywge2NsYXNzOiAnZGF0YVZpZXdBcmVhJ31dXG4gICAgICBdXVxuICAgIF0pO1xuXG4gICAgaWYgKHRoaXMuc2V0VmFsdWUgJiYgdmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0VmFsdWUoe3Jvb3Q6IGRpdiwgdmFsdWV9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9XG4gICAgICAvKipcbiAgICAgICAqIEB0eXBlIHtIVE1MSW5wdXRFbGVtZW50ICYge1xuICAgICAgICogICAkdmFsdWU6IEJ1ZmZlclNvdXJjZVxuICAgICAgICogfX1cbiAgICAgICAqLyAoJGUoZGl2LCAnLmJ5dGVMZW5ndGgnKSk7XG4gICAgICBieXRlTGVuZ3RoLiR2YWx1ZSA9IG5ldyBBcnJheUJ1ZmZlcigwKTtcbiAgICB9XG5cbiAgICByZXR1cm4gW2Rpdl07XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGJ1ZmZlcnNvdXJjZVR5cGU7XG4iXSwibWFwcGluZ3MiOiI4MjFDQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLE9BQVFFLEVBQUUsQ0FBRUMsR0FBRyxLQUFPLDJCQUEyQixDQUNqRCxPQUFRQyxHQUFHLENBQUVDLFdBQVcsS0FBTyxzQkFBc0IsQ0FDckQsTUFBTyxDQUFBQyxPQUFPLEtBQU0scUJBQXFCLENBRXpDLEtBQU0sQ0FBQUMsZUFBZSxFQUFHLG9CQUFBUCxjQUFBLEdBQUFRLENBQUEsTUFBc0IsQ0FDNUMsU0FBUyxDQUNULFVBQVUsQ0FDVixVQUFVLENBQ1YsV0FBVyxDQUNYLFVBQVUsQ0FDVixXQUFXLENBQ1gsWUFBWSxDQUNaLFlBQVksQ0FDWixhQUFhLENBQ2IsY0FBYyxDQUNmLENBQUMsQ0FFRixLQUFNLENBQUFDLFdBQVcsRUFBRyxvQkFBQVQsY0FBQSxHQUFBUSxDQUFBLE1BQXNCLENBQ3hDLFdBQVcsQ0FBRSxZQUFZLENBQUUsbUJBQW1CLENBQUUsWUFBWSxDQUM1RCxhQUFhLENBQUUsWUFBWSxDQUFFLGFBQWEsQ0FBRSxjQUFjLENBQzFELGNBQWMsQ0FBRSxlQUFlLENBQUUsZ0JBQWdCLENBQ2xELENBQUMsQ0FFRjtBQUNBO0FBQ0E7QUFDQSxHQUhBUixjQUFBLEdBQUFRLENBQUEsTUFJQSxLQUFNLENBQUFFLHNCQUFzQixDQUFJQyxVQUFVLEVBQUssQ0FBQVgsY0FBQSxHQUFBWSxDQUFBLE1BQUFaLGNBQUEsR0FBQVEsQ0FBQSxNQUM3QyxPQUFRRyxVQUFVLEVBQ2xCLElBQUssV0FBVyxDQUFBWCxjQUFBLEdBQUFhLENBQUEsU0FBQWIsY0FBQSxHQUFBUSxDQUFBLE1BQ2QsTUFBTyxDQUFDTSxHQUFHLENBQUUsQ0FBQyxHQUFHLENBQUVDLEdBQUcsQ0FBRSxHQUFHLENBQUMsQ0FDOUIsSUFBSyxZQUFZLENBQUFmLGNBQUEsR0FBQWEsQ0FBQSxTQUFBYixjQUFBLEdBQUFRLENBQUEsTUFDZixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLENBQUVDLEdBQUcsQ0FBRSxHQUFHLENBQUMsQ0FDM0IsSUFBSyxtQkFBbUIsQ0FBQWYsY0FBQSxHQUFBYSxDQUFBLFNBQUFiLGNBQUEsR0FBQVEsQ0FBQSxNQUN0QixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLENBQUVDLEdBQUcsQ0FBRSxHQUFHLENBQUMsQ0FDM0IsSUFBSyxZQUFZLENBQUFmLGNBQUEsR0FBQWEsQ0FBQSxTQUFBYixjQUFBLEdBQUFRLENBQUEsTUFDZixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLEtBQUssQ0FBRUMsR0FBRyxDQUFFLEtBQUssQ0FBQyxDQUNsQyxJQUFLLGFBQWEsQ0FBQWYsY0FBQSxHQUFBYSxDQUFBLFNBQUFiLGNBQUEsR0FBQVEsQ0FBQSxNQUNoQixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLENBQUVDLEdBQUcsQ0FBRSxLQUFLLENBQUMsQ0FDN0IsSUFBSyxZQUFZLENBQUFmLGNBQUEsR0FBQWEsQ0FBQSxTQUFBYixjQUFBLEdBQUFRLENBQUEsTUFDZixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLFVBQVUsQ0FBRUMsR0FBRyxDQUFFLFVBQVUsQ0FBQyxDQUM1QyxJQUFLLGFBQWEsQ0FBQWYsY0FBQSxHQUFBYSxDQUFBLFNBQUFiLGNBQUEsR0FBQVEsQ0FBQSxPQUNoQixNQUFPLENBQUNNLEdBQUcsQ0FBRSxDQUFDLENBQUVDLEdBQUcsQ0FBRSxVQUFVLENBQUMsQ0FDbEMsSUFBSyxjQUFjLENBQUFmLGNBQUEsR0FBQWEsQ0FBQSxTQUFBYixjQUFBLEdBQUFRLENBQUEsT0FDakIsTUFBTyxDQUFDTSxHQUFHLENBQUUsQ0FBQyxNQUFNLENBQUVDLEdBQUcsQ0FBRSxNQUFNLENBQUMsQ0FDcEMsSUFBSyxjQUFjLENBQUFmLGNB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