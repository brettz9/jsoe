function cov_24tv8o6xo1(){var path="/Users/brett/jsoe/src/superTypes/buffersourceType.js";var hash="c243688ee8575fb8f8211667e888c43c2675f2d0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/superTypes/buffersourceType.js",statementMap:{"0":{start:{line:5,column:46},end:{line:16,column:1}},"1":{start:{line:18,column:42},end:{line:22,column:1}},"2":{start:{line:28,column:31},end:{line:58,column:1}},"3":{start:{line:29,column:2},end:{line:57,column:3}},"4":{start:{line:31,column:4},end:{line:31,column:33}},"5":{start:{line:33,column:4},end:{line:33,column:30}},"6":{start:{line:35,column:4},end:{line:35,column:30}},"7":{start:{line:37,column:4},end:{line:37,column:37}},"8":{start:{line:39,column:4},end:{line:39,column:32}},"9":{start:{line:41,column:4},end:{line:41,column:47}},"10":{start:{line:43,column:4},end:{line:43,column:37}},"11":{start:{line:45,column:4},end:{line:45,column:39}},"12":{start:{line:48,column:4},end:{line:48,column:41}},"13":{start:{line:50,column:4},end:{line:50,column:49}},"14":{start:{line:52,column:4},end:{line:52,column:40}},"15":{start:{line:82,column:22},end:{line:111,column:1}},"16":{start:{line:83,column:2},end:{line:110,column:3}},"17":{start:{line:85,column:4},end:{line:85,column:21}},"18":{start:{line:87,column:4},end:{line:87,column:22}},"19":{start:{line:89,column:4},end:{line:89,column:29}},"20":{start:{line:91,column:4},end:{line:91,column:22}},"21":{start:{line:93,column:4},end:{line:93,column:23}},"22":{start:{line:95,column:4},end:{line:95,column:22}},"23":{start:{line:97,column:4},end:{line:97,column:23}},"24":{start:{line:99,column:4},end:{line:99,column:24}},"25":{start:{line:101,column:4},end:{line:101,column:24}},"26":{start:{line:103,column:4},end:{line:103,column:25}},"27":{start:{line:105,column:4},end:{line:105,column:26}},"28":{start:{line:113,column:10},end:{line:113,column:11}},"29":{start:{line:118,column:25},end:{line:1489,column:1}},"30":{start:{line:133,column:52},end:{line:133,column:68}},"31":{start:{line:136,column:14},end:{line:136,column:27}},"32":{start:{line:141,column:8},end:{line:141,column:9}},"33":{start:{line:143,column:19},end:{line:143,column:63}},"34":{start:{line:146,column:4},end:{line:174,column:5}},"35":{start:{line:147,column:6},end:{line:149,column:8}},"36":{start:{line:151,column:6},end:{line:151,column:62}},"37":{start:{line:153,column:6},end:{line:173,column:7}},"38":{start:{line:154,column:8},end:{line:165,column:10}},"39":{start:{line:161,column:12},end:{line:163,column:13}},"40":{start:{line:162,column:14},end:{line:162,column:38}},"41":{start:{line:166,column:8},end:{line:172,column:24}},"42":{start:{line:178,column:4},end:{line:200,column:5}},"43":{start:{line:179,column:6},end:{line:179,column:25}},"44":{start:{line:181,column:6},end:{line:181,column:74}},"45":{start:{line:182,column:6},end:{line:199,column:9}},"46":{start:{line:183,column:8},end:{line:198,column:10}},"47":{start:{line:192,column:12},end:{line:194,column:13}},"48":{start:{line:193,column:14},end:{line:193,column:40}},"49":{start:{line:196,column:12},end:{line:196,column:32}},"50":{start:{line:201,column:4},end:{line:207,column:6}},"51":{start:{line:215,column:11},end:{line:215,column:34}},"52":{start:{line:216,column:4},end:{line:216,column:22}},"53":{start:{line:219,column:22},end:{line:219,column:40}},"54":{start:{line:220,column:4},end:{line:229,column:5}},"55":{start:{line:221,column:6},end:{line:221,column:72}},"56":{start:{line:223,column:6},end:{line:223,column:70}},"57":{start:{line:225,column:8},end:{line:225,column:45}},"58":{start:{line:227,column:6},end:{line:227,column:36}},"59":{start:{line:228,column:6},end:{line:228,column:53}},"60":{start:{line:236,column:11},end:{line:236,column:34}},"61":{start:{line:238,column:4},end:{line:238,column:30}},"62":{start:{line:240,column:19},end:{line:240,column:69}},"63":{start:{line:241,column:4},end:{line:241,column:41}},"64":{start:{line:242,column:4},end:{line:242,column:50}},"65":{start:{line:245,column:6},end:{line:245,column:32}},"66":{start:{line:247,column:4},end:{line:247,column:47}},"67":{start:{line:248,column:4},end:{line:248,column:53}},"68":{start:{line:250,column:4},end:{line:274,column:5}},"69":{start:{line:252,column:8},end:{line:252,column:39}},"70":{start:{line:254,column:6},end:{line:254,column:50}},"71":{start:{line:255,column:6},end:{line:255,column:60}},"72":{start:{line:258,column:8},end:{line:258,column:39}},"73":{start:{line:260,column:6},end:{line:260,column:50}},"74":{start:{line:261,column:6},end:{line:261,column:60}},"75":{start:{line:262,column:11},end:{line:274,column:5}},"76":{start:{line:264,column:8},end:{line:264,column:41}},"77":{start:{line:266,column:6},end:{line:266,column:52}},"78":{start:{line:267,column:6},end:{line:267,column:62}},"79":{start:{line:270,column:8},end:{line:270,column:37}},"80":{start:{line:272,column:6},end:{line:272,column:44}},"81":{start:{line:273,column:6},end:{line:273,column:58}},"82":{start:{line:277,column:4},end:{line:279,column:13}},"83":{start:{line:282,column:22},end:{line:282,column:40}},"84":{start:{line:283,column:19},end:{line:283,column:69}},"85":{start:{line:285,column:4},end:{line:383,column:7}},"86":{start:{line:319,column:12},end:{line:319,column:31}},"87":{start:{line:320,column:27},end:{line:370,column:14}},"88":{start:{line:328,column:77},end:{line:330,column:29}},"89":{start:{line:331,column:41},end:{line:333,column:23}},"90":{start:{line:334,column:41},end:{line:334,column:63}},"91":{start:{line:335,column:73},end:{line:339,column:23}},"92":{start:{line:340,column:22},end:{line:340,column:54}},"93":{start:{line:341,column:22},end:{line:356,column:24}},"94":{start:{line:345,column:26},end:{line:354,column:29}},"95":{start:{line:360,column:18},end:{line:364,column:35}},"96":{start:{line:372,column:45},end:{line:376,column:14}},"97":{start:{line:386,column:4},end:{line:386,column:10}},"98":{start:{line:392,column:16},end:{line:1473,column:6}},"99":{start:{line:403,column:16},end:{line:403,column:41}},"100":{start:{line:413,column:16},end:{line:413,column:20}},"101":{start:{line:414,column:60},end:{line:414,column:78}},"102":{start:{line:415,column:61},end:{line:418,column:13}},"103":{start:{line:428,column:16},end:{line:428,column:43}},"104":{start:{line:430,column:34},end:{line:430,column:67}},"105":{start:{line:431,column:34},end:{line:435,column:13}},"106":{start:{line:437,column:27},end:{line:440,column:13}},"107":{start:{line:442,column:74},end:{line:445,column:20}},"108":{start:{line:446,column:39},end:{line:448,column:17}},"109":{start:{line:450,column:74},end:{line:453,column:20}},"110":{start:{line:454,column:39},end:{line:456,column:25}},"111":{start:{line:458,column:29},end:{line:460,column:13}},"112":{start:{line:463,column:14},end:{line:463,column:60}},"113":{start:{line:466,column:31},end:{line:468,column:13}},"114":{start:{line:470,column:46},end:{line:473,column:22}},"115":{start:{line:474,column:41},end:{line:476,column:17}},"116":{start:{line:479,column:46},end:{line:482,column:22}},"117":{start:{line:483,column:37},end:{line:485,column:29}},"118":{start:{line:487,column:31},end:{line:489,column:13}},"119":{start:{line:491,column:12},end:{line:491,column:44}},"120":{start:{line:492,column:12},end:{line:492,column:48}},"121":{start:{line:494,column:37},end:{line:505,column:14}},"122":{start:{line:498,column:14},end:{line:504,column:18}},"123":{start:{line:508,column:12},end:{line:508,column:60}},"124":{start:{line:510,column:12},end:{line:520,column:13}},"125":{start:{line:512,column:14},end:{line:512,column:41}},"126":{start:{line:513,column:14},end:{line:513,column:20}},"127":{start:{line:515,column:14},end:{line:515,column:43}},"128":{start:{line:516,column:14},end:{line:516,column:20}},"129":{start:{line:518,column:14},end:{line:518,column:45}},"130":{start:{line:519,column:14},end:{line:519,column:20}},"131":{start:{line:528,column:41},end:{line:531,column:31}},"132":{start:{line:532,column:41},end:{line:535,column:32}},"133":{start:{line:554,column:41},end:{line:557,column:31}},"134":{start:{line:558,column:41},end:{line:561,column:32}},"135":{start:{line:578,column:41},end:{line:581,column:32}},"136":{start:{line:582,column:41},end:{line:585,column:31}},"137":{start:{line:604,column:61},end:{line:604,column:65}},"138":{start:{line:606,column:16},end:{line:606,column:49}},"139":{start:{line:616,column:17},end:{line:619,column:17}},"140":{start:{line:622,column:14},end:{line:622,column:75}},"141":{start:{line:630,column:18},end:{line:630,column:51}},"142":{start:{line:632,column:14},end:{line:634,column:15}},"143":{start:{line:633,column:16},end:{line:633,column:23}},"144":{start:{line:636,column:14},end:{line:639,column:16}},"145":{start:{line:641,column:14},end:{line:641,column:51}},"146":{start:{line:643,column:43},end:{line:647,column:15}},"147":{start:{line:652,column:18},end:{line:652,column:69}},"148":{start:{line:656,column:10},end:{line:656,column:42}},"149":{start:{line:666,column:16},end:{line:666,column:64}},"150":{start:{line:686,column:20},end:{line:686,column:24}},"151":{start:{line:690,column:20},end:{line:691,column:80}},"152":{start:{line:699,column:22},end:{line:699,column:55}},"153":{start:{line:701,column:18},end:{line:703,column:19}},"154":{start:{line:702,column:20},end:{line:702,column:27}},"155":{start:{line:705,column:73},end:{line:709,column:19}},"156":{start:{line:710,column:30},end:{line:710,column:40}},"157":{start:{line:712,column:18},end:{line:720,column:19}},"158":{start:{line:713,column:20},end:{line:716,column:22}},"159":{start:{line:717,column:20},end:{line:717,column:40}},"160":{start:{line:718,column:20},end:{line:718,column:42}},"161":{start:{line:719,column:20},end:{line:719,column:27}},"162":{start:{line:721,column:18},end:{line:721,column:45}},"163":{start:{line:722,column:18},end:{line:722,column:40}},"164":{start:{line:724,column:18},end:{line:728,column:19}},"165":{start:{line:727,column:20},end:{line:727,column:46}},"166":{start:{line:731,column:21},end:{line:731,column:69}},"167":{start:{line:737,column:22},end:{line:740,column:49}},"168":{start:{line:746,column:22},end:{line:750,column:51}},"169":{start:{line:765,column:64},end:{line:765,column:68}},"170":{start:{line:766,column:70},end:{line:770,column:19}},"171":{start:{line:771,column:30},end:{line:771,column:40}},"172":{start:{line:772,column:18},end:{line:782,column:19}},"173":{start:{line:776,column:20},end:{line:778,column:22}},"174":{start:{line:779,column:20},end:{line:779,column:40}},"175":{start:{line:781,column:20},end:{line:781,column:47}},"176":{start:{line:783,column:18},end:{line:783,column:40}},"177":{start:{line:810,column:22},end:{line:810,column:26}},"178":{start:{line:813,column:21},end:{line:813,column:69}},"179":{start:{line:815,column:37},end:{line:820,column:24}},"180":{start:{line:822,column:78},end:{line:826,column:28}},"181":{start:{line:827,column:43},end:{line:831,column:23}},"182":{start:{line:833,column:37},end:{line:837,column:38}},"183":{start:{line:839,column:18},end:{line:847,column:19}},"184":{start:{line:840,column:20},end:{line:843,column:22}},"185":{start:{line:844,column:20},end:{line:844,column:40}},"186":{start:{line:846,column:20},end:{line:846,column:47}},"187":{start:{line:848,column:18},end:{line:848,column:40}},"188":{start:{line:857,column:22},end:{line:859,column:48}},"189":{start:{line:875,column:20},end:{line:875,column:24}},"190":{start:{line:878,column:21},end:{line:878,column:69}},"191":{start:{line:884,column:22},end:{line:887,column:49}},"192":{start:{line:914,column:22},end:{line:914,column:26}},"193":{start:{line:916,column:20},end:{line:917,column:80}},"194":{start:{line:921,column:20},end:{line:921,column:66}},"195":{start:{line:924,column:37},end:{line:926,column:19}},"196":{start:{line:927,column:18},end:{line:939,column:19}},"197":{start:{line:930,column:20},end:{line:935,column:22}},"198":{start:{line:936,column:20},end:{line:936,column:40}},"199":{start:{line:938,column:20},end:{line:938,column:47}},"200":{start:{line:940,column:18},end:{line:940,column:40}},"201":{start:{line:945,column:64},end:{line:945,column:68}},"202":{start:{line:947,column:20},end:{line:948,column:80}},"203":{start:{line:956,column:22},end:{line:956,column:55}},"204":{start:{line:958,column:18},end:{line:960,column:19}},"205":{start:{line:959,column:20},end:{line:959,column:27}},"206":{start:{line:965,column:22},end:{line:965,column:57}},"207":{start:{line:995,column:33},end:{line:995,column:67}},"208":{start:{line:997,column:48},end:{line:1011,column:17}},"209":{start:{line:1007,column:16},end:{line:1008,column:61}},"210":{start:{line:1009,column:16},end:{line:1009,column:50}},"211":{start:{line:1010,column:16},end:{line:1010,column:50}},"212":{start:{line:1025,column:18},end:{line:1025,column:22}},"213":{start:{line:1026,column:33},end:{line:1028,column:15}},"214":{start:{line:1030,column:66},end:{line:1034,column:15}},"215":{start:{line:1035,column:40},end:{line:1039,column:19}},"216":{start:{line:1040,column:14},end:{line:1048,column:15}},"217":{start:{line:1041,column:16},end:{line:1044,column:18}},"218":{start:{line:1045,column:16},end:{line:1045,column:36}},"219":{start:{line:1047,column:16},end:{line:1047,column:49}},"220":{start:{line:1049,column:14},end:{line:1049,column:42}},"221":{start:{line:1061,column:18},end:{line:1061,column:22}},"222":{start:{line:1065,column:16},end:{line:1066,column:61}},"223":{start:{line:1070,column:47},end:{line:1074,column:36}},"224":{start:{line:1082,column:18},end:{line:1082,column:51}},"225":{start:{line:1084,column:14},end:{line:1086,column:15}},"226":{start:{line:1085,column:16},end:{line:1085,column:23}},"227":{start:{line:1088,column:14},end:{line:1088,column:49}},"228":{start:{line:1090,column:14},end:{line:1090,column:76}},"229":{start:{line:1092,column:43},end:{line:1096,column:15}},"230":{start:{line:1101,column:18},end:{line:1101,column:69}},"231":{start:{line:1107,column:18},end:{line:1111,column:35}},"232":{start:{line:1115,column:10},end:{line:1115,column:42}},"233":{start:{line:1140,column:20},end:{line:1140,column:24}},"234":{start:{line:1143,column:18},end:{line:1143,column:66}},"235":{start:{line:1145,column:76},end:{line:1149,column:26}},"236":{start:{line:1150,column:41},end:{line:1154,column:21}},"237":{start:{line:1156,column:31},end:{line:1158,column:36}},"238":{start:{line:1161,column:18},end:{line:1161,column:64}},"239":{start:{line:1164,column:35},end:{line:1166,column:17}},"240":{start:{line:1169,column:50},end:{line:1172,column:26}},"241":{start:{line:1173,column:45},end:{line:1175,column:21}},"242":{start:{line:1177,column:16},end:{line:1189,column:17}},"243":{start:{line:1182,column:18},end:{line:1185,column:20}},"244":{start:{line:1186,column:18},end:{line:1186,column:38}},"245":{start:{line:1187,column:18},end:{line:1187,column:40}},"246":{start:{line:1188,column:18},end:{line:1188,column:31}},"247":{start:{line:1191,column:16},end:{line:1191,column:43}},"248":{start:{line:1192,column:16},end:{line:1192,column:38}},"249":{start:{line:1193,column:16},end:{line:1193,column:28}},"250":{start:{line:1207,column:20},end:{line:1207,column:24}},"251":{start:{line:1208,column:31},end:{line:1208,column:58}},"252":{start:{line:1210,column:18},end:{line:1210,column:51}},"253":{start:{line:1214,column:18},end:{line:1214,column:66}},"254":{start:{line:1221,column:23},end:{line:1224,column:19}},"255":{start:{line:1226,column:67},end:{line:1228,column:17}},"256":{start:{line:1230,column:16},end:{line:1240,column:19}},"257":{start:{line:1231,column:65},end:{line:1231,column:73}},"258":{start:{line:1232,column:18},end:{line:1239,column:21}},"259":{start:{line:1242,column:18},end:{line:1242,column:67}},"260":{start:{line:1244,column:35},end:{line:1246,column:17}},"261":{start:{line:1248,column:16},end:{line:1248,column:48}},"262":{start:{line:1249,column:16},end:{line:1272,column:18}},"263":{start:{line:1251,column:20},end:{line:1270,column:23}},"264":{start:{line:1284,column:20},end:{line:1284,column:24}},"265":{start:{line:1287,column:18},end:{line:1287,column:51}},"266":{start:{line:1290,column:16},end:{line:1292,column:17}},"267":{start:{line:1291,column:18},end:{line:1291,column:25}},"268":{start:{line:1295,column:18},end:{line:1295,column:67}},"269":{start:{line:1298,column:31},end:{line:1298,column:58}},"270":{start:{line:1299,column:16},end:{line:1310,column:17}},"271":{start:{line:1300,column:37},end:{line:1302,column:19}},"272":{start:{line:1304,column:18},end:{line:1304,column:41}},"273":{start:{line:1306,column:18},end:{line:1306,column:75}},"274":{start:{line:1307,column:18},end:{line:1307,column:38}},"275":{start:{line:1308,column:18},end:{line:1308,column:40}},"276":{start:{line:1309,column:18},end:{line:1309,column:25}},"277":{start:{line:1311,column:16},end:{line:1311,column:43}},"278":{start:{line:1312,column:16},end:{line:1312,column:38}},"279":{start:{line:1318,column:20},end:{line:1322,column:37}},"280":{start:{line:1324,column:16},end:{line:1324,column:40}},"281":{start:{line:1340,column:66},end:{line:1342,column:15}},"282":{start:{line:1344,column:59},end:{line:1344,column:71}},"283":{start:{line:1346,column:16},end:{line:1346,column:38}},"284":{start:{line:1349,column:14},end:{line:1349,column:44}},"285":{start:{line:1350,column:14},end:{line:1459,column:16}},"286":{start:{line:1388,column:22},end:{line:1388,column:41}},"287":{start:{line:1390,column:24},end:{line:1390,column:42}},"288":{start:{line:1394,column:59},end:{line:1396,column:34}},"289":{start:{line:1400,column:24},end:{line:1403,column:33}},"290":{start:{line:1405,column:56},end:{line:1408,column:32}},"291":{start:{line:1410,column:61},end:{line:1413,column:35}},"292":{start:{line:1421,column:26},end:{line:1425,column:27}},"293":{start:{line:1428,column:22},end:{line:1443,column:23}},"294":{start:{line:1432,column:24},end:{line:1436,column:26}},"295":{start:{line:1438,column:24},end:{line:1442,column:26}},"296":{start:{line:1450,column:29},end:{line:1454,column:25}},"297":{start:{line:1455,column:22},end:{line:1455,column:58}},"298":{start:{line:1465,column:12},end:{line:1467,column:14}},"299":{start:{line:1475,column:4},end:{line:1485,column:5}},"300":{start:{line:1476,column:6},end:{line:1476,column:40}},"301":{start:{line:1483,column:11},end:{line:1483,column:33}},"302":{start:{line:1484,column:6},end:{line:1484,column:45}},"303":{start:{line:1487,column:4},end:{line:1487,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:31},end:{line:28,column:32}},loc:{start:{line:28,column:47},end:{line:58,column:1}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:82,column:22},end:{line:82,column:23}},loc:{start:{line:82,column:32},end:{line:111,column:1}},line:82},"2":{name:"(anonymous_2)",decl:{start:{line:128,column:2},end:{line:128,column:3}},loc:{start:{line:128,column:24},end:{line:208,column:3}},line:128},"3":{name:"(anonymous_3)",decl:{start:{line:160,column:10},end:{line:160,column:11}},loc:{start:{line:160,column:20},end:{line:164,column:11}},line:160},"4":{name:"(anonymous_4)",decl:{start:{line:178,column:65},end:{line:178,column:66}},loc:{start:{line:178,column:77},end:{line:180,column:5}},line:178},"5":{name:"(anonymous_5)",decl:{start:{line:182,column:30},end:{line:182,column:31}},loc:{start:{line:182,column:40},end:{line:199,column:7}},line:182},"6":{name:"(anonymous_6)",decl:{start:{line:191,column:10},end:{line:191,column:11}},loc:{start:{line:191,column:20},end:{line:197,column:11}},line:191},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:2},end:{line:209,column:3}},loc:{start:{line:209,column:20},end:{line:217,column:3}},line:209},"8":{name:"(anonymous_8)",decl:{start:{line:218,column:2},end:{line:218,column:3}},loc:{start:{line:218,column:27},end:{line:275,column:3}},line:218},"9":{name:"(anonymous_9)",decl:{start:{line:276,column:2},end:{line:276,column:3}},loc:{start:{line:276,column:20},end:{line:280,column:3}},line:276},"10":{name:"(anonymous_10)",decl:{start:{line:281,column:2},end:{line:281,column:3}},loc:{start:{line:281,column:19},end:{line:384,column:3}},line:281},"11":{name:"(anonymous_11)",decl:{start:{line:318,column:10},end:{line:318,column:11}},loc:{start:{line:318,column:26},end:{line:380,column:11}},line:318},"12":{name:"(anonymous_12)",decl:{start:{line:327,column:20},end:{line:327,column:21}},loc:{start:{line:327,column:30},end:{line:357,column:21}},line:327},"13":{name:"(anonymous_13)",decl:{start:{line:344,column:27},end:{line:344,column:28}},loc:{start:{line:344,column:40},end:{line:355,column:25}},line:344},"14":{name:"(anonymous_14)",decl:{start:{line:359,column:35},end:{line:359,column:36}},loc:{start:{line:359,column:51},end:{line:365,column:17}},line:359},"15":{name:"(anonymous_15)",decl:{start:{line:385,column:2},end:{line:385,column:3}},loc:{start:{line:385,column:34},end:{line:1488,column:3}},line:385},"16":{name:"(anonymous_16)",decl:{start:{line:398,column:10},end:{line:398,column:11}},loc:{start:{line:398,column:20},end:{line:404,column:11}},line:398},"17":{name:"(anonymous_17)",decl:{start:{line:408,column:10},end:{line:408,column:11}},loc:{start:{line:408,column:29},end:{line:521,column:11}},line:408},"18":{name:"(anonymous_18)",decl:{start:{line:496,column:18},end:{line:496,column:19}},loc:{start:{line:496,column:29},end:{line:505,column:13}},line:496},"19":{name:"(anonymous_19)",decl:{start:{line:527,column:12},end:{line:527,column:13}},loc:{start:{line:527,column:21},end:{line:536,column:13}},line:527},"20":{name:"(anonymous_20)",decl:{start:{line:553,column:12},end:{line:553,column:13}},loc:{start:{line:553,column:21},end:{line:562,column:13}},line:553},"21":{name:"(anonymous_21)",decl:{start:{line:577,column:12},end:{line:577,column:13}},loc:{start:{line:577,column:21},end:{line:586,column:13}},line:577},"22":{name:"(anonymous_22)",decl:{start:{line:603,column:12},end:{line:603,column:13}},loc:{start:{line:603,column:23},end:{line:653,column:13}},line:603},"23":{name:"(anonymous_23)",decl:{start:{line:655,column:27},end:{line:655,column:28}},loc:{start:{line:655,column:43},end:{line:657,column:9}},line:655},"24":{name:"(anonymous_24)",decl:{start:{line:661,column:10},end:{line:661,column:11}},loc:{start:{line:661,column:20},end:{line:667,column:11}},line:661},"25":{name:"(anonymous_25)",decl:{start:{line:684,column:16},end:{line:684,column:17}},loc:{start:{line:684,column:27},end:{line:751,column:17}},line:684},"26":{name:"(anonymous_26)",decl:{start:{line:764,column:16},end:{line:764,column:17}},loc:{start:{line:764,column:27},end:{line:784,column:17}},line:764},"27":{name:"(anonymous_27)",decl:{start:{line:804,column:16},end:{line:804,column:17}},loc:{start:{line:804,column:45},end:{line:849,column:17}},line:804},"28":{name:"(anonymous_28)",decl:{start:{line:852,column:16},end:{line:852,column:17}},loc:{start:{line:852,column:27},end:{line:860,column:17}},line:852},"29":{name:"(anonymous_29)",decl:{start:{line:873,column:16},end:{line:873,column:17}},loc:{start:{line:873,column:27},end:{line:888,column:17}},line:873},"30":{name:"(anonymous_30)",decl:{start:{line:909,column:16},end:{line:909,column:17}},loc:{start:{line:909,column:45},end:{line:941,column:17}},line:909},"31":{name:"(anonymous_31)",decl:{start:{line:944,column:16},end:{line:944,column:17}},loc:{start:{line:944,column:27},end:{line:966,column:17}},line:944},"32":{name:"(anonymous_32)",decl:{start:{line:994,column:12},end:{line:994,column:13}},loc:{start:{line:994,column:42},end:{line:1012,column:13}},line:994},"33":{name:"(anonymous_33)",decl:{start:{line:1006,column:24},end:{line:1006,column:25}},loc:{start:{line:1006,column:45},end:{line:1011,column:15}},line:1006},"34":{name:"(anonymous_34)",decl:{start:{line:1019,column:12},end:{line:1019,column:13}},loc:{start:{line:1019,column:43},end:{line:1050,column:13}},line:1019},"35":{name:"(anonymous_35)",decl:{start:{line:1053,column:12},end:{line:1053,column:13}},loc:{start:{line:1053,column:23},end:{line:1112,column:13}},line:1053},"36":{name:"(anonymous_36)",decl:{start:{line:1114,column:27},end:{line:1114,column:28}},loc:{start:{line:1114,column:43},end:{line:1116,column:9}},line:1114},"37":{name:"(anonymous_37)",decl:{start:{line:1134,column:14},end:{line:1134,column:15}},loc:{start:{line:1134,column:37},end:{line:1194,column:15}},line:1134},"38":{name:"(anonymous_38)",decl:{start:{line:1201,column:14},end:{line:1201,column:15}},loc:{start:{line:1201,column:34},end:{line:1273,column:15}},line:1201},"39":{name:"(anonymous_39)",decl:{start:{line:1230,column:58},end:{line:1230,column:59}},loc:{start:{line:1230,column:65},end:{line:1240,column:17}},line:1230},"40":{name:"(anonymous_40)",decl:{start:{line:1250,column:42},end:{line:1250,column:43}},loc:{start:{line:1250,column:55},end:{line:1271,column:19}},line:1250},"41":{name:"(anonymous_41)",decl:{start:{line:1276,column:14},end:{line:1276,column:15}},loc:{start:{line:1276,column:25},end:{line:1325,column:15}},line:1276},"42":{name:"(anonymous_42)",decl:{start:{line:1339,column:12},end:{line:1339,column:13}},loc:{start:{line:1339,column:22},end:{line:1460,column:13}},line:1339},"43":{name:"(anonymous_43)",decl:{start:{line:1387,column:20},end:{line:1387,column:21}},loc:{start:{line:1387,column:30},end:{line:1456,column:21}},line:1387},"44":{name:"(anonymous_44)",decl:{start:{line:1464,column:33},end:{line:1464,column:34}},loc:{start:{line:1464,column:53},end:{line:1468,column:11}},line:1464}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:57,column:3}},type:"switch",locations:[{start:{line:30,column:2},end:{line:31,column:33}},{start:{line:32,column:2},end:{line:33,column:30}},{start:{line:34,column:2},end:{line:35,column:30}},{start:{line:36,column:2},end:{line:37,column:37}},{start:{line:38,column:2},end:{line:39,column:32}},{start:{line:40,column:2},end:{line:41,column:47}},{start:{line:42,column:2},end:{line:43,column:37}},{start:{line:44,column:2},end:{line:45,column:39}},{start:{line:46,column:2},end:{line:48,column:41}},{start:{line:49,column:2},end:{line:50,column:49}},{start:{line:51,column:2},end:{line:52,column:40}}],line:29},"1":{loc:{start:{line:83,column:2},end:{line:110,column:3}},type:"switch",locations:[{start:{line:84,column:2},end:{line:85,column:21}},{start:{line:86,column:2},end:{line:87,column:22}},{start:{line:88,column:2},end:{line:89,column:29}},{start:{line:90,column:2},end:{line:91,column:22}},{start:{line:92,column:2},end:{line:93,column:23}},{start:{line:94,column:2},end:{line:95,column:22}},{start:{line:96,column:2},end:{line:97,column:23}},{start:{line:98,column:2},end:{line:99,column:24}},{start:{line:100,column:2},end:{line:101,column:24}},{start:{line:102,column:2},end:{line:103,column:25}},{start:{line:104,column:2},end:{line:105,column:26}}],line:83},"2":{loc:{start:{line:129,column:19},end:{line:132,column:10}},type:"default-arg",locations:[{start:{line:132,column:8},end:{line:132,column:10}}],line:129},"3":{loc:{start:{line:146,column:4},end:{line:174,column:5}},type:"if",locations:[{start:{line:146,column:4},end:{line:174,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:146},"4":{loc:{start:{line:146,column:8},end:{line:146,column:64}},type:"binary-expr",locations:[{start:{line:146,column:8},end:{line:146,column:43}},{start:{line:146,column:47},end:{line:146,column:64}}],line:146},"5":{loc:{start:{line:148,column:35},end:{line:148,column:68}},type:"binary-expr",locations:[{start:{line:148,column:35},end:{line:148,column:47}},{start:{line:148,column:51},end:{line:148,column:68}}],line:148},"6":{loc:{start:{line:153,column:6},end:{line:173,column:7}},type:"if",locations:[{start:{line:153,column:6},end:{line:173,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:153},"7":{loc:{start:{line:161,column:12},end:{line:163,column:13}},type:"if",locations:[{start:{line:161,column:12},end:{line:163,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:161},"8":{loc:{start:{line:178,column:4},end:{line:200,column:5}},type:"if",locations:[{start:{line:178,column:4},end:{line:200,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:178},"9":{loc:{start:{line:178,column:8},end:{line:180,column:6}},type:"binary-expr",locations:[{start:{line:178,column:8},end:{line:178,column:40}},{start:{line:178,column:44},end:{line:180,column:6}}],line:178},"10":{loc:{start:{line:192,column:12},end:{line:194,column:13}},type:"if",locations:[{start:{line:192,column:12},end:{line:194,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:192},"11":{loc:{start:{line:202,column:13},end:{line:206,column:22}},type:"cond-expr",locations:[{start:{line:203,column:10},end:{line:203,column:16}},{start:{line:204,column:10},end:{line:206,column:22}}],line:202},"12":{loc:{start:{line:204,column:10},end:{line:206,column:22}},type:"cond-expr",locations:[{start:{line:205,column:12},end:{line:205,column:16}},{start:{line:206,column:12},end:{line:206,column:22}}],line:204},"13":{loc:{start:{line:220,column:4},end:{line:229,column:5}},type:"if",locations:[{start:{line:220,column:4},end:{line:229,column:5}},{start:{line:222,column:11},end:{line:229,column:5}}],line:220},"14":{loc:{start:{line:220,column:8},end:{line:220,column:63}},type:"binary-expr",locations:[{start:{line:220,column:8},end:{line:220,column:35}},{start:{line:220,column:39},end:{line:220,column:63}}],line:220},"15":{loc:{start:{line:240,column:19},end:{line:240,column:69}},type:"cond-expr",locations:[{start:{line:240,column:49},end:{line:240,column:54}},{start:{line:240,column:57},end:{line:240,column:69}}],line:240},"16":{loc:{start:{line:250,column:4},end:{line:274,column:5}},type:"if",locations:[{start:{line:250,column:4},end:{line:274,column:5}},{start:{line:262,column:11},end:{line:274,column:5}}],line:250},"17":{loc:{start:{line:262,column:11},end:{line:274,column:5}},type:"if",locations:[{start:{line:262,column:11},end:{line:274,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:262},"18":{loc:{start:{line:283,column:19},end:{line:283,column:69}},type:"cond-expr",locations:[{start:{line:283,column:49},end:{line:283,column:54}},{start:{line:283,column:57},end:{line:283,column:69}}],line:283},"19":{loc:{start:{line:294,column:9},end:{line:303,column:14}},type:"cond-expr",locations:[{start:{line:295,column:10},end:{line:302,column:9}},{start:{line:303,column:10},end:{line:303,column:14}}],line:294},"20":{loc:{start:{line:304,column:9},end:{line:313,column:14}},type:"cond-expr",locations:[{start:{line:305,column:10},end:{line:312,column:9}},{start:{line:313,column:10},end:{line:313,column:14}}],line:304},"21":{loc:{start:{line:304,column:10},end:{line:304,column:65}},type:"binary-expr",locations:[{start:{line:304,column:10},end:{line:304,column:34}},{start:{line:304,column:38},end:{line:304,column:65}}],line:304},"22":{loc:{start:{line:349,column:30},end:{line:351,column:37}},type:"cond-expr",locations:[{start:{line:350,column:34},end:{line:350,column:57}},{start:{line:351,column:34},end:{line:351,column:37}}],line:349},"23":{loc:{start:{line:361,column:30},end:{line:363,column:33}},type:"cond-expr",locations:[{start:{line:362,column:24},end:{line:362,column:28}},{start:{line:363,column:24},end:{line:363,column:33}}],line:361},"24":{loc:{start:{line:439,column:29},end:{line:439,column:72}},type:"cond-expr",locations:[{start:{line:439,column:45},end:{line:439,column:60}},{start:{line:439,column:63},end:{line:439,column:72}}],line:439},"25":{loc:{start:{line:446,column:39},end:{line:448,column:17}},type:"cond-expr",locations:[{start:{line:447,column:16},end:{line:447,column:54}},{start:{line:448,column:16},end:{line:448,column:17}}],line:446},"26":{loc:{start:{line:454,column:39},end:{line:456,column:25}},type:"cond-expr",locations:[{start:{line:455,column:16},end:{line:455,column:54}},{start:{line:456,column:16},end:{line:456,column:25}}],line:454},"27":{loc:{start:{line:474,column:41},end:{line:476,column:17}},type:"cond-expr",locations:[{start:{line:475,column:16},end:{line:475,column:56}},{start:{line:476,column:16},end:{line:476,column:17}}],line:474},"28":{loc:{start:{line:483,column:37},end:{line:485,column:29}},type:"cond-expr",locations:[{start:{line:484,column:16},end:{line:484,column:52}},{start:{line:485,column:16},end:{line:485,column:29}}],line:483},"29":{loc:{start:{line:498,column:21},end:{line:504,column:17}},type:"cond-expr",locations:[{start:{line:499,column:18},end:{line:501,column:17}},{start:{line:502,column:18},end:{line:504,column:17}}],line:498},"30":{loc:{start:{line:510,column:12},end:{line:520,column:13}},type:"switch",locations:[{start:{line:511,column:12},end:{line:513,column:20}},{start:{line:514,column:12},end:{line:517,column:13}},{start:{line:517,column:14},end:{line:519,column:20}}],line:510},"31":{loc:{start:{line:632,column:14},end:{line:634,column:15}},type:"if",locations:[{start:{line:632,column:14},end:{line:634,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:632},"32":{loc:{start:{line:681,column:24},end:{line:681,column:51}},type:"binary-expr",locations:[{start:{line:681,column:24},end:{line:681,column:29}},{start:{line:681,column:33},end:{line:681,column:51}}],line:681},"33":{loc:{start:{line:701,column:18},end:{line:703,column:19}},type:"if",locations:[{start:{line:701,column:18},end:{line:703,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:701},"34":{loc:{start:{line:712,column:18},end:{line:720,column:19}},type:"if",locations:[{start:{line:712,column:18},end:{line:720,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:712},"35":{loc:{start:{line:724,column:18},end:{line:728,column:19}},type:"if",locations:[{start:{line:724,column:18},end:{line:728,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:724},"36":{loc:{start:{line:772,column:18},end:{line:782,column:19}},type:"if",locations:[{start:{line:772,column:18},end:{line:782,column:19}},{start:{line:780,column:25},end:{line:782,column:19}}],line:772},"37":{loc:{start:{line:815,column:37},end:{line:820,column:24}},type:"binary-expr",locations:[{start:{line:815,column:37},end:{line:820,column:19}},{start:{line:820,column:23},end:{line:820,column:24}}],line:815},"38":{loc:{start:{line:827,column:43},end:{line:831,column:23}},type:"cond-expr",locations:[{start:{line:828,column:22},end:{line:830,column:21}},{start:{line:831,column:22},end:{line:831,column:23}}],line:827},"39":{loc:{start:{line:833,column:37},end:{line:837,column:38}},type:"cond-expr",locations:[{start:{line:834,column:22},end:{line:836,column:21}},{start:{line:837,column:22},end:{line:837,column:38}}],line:833},"40":{loc:{start:{line:839,column:18},end:{line:847,column:19}},type:"if",locations:[{start:{line:839,column:18},end:{line:847,column:19}},{start:{line:845,column:25},end:{line:847,column:19}}],line:839},"41":{loc:{start:{line:927,column:18},end:{line:939,column:19}},type:"if",locations:[{start:{line:927,column:18},end:{line:939,column:19}},{start:{line:937,column:25},end:{line:939,column:19}}],line:927},"42":{loc:{start:{line:958,column:18},end:{line:960,column:19}},type:"if",locations:[{start:{line:958,column:18},end:{line:960,column:19}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:958},"43":{loc:{start:{line:1035,column:40},end:{line:1039,column:19}},type:"cond-expr",locations:[{start:{line:1036,column:18},end:{line:1038,column:17}},{start:{line:1039,column:18},end:{line:1039,column:19}}],line:1035},"44":{loc:{start:{line:1040,column:14},end:{line:1048,column:15}},type:"if",locations:[{start:{line:1040,column:14},end:{line:1048,column:15}},{start:{line:1046,column:21},end:{line:1048,column:15}}],line:1040},"45":{loc:{start:{line:1084,column:14},end:{line:1086,column:15}},type:"if",locations:[{start:{line:1084,column:14},end:{line:1086,column:15}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1084},"46":{loc:{start:{line:1150,column:41},end:{line:1154,column:21}},type:"cond-expr",locations:[{start:{line:1151,column:20},end:{line:1153,column:19}},{start:{line:1154,column:20},end:{line:1154,column:21}}],line:1150},"47":{loc:{start:{line:1156,column:31},end:{line:1158,column:36}},type:"cond-expr",locations:[{start:{line:1157,column:20},end:{line:1157,column:47}},{start:{line:1158,column:20},end:{line:1158,column:36}}],line:1156},"48":{loc:{start:{line:1173,column:45},end:{line:1175,column:21}},type:"cond-expr",locations:[{start:{line:1174,column:20},end:{line:1174,column:60}},{start:{line:1175,column:20},end:{line:1175,column:21}}],line:1173},"49":{loc:{start:{line:1177,column:16},end:{line:1189,column:17}},type:"if",locations:[{start:{line:1177,column:16},end:{line:1189,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1177},"50":{loc:{start:{line:1234,column:20},end:{line:1236,column:43}},type:"cond-expr",locations:[{start:{line:1235,column:24},end:{line:1235,column:43}},{start:{line:1236,column:24},end:{line:1236,column:43}}],line:1234},"51":{loc:{start:{line:1260,column:33},end:{line:1262,column:43}},type:"cond-expr",locations:[{start:{line:1261,column:28},end:{line:1261,column:53}},{start:{line:1262,column:28},end:{line:1262,column:43}}],line:1260},"52":{loc:{start:{line:1263,column:31},end:{line:1265,column:31}},type:"cond-expr",locations:[{start:{line:1264,column:28},end:{line:1264,column:69}},{start:{line:1265,column:28},end:{line:1265,column:31}}],line:1263},"53":{loc:{start:{line:1290,column:16},end:{line:1292,column:17}},type:"if",locations:[{start:{line:1290,column:16},end:{line:1292,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:1290},"54":{loc:{start:{line:1375,column:16},end:{line:1383,column:20}},type:"cond-expr",locations:[{start:{line:1376,column:20},end:{line:1376,column:22}},{start:{line:1377,column:20},end:{line:1383,column:20}}],line:1375},"55":{loc:{start:{line:1375,column:16},end:{line:1375,column:55}},type:"binary-expr",locations:[{start:{line:1375,column:16},end:{line:1375,column:33}},{start:{line:1375,column:37},end:{line:1375,column:55}}],line:1375},"56":{loc:{start:{line:1428,column:22},end:{line:1443,column:23}},type:"if",locations:[{start:{line:1428,column:22},end:{line:1443,column:23}},{start:{line:1437,column:29},end:{line:1443,column:23}}],line:1428},"57":{loc:{start:{line:1429,column:24},end:{line:1430,column:57}},type:"binary-expr",locations:[{start:{line:1429,column:24},end:{line:1429,column:56}},{start:{line:1430,column:24},end:{line:1430,column:57}}],line:1429},"58":{loc:{start:{line:1475,column:4},end:{line:1485,column:5}},type:"if",locations:[{start:{line:1475,column:4},end:{line:1485,column:5}},{start:{line:1477,column:11},end:{line:1485,column:5}}],line:1475},"59":{loc:{start:{line:1475,column:8},end:{line:1475,column:30}},type:"binary-expr",locations:[{start:{line:1475,column:8},end:{line:1475,column:21}},{start:{line:1475,column:25},end:{line:1475,column:30}}],line:1475}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},b:{"0":[0,0,0,0,0,0,0,0,0,0,0],"1":[0,0,0,0,0,0,0,0,0,0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c243688ee8575fb8f8211667e888c43c2675f2d0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_24tv8o6xo1=function(){return actualCoverage;};}return actualCoverage;}cov_24tv8o6xo1();import{$e,$$e}from'../utils/templateUtils.js';import{jml,toStringTag}from'../vendor-imports.js';import dialogs from'../utils/dialogs.js';const dataViewMethods=(/** @type {const} */cov_24tv8o6xo1().s[0]++,['setInt8','setUint8','setInt16','setUint16','setInt32','setUint32','setFloat32','setFloat64','setBigInt64','setBigUint64']);const typedArrays=(/** @type {const} */cov_24tv8o6xo1().s[1]++,['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array']);/**
 * @param {TypedArray} typedArray
 * @returns {{min: number, max: number}}
 */cov_24tv8o6xo1().s[2]++;const getMinMaxForTypedArray=typedArray=>{cov_24tv8o6xo1().f[0]++;cov_24tv8o6xo1().s[3]++;switch(typedArray){case'Int8Array':cov_24tv8o6xo1().b[0][0]++;cov_24tv8o6xo1().s[4]++;return{min:-128,max:127};case'Uint8Array':cov_24tv8o6xo1().b[0][1]++;cov_24tv8o6xo1().s[5]++;return{min:0,max:255};case'Uint8ClampedArray':cov_24tv8o6xo1().b[0][2]++;cov_24tv8o6xo1().s[6]++;return{min:0,max:255};case'Int16Array':cov_24tv8o6xo1().b[0][3]++;cov_24tv8o6xo1().s[7]++;return{min:-32768,max:32767};case'Uint16Array':cov_24tv8o6xo1().b[0][4]++;cov_24tv8o6xo1().s[8]++;return{min:0,max:65535};case'Int32Array':cov_24tv8o6xo1().b[0][5]++;cov_24tv8o6xo1().s[9]++;return{min:-2147483648,max:2147483647};case'Uint32Array':cov_24tv8o6xo1().b[0][6]++;cov_24tv8o6xo1().s[10]++;return{min:0,max:4294967295};case'Float32Array':cov_24tv8o6xo1().b[0][7]++;cov_24tv8o6xo1().s[11]++;return{min:-3.4e38,max:3.4e38};case'Float64Array':cov_24tv8o6xo1().b[0][8]++;cov_24tv8o6xo1().s[12]++;// eslint-disable-next-line no-loss-of-precision -- Inevitable?
return{min:-1.8e308,max:1.8e308};case'BigInt64Array':cov_24tv8o6xo1().b[0][9]++;cov_24tv8o6xo1().s[13]++;return{min:-(2**63),max:2**63-1};case'BigUint64Array':cov_24tv8o6xo1().b[0][10]++;cov_24tv8o6xo1().s[14]++;return{min:0,max:2**64-1};/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected typed array type');}};/**
 * @typedef {"Int8Array"|"Uint8Array"|"Uint8ClampedArray"|
 *   "Int16Array"|"Uint16Array"|"Int32Array"|"Uint32Array"|
 *   "Float32Array"|"Float64Array"|"BigInt64Array"|
 *   "BigUint64Array"} TypedArray
 */ /**
 * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|
 *   Int16Array|Uint16Array|Int32Array|Uint32Array|
*   Float32Array|Float64Array|BigInt64Array|
*   BigUint64Array} TypedArrayInstance
 */ /**
 * @param {TypedArray} prop
 * @returns {Int8ArrayConstructor|Uint8ArrayConstructor|
 *   Uint8ClampedArrayConstructor|Int16ArrayConstructor|
 *   Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|
 *   Float32ArrayConstructor|Float64ArrayConstructor|
 *   BigInt64ArrayConstructor|BigUint64ArrayConstructor}
 */cov_24tv8o6xo1().s[15]++;const getTypedArray=prop=>{cov_24tv8o6xo1().f[1]++;cov_24tv8o6xo1().s[16]++;switch(prop){case'Int8Array':cov_24tv8o6xo1().b[1][0]++;cov_24tv8o6xo1().s[17]++;return Int8Array;case'Uint8Array':cov_24tv8o6xo1().b[1][1]++;cov_24tv8o6xo1().s[18]++;return Uint8Array;case'Uint8ClampedArray':cov_24tv8o6xo1().b[1][2]++;cov_24tv8o6xo1().s[19]++;return Uint8ClampedArray;case'Int16Array':cov_24tv8o6xo1().b[1][3]++;cov_24tv8o6xo1().s[20]++;return Int16Array;case'Uint16Array':cov_24tv8o6xo1().b[1][4]++;cov_24tv8o6xo1().s[21]++;return Uint16Array;case'Int32Array':cov_24tv8o6xo1().b[1][5]++;cov_24tv8o6xo1().s[22]++;return Int32Array;case'Uint32Array':cov_24tv8o6xo1().b[1][6]++;cov_24tv8o6xo1().s[23]++;return Uint32Array;case'Float32Array':cov_24tv8o6xo1().b[1][7]++;cov_24tv8o6xo1().s[24]++;return Float32Array;case'Float64Array':cov_24tv8o6xo1().b[1][8]++;cov_24tv8o6xo1().s[25]++;return Float64Array;case'BigInt64Array':cov_24tv8o6xo1().b[1][9]++;cov_24tv8o6xo1().s[26]++;return BigInt64Array;case'BigUint64Array':cov_24tv8o6xo1().b[1][10]++;cov_24tv8o6xo1().s[27]++;return BigUint64Array;/* istanbul ignore next -- Guard */default:/* istanbul ignore next -- Guard */throw new Error('Unexpected type');}};let idx=(cov_24tv8o6xo1().s[28]++,0);/**
 * @type {import('../types.js').SuperTypeObject}
 */const buffersourceType=(cov_24tv8o6xo1().s[29]++,{option:['Buffer source (ArrayBuffer, DataView, TypedArrays)'],childTypes:['arraybuffer','dataview','int8array','uint8array','uint8clampedarray','int16array','uint16array','int32array','uint32array','float32array','float64array','bigint64array','biguint64array'],stringRegex:/^(?<bufferSourceClass>ArrayBuffer|DataView|(?:Int8|Uint8|Uint8Clamped|Int16|Uint16|Int32|Uint32|Float32|Float64|BigInt64|BigUint64)Array)\((?<innerContent>.*)\)$/u,toValue(s,rootInfo){cov_24tv8o6xo1().f[2]++;const{groups:{bufferSourceClass/* istanbul ignore next -- Should always be found */}=(cov_24tv8o6xo1().b[2][0]++,{})}=(/** @type {RegExpMatchArray} */ /** @type {import('../types.js').RootInfo} */cov_24tv8o6xo1().s[30]++,rootInfo.match);const o=(cov_24tv8o6xo1().s[31]++,JSON.parse(s));const{byteLength,maxByteLength,byteOffset,dataViewByteOffset,dataViewByteLength,length}=(cov_24tv8o6xo1().s[32]++,o);// @ts-expect-error Ok
const buffer=(cov_24tv8o6xo1().s[33]++,new ArrayBuffer(byteLength,{maxByteLength}));let typedArray,TypedArray;cov_24tv8o6xo1().s[34]++;if((cov_24tv8o6xo1().b[4][0]++,bufferSourceClass.endsWith('Array'))||(cov_24tv8o6xo1().b[4][1]++,'typedArray'in o)){cov_24tv8o6xo1().b[3][0]++;cov_24tv8o6xo1().s[35]++;TypedArray=getTypedArray(/** @type {TypedArray} */(cov_24tv8o6xo1().b[5][0]++,o.typedArray)??(cov_24tv8o6xo1().b[5][1]++,bufferSourceClass));cov_24tv8o6xo1().s[36]++;typedArray=new TypedArray(buffer,byteOffset,length);cov_24tv8o6xo1().s[37]++;if('set'in o){cov_24tv8o6xo1().b[6][0]++;cov_24tv8o6xo1().s[38]++;o.set[0].forEach(/**
           * @param {string} s
           * @param {number} i
           * @returns {void}
           */(s,i)=>{cov_24tv8o6xo1().f[3]++;cov_24tv8o6xo1().s[39]++;if(typeof s==='string'){cov_24tv8o6xo1().b[7][0]++;cov_24tv8o6xo1().s[40]++;o.set[0][i]=BigInt(s);}else{cov_24tv8o6xo1().b[7][1]++;}});cov_24tv8o6xo1().s[41]++;typedArray.set(...(/**
           * @type {[
           *   array: Array<bigint> & Array<number>,
           *   offset?: number | undefined
           * ]}
           */o.set));}else{cov_24tv8o6xo1().b[6][1]++;}}else{cov_24tv8o6xo1().b[3][1]++;}/** @type {DataView|undefined} */let view;cov_24tv8o6xo1().s[42]++;if((cov_24tv8o6xo1().b[9][0]++,bufferSourceClass==='DataView')||(cov_24tv8o6xo1().b[9][1]++,dataViewMethods.some(method=>{cov_24tv8o6xo1().f[4]++;cov_24tv8o6xo1().s[43]++;return method in o;}))){cov_24tv8o6xo1().b[8][0]++;cov_24tv8o6xo1().s[44]++;view=new DataView(buffer,dataViewByteOffset,dataViewByteLength);cov_24tv8o6xo1().s[45]++;dataViewMethods.forEach(prop=>{cov_24tv8o6xo1().f[5]++;cov_24tv8o6xo1().s[46]++;o[prop]?.forEach(/**
           * @type {(info: [
           *   byteOffset: number,
           *   value: bigint|number,
           *   littleEndian?: boolean|undefined
           * ]) => void}
           */vals=>{cov_24tv8o6xo1().f[6]++;cov_24tv8o6xo1().s[47]++;if(typeof vals[1]==='string'){cov_24tv8o6xo1().b[10][0]++;cov_24tv8o6xo1().s[48]++;vals[1]=BigInt(vals[1]);}else{cov_24tv8o6xo1().b[10][1]++;}// @ts-expect-error It's ok
cov_24tv8o6xo1().s[49]++;view[prop](...vals);});});}else{cov_24tv8o6xo1().b[8][1]++;}cov_24tv8o6xo1().s[50]++;return{value:bufferSourceClass==='ArrayBuffer'?(cov_24tv8o6xo1().b[11][0]++,buffer):(cov_24tv8o6xo1().b[11][1]++,bufferSourceClass==='DataView'?(cov_24tv8o6xo1().b[12][0]++,view):(cov_24tv8o6xo1().b[12][1]++,typedArray))};},getInput({root}){cov_24tv8o6xo1().f[7]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[51]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[52]++;return byteLength;},setValue({root,value}){cov_24tv8o6xo1().f[8]++;const stringTag=(cov_24tv8o6xo1().s[53]++,toStringTag(value));cov_24tv8o6xo1().s[54]++;if((cov_24tv8o6xo1().b[14][0]++,stringTag==='ArrayBuffer')||(cov_24tv8o6xo1().b[14][1]++,stringTag==='DataView')){cov_24tv8o6xo1().b[13][0]++;cov_24tv8o6xo1().s[55]++;$e(root,`[value=${stringTag}].buffersource-returnType`)?.click();}else{cov_24tv8o6xo1().b[13][1]++;cov_24tv8o6xo1().s[56]++;$e(root,`[value=TypedArray].buffersource-returnType`)?.click();const typedArrays=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[57]++,$e(root,'.buffersource-typedArrays'));cov_24tv8o6xo1().s[58]++;typedArrays.value=stringTag;cov_24tv8o6xo1().s[59]++;typedArrays.dispatchEvent(new Event('change'));}const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[60]++,$e(root,'.byteLength'));cov_24tv8o6xo1().s[61]++;byteLength.$value=value;const buffer=(cov_24tv8o6xo1().s[62]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[15][0]++,value):(cov_24tv8o6xo1().b[15][1]++,value.buffer));cov_24tv8o6xo1().s[63]++;byteLength.value=buffer.byteLength;cov_24tv8o6xo1().s[64]++;byteLength.dispatchEvent(new Event('change'));const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[65]++,$e(root,'.maxByteLength'));cov_24tv8o6xo1().s[66]++;maxByteLength.value=buffer.maxByteLength;cov_24tv8o6xo1().s[67]++;maxByteLength.dispatchEvent(new Event('change'));cov_24tv8o6xo1().s[68]++;if(stringTag==='DataView'){cov_24tv8o6xo1().b[16][0]++;const dataViewByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[69]++,$e(root,'.dataViewByteLength'));cov_24tv8o6xo1().s[70]++;dataViewByteLength.value=value.byteLength;cov_24tv8o6xo1().s[71]++;dataViewByteLength.dispatchEvent(new Event('change'));const dataViewByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[72]++,$e(root,'.dataViewByteOffset'));cov_24tv8o6xo1().s[73]++;dataViewByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[74]++;dataViewByteOffset.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[16][1]++;cov_24tv8o6xo1().s[75]++;if(stringTag!=='ArrayBuffer'){cov_24tv8o6xo1().b[17][0]++;// TypedArray
const typedArrayByteOffset=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[76]++,$e(root,'.typedArrayByteOffset'));cov_24tv8o6xo1().s[77]++;typedArrayByteOffset.value=value.byteOffset;cov_24tv8o6xo1().s[78]++;typedArrayByteOffset.dispatchEvent(new Event('change'));const typedArrayLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[79]++,$e(root,'.typedArrayLength'));cov_24tv8o6xo1().s[80]++;typedArrayLength.value=value.length;cov_24tv8o6xo1().s[81]++;typedArrayLength.dispatchEvent(new Event('change'));}else{cov_24tv8o6xo1().b[17][1]++;}}},getValue({root}){cov_24tv8o6xo1().f[9]++;cov_24tv8o6xo1().s[82]++;return/** @type {HTMLInputElement & {$value: BufferSource}} */this.getInput({root}).$value;},viewUI({value}){cov_24tv8o6xo1().f[10]++;const stringTag=(cov_24tv8o6xo1().s[83]++,toStringTag(value));const buffer=(cov_24tv8o6xo1().s[84]++,stringTag==='ArrayBuffer'?(cov_24tv8o6xo1().b[18][0]++,value):(cov_24tv8o6xo1().b[18][1]++,value.buffer));cov_24tv8o6xo1().s[85]++;return['div',{dataset:{type:'buffersource'}},[['b',{class:'emphasis'},[stringTag]],['br'],['b',['Buffer byte length: ']],buffer.byteLength,['br'],['b',['Buffer max byte length: ']],buffer.maxByteLength,...(stringTag==='DataView'?(cov_24tv8o6xo1().b[19][0]++,[['br'],['b',['Data View byte length: ']],value.byteLength,['br'],['b',['Data View byte offset: ']],value.byteOffset]):(cov_24tv8o6xo1().b[19][1]++,[''])),...((cov_24tv8o6xo1().b[21][0]++,stringTag!=='DataView')&&(cov_24tv8o6xo1().b[21][1]++,stringTag!=='ArrayBuffer')// TypedArray
?(cov_24tv8o6xo1().b[20][0]++,[['br'],['b',['Typed Array byte offset: ']],value.byteOffset,['br'],['b',['Typed Array length: ']],value.length]):(cov_24tv8o6xo1().b[20][1]++,[''])),['br'],['button',{class:'buffersource-viewData',$on:{async click(e){cov_24tv8o6xo1().f[11]++;cov_24tv8o6xo1().s[86]++;e.preventDefault();const dialog=(cov_24tv8o6xo1().s[87]++,await dialogs.makeCancelDialog({// @ts-expect-error TS bug
children:(/** @type {import('jamilih').JamilihChildren} */[['select',{class:'buffersource-typedArrays-view','aria-label':'Typed Arrays',$on:{change(){cov_24tv8o6xo1().f[12]++;const typedArrayVal=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[88]++,this.value);const TypedArray=(cov_24tv8o6xo1().s[89]++,getTypedArray(/** @type {TypedArray} */typedArrayVal));const typedArray=(cov_24tv8o6xo1().s[90]++,new TypedArray(buffer));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[91]++,$e(/** @type {HTMLElement} */this.parentElement,'.typedArrayArea'));cov_24tv8o6xo1().s[92]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[93]++;typedArrayArea.append(...Array.from({length:typedArray.length},(_v,key)=>{cov_24tv8o6xo1().f[13]++;cov_24tv8o6xo1().s[94]++;return jml('span',[['b',[key]],' ',['span',[typedArray[key]?(cov_24tv8o6xo1().b[22][0]++,String(typedArray[key])):(cov_24tv8o6xo1().b[22][1]++,'0')]],' ']);}));}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[14]++;cov_24tv8o6xo1().s[95]++;return['option',{selected:stringTag===typedArray?(cov_24tv8o6xo1().b[23][0]++,true):(cov_24tv8o6xo1().b[23][1]++,undefined)},[typedArray]];})],['div',{class:'typedArrayArea'}]])}));/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[96]++;$e(dialog,'.buffersource-typedArrays-view').dispatchEvent(new Event('change'));// Todo: We could also add `DataView` get methods here
//        (and length/byte offset for the typed array) if
//        there is a demand
}}},['View data']]]];},editUI({typeNamespace,value}){cov_24tv8o6xo1().f[15]++;cov_24tv8o6xo1().s[97]++;idx++;/**
     * @typedef {() => void} BuildInstances
     */const div=(cov_24tv8o6xo1().s[98]++,jml('div',{dataset:{type:'buffersource'}},[['fieldset',{class:'returnType',$on:{change(){cov_24tv8o6xo1().f[16]++;cov_24tv8o6xo1().s[99]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.$buildInstances();}},$custom:{/** @type {BuildInstances} */$buildInstances(){cov_24tv8o6xo1().f[17]++;const that=(/**
            * @type {HTMLFieldSetElement & {
            *   $buildInstances: BuildInstances
            * }}
            */cov_24tv8o6xo1().s[100]++,this);const ancestor=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[101]++,that.parentElement);const{value}=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[102]++,$e(that,`[name=${typeNamespace}-buffersource-returnType-${idx}]`+`:checked`));const byteLength=(/**
               * @type {HTMLInputElement & {
               *   $value: BufferSource,
               *   $dataView: DataView,
               *   $typedArray: TypedArrayInstance
               * }}
               */cov_24tv8o6xo1().s[103]++,$e(ancestor,'.byteLength'));const byteLengthVal=(cov_24tv8o6xo1().s[104]++,Number.parseInt(byteLength.value));const maxByteLength=(cov_24tv8o6xo1().s[105]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.maxByteLength').value));const buffer=(cov_24tv8o6xo1().s[106]++,new ArrayBuffer(// @ts-expect-error New ArrayBuffer argument
byteLengthVal,maxByteLength?(cov_24tv8o6xo1().b[24][0]++,{maxByteLength}):(cov_24tv8o6xo1().b[24][1]++,undefined)));const dataViewByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[107]++,$e(ancestor,'.dataViewByteOffset').value);const dataViewByteOffset=(cov_24tv8o6xo1().s[108]++,dataViewByteOffsetVal?(cov_24tv8o6xo1().b[25][0]++,Number.parseInt(dataViewByteOffsetVal)):(cov_24tv8o6xo1().b[25][1]++,0));const dataViewByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[109]++,$e(ancestor,'.dataViewByteLength').value);const dataViewByteLength=(cov_24tv8o6xo1().s[110]++,dataViewByteLengthVal?(cov_24tv8o6xo1().b[26][0]++,Number.parseInt(dataViewByteLengthVal)):(cov_24tv8o6xo1().b[26][1]++,undefined));const dataView=(cov_24tv8o6xo1().s[111]++,new DataView(buffer,dataViewByteOffset,dataViewByteLength));const{value:typedArrayValue}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[112]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[113]++,getTypedArray(/** @type {TypedArray} */typedArrayValue));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[114]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[115]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[27][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[27][1]++,0));const typedArrayLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[116]++,$e(ancestor,'.typedArrayLength').value);const typedArrayLength=(cov_24tv8o6xo1().s[117]++,typedArrayLengthVal?(cov_24tv8o6xo1().b[28][0]++,Number.parseInt(typedArrayLengthVal)):(cov_24tv8o6xo1().b[28][1]++,byteLengthVal));const typedArray=(cov_24tv8o6xo1().s[118]++,new TypedArray(buffer,typedArrayByteOffset,typedArrayLength));cov_24tv8o6xo1().s[119]++;byteLength.$dataView=dataView;cov_24tv8o6xo1().s[120]++;byteLength.$typedArray=typedArray;const typedArrayValues=(cov_24tv8o6xo1().s[121]++,$$e(ancestor,'.typedArrayArea .typedArrayValue').map(input=>{cov_24tv8o6xo1().f[18]++;cov_24tv8o6xo1().s[122]++;// Don't check dataset, as may be changing to BigInt now
return TypedArray.name.startsWith('Big')?(cov_24tv8o6xo1().b[29][0]++,BigInt(/** @type {HTMLInputElement} */input.value)):(cov_24tv8o6xo1().b[29][1]++,Number(/** @type {HTMLInputElement} */input.value));}));// @ts-expect-error Ok
cov_24tv8o6xo1().s[123]++;byteLength.$typedArray.set(typedArrayValues,0);cov_24tv8o6xo1().s[124]++;switch(value){case'ArrayBuffer':cov_24tv8o6xo1().b[30][0]++;cov_24tv8o6xo1().s[125]++;byteLength.$value=buffer;cov_24tv8o6xo1().s[126]++;break;case'DataView':cov_24tv8o6xo1().b[30][1]++;{cov_24tv8o6xo1().s[127]++;byteLength.$value=dataView;cov_24tv8o6xo1().s[128]++;break;}default:cov_24tv8o6xo1().b[30][2]++;cov_24tv8o6xo1().s[129]++;// 'TypedArray'
byteLength.$value=typedArray;cov_24tv8o6xo1().s[130]++;break;}}}},[['legend',['Return type']],['label',{$on:{click(){cov_24tv8o6xo1().f[19]++;cov_24tv8o6xo1().s[131]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[132]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType '+'buffersource-returnType-arraybuffer',name:`${typeNamespace}-buffersource-returnType-${idx}`,checked:true,value:'ArrayBuffer'// checked: toStringTag(value) !== ''
}],'ArrayBuffer']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[20]++;cov_24tv8o6xo1().s[133]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=true;/** @type {HTMLElement} */cov_24tv8o6xo1().s[134]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=false;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-dataview',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'DataView'// checked: toStringTag(value) !== ''
}],'DataView']],' ',['label',{$on:{click(){cov_24tv8o6xo1().f[21]++;cov_24tv8o6xo1().s[135]++;/** @type {HTMLElement} */$e(/** @type {HTMLElement} */this.parentElement,'.buffersource-typedArrays').hidden=false;/** @type {HTMLElement} */cov_24tv8o6xo1().s[136]++;$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.buffersource-typedArrays-init').hidden=true;}}},[['input',{type:'radio',class:'buffersource-returnType buffersource-returnType-typedarray',name:`${typeNamespace}-buffersource-returnType-${idx}`,value:'TypedArray'// checked: toStringTag(value) !== ''
}],'Typed Array']],' ',['select',{hidden:true,class:'buffersource-typedArrays','aria-label':'Typed Arrays',$on:{change(e){cov_24tv8o6xo1().f[22]++;const that=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[137]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[138]++,that.parentElement?.parentElement);const select=(/**
                 * @type {HTMLSelectElement & {
                 *   $setMinsAndMaxes: SetMinsAndMaxes,
                 *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                 * }}
                 */cov_24tv8o6xo1().s[139]++,$e(ancestor,'.buffersource-typedArrays-init'));// Update to reflect current state changes if later revealing
cov_24tv8o6xo1().s[140]++;select.value=/** @type {HTMLSelectElement} */this.value;const typedArrayLength=(/**
                 * @type {HTMLInputElement & {
                 *   $checkBufferBounds: CheckBufferBounds
                 * }}
                 */cov_24tv8o6xo1().s[141]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[142]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[31][0]++;cov_24tv8o6xo1().s[143]++;return;}else{cov_24tv8o6xo1().b[31][1]++;}cov_24tv8o6xo1().s[144]++;select.$setMinsAndMaxes(/** @type {TypedArray} */ /** @type {HTMLSelectElement} */this.value);cov_24tv8o6xo1().s[145]++;select.$checkTypedArrayByteLength(e);const typedArrayByteOffset=(cov_24tv8o6xo1().s[146]++,$e(/** @type {HTMLElement} */this?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[147]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[23]++;cov_24tv8o6xo1().s[148]++;return['option',[typedArray]];})]]],['fieldset',{$on:{change(){cov_24tv8o6xo1().f[24]++;cov_24tv8o6xo1().s[149]++;/**
             * @type {HTMLFieldSetElement & {
             *   $buildInstances: BuildInstances
             * }}
             */this.previousElementSibling.$buildInstances();}}},[['legend',['Construction options']],['fieldset',[['legend',['ArrayBuffer']],['label',['Byte length ',['input',{class:'byteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{$value:(cov_24tv8o6xo1().b[32][0]++,value)??(cov_24tv8o6xo1().b[32][1]++,new ArrayBuffer(0))},$on:{change(e){cov_24tv8o6xo1().f[25]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[150]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[151]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[152]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[153]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[33][0]++;cov_24tv8o6xo1().s[154]++;return;}else{cov_24tv8o6xo1().b[33][1]++;}const maxByteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[155]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.maxByteLength'));const val=(cov_24tv8o6xo1().s[156]++,that.value);cov_24tv8o6xo1().s[157]++;if(Number.parseInt(val)>Number.MAX_SAFE_INTEGER){cov_24tv8o6xo1().b[34][0]++;cov_24tv8o6xo1().s[158]++;that.setCustomValidity('The ArrayBuffer length exceeds the maximum '+'allowable size');cov_24tv8o6xo1().s[159]++;e.stopPropagation();cov_24tv8o6xo1().s[160]++;that.reportValidity();cov_24tv8o6xo1().s[161]++;return;}else{cov_24tv8o6xo1().b[34][1]++;}cov_24tv8o6xo1().s[162]++;that.setCustomValidity('');cov_24tv8o6xo1().s[163]++;that.reportValidity();cov_24tv8o6xo1().s[164]++;if(Number.parseInt(val)>Number.parseInt(maxByteLength.value)){cov_24tv8o6xo1().b[35][0]++;cov_24tv8o6xo1().s[165]++;maxByteLength.value=val;}else{cov_24tv8o6xo1().b[35][1]++;}const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[166]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[167]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);/**
                   * @type {HTMLSelectElement & {
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */cov_24tv8o6xo1().s[168]++;$e(/** @type {HTMLElement} */greatGrandparent.parentElement,'.buffersource-typedArrays-init').$checkTypedArrayByteLength(e);}}}]]],' ',['label',['Max byte length ',['input',{class:'maxByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[26]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[169]++,this);const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[170]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const val=(cov_24tv8o6xo1().s[171]++,that.value);cov_24tv8o6xo1().s[172]++;if(Number.parseInt(val)<Number.parseInt(byteLength.value)){cov_24tv8o6xo1().b[36][0]++;cov_24tv8o6xo1().s[173]++;// byteLength.value = val;
that.setCustomValidity('The max value cannot be less than the byte length');cov_24tv8o6xo1().s[174]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[36][1]++;cov_24tv8o6xo1().s[175]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[176]++;that.reportValidity();}}}]]]]],['fieldset',[['legend',['DataView']],['label',['Byte length ',['input',{class:'dataViewByteLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
                 * @typedef {(e: Event) => void} CheckDataViewByteLength
                 */ /** @type {CheckDataViewByteLength} */$checkDataViewByteLength(e){cov_24tv8o6xo1().f[27]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkDataViewByteLength: CheckDataViewByteLength
                  * }}
                  */cov_24tv8o6xo1().s[177]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[178]++,that.parentElement?.parentElement?.parentElement);const byteOffset=(cov_24tv8o6xo1().s[179]++,(cov_24tv8o6xo1().b[37][0]++,Number.parseInt(/** @type {HTMLInputElement} */$e(greatGrandparent,'.dataViewByteOffset').value))||(cov_24tv8o6xo1().b[37][1]++,0));const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[180]++,$e(greatGrandparent,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[181]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[38][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[38][1]++,0));const byteLength=(cov_24tv8o6xo1().s[182]++,that.value?(cov_24tv8o6xo1().b[39][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[39][1]++,bufferByteLength));cov_24tv8o6xo1().s[183]++;if(byteOffset+byteLength>bufferByteLength){cov_24tv8o6xo1().b[40][0]++;cov_24tv8o6xo1().s[184]++;that.setCustomValidity('The DataView byte length and offset exceed '+'the buffer\'s byte length');cov_24tv8o6xo1().s[185]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[40][1]++;cov_24tv8o6xo1().s[186]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[187]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[28]++;cov_24tv8o6xo1().s[188]++;/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */this.$checkDataViewByteLength(e);}}}]]],' ',['label',['Byte offset ',['input',{class:'dataViewByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$on:{change(e){cov_24tv8o6xo1().f[29]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[189]++,this);const greatGrandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[190]++,that.parentElement?.parentElement?.parentElement);/**
                   * @type {HTMLInputElement & {
                   *   $checkDataViewByteLength: CheckDataViewByteLength
                   * }}
                   */cov_24tv8o6xo1().s[191]++;$e(greatGrandparent,'.dataViewByteLength').$checkDataViewByteLength(e);}}}]]]]],['fieldset',[['legend',['Typed array']],['label',['Byte offset ',['input',{class:'typedArrayByteOffset',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,max:2**53-1,$custom:{/**
                 * @typedef {(e: Event) => void} CheckByteOffsetMultiple
                 */ /** @type {CheckByteOffsetMultiple} */$checkByteOffsetMultiple(e){cov_24tv8o6xo1().f[30]++;const that=(/**
                  * @type {HTMLInputElement & {
                  *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                  * }}
                  */cov_24tv8o6xo1().s[192]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[193]++,that.parentElement?.parentElement?.parentElement?.parentElement);const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[194]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[195]++,getTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[196]++;if(Number.parseInt(that.value)%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[41][0]++;cov_24tv8o6xo1().s[197]++;that.setCustomValidity('Byte offset must be a multiple of the typed '+`array's bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[198]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[41][1]++;cov_24tv8o6xo1().s[199]++;that.setCustomValidity('');}cov_24tv8o6xo1().s[200]++;that.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[31]++;const that=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[201]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[202]++,that.parentElement?.parentElement?.parentElement?.parentElement);const typedArrayLength=(/**
                     * @type {HTMLInputElement & {
                     *   $checkBufferBounds: CheckBufferBounds
                     * }}
                     */cov_24tv8o6xo1().s[203]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[204]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[42][0]++;cov_24tv8o6xo1().s[205]++;return;}else{cov_24tv8o6xo1().b[42][1]++;}/**
                   * @type {HTMLInputElement & {
                   *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
                   * }}
                   */cov_24tv8o6xo1().s[206]++;this.$checkByteOffsetMultiple(e);}}}]]]// ' ',
// ['label', [
//   'Length ',
//   ['input', {
//     class: 'typedArrayLength',
//     type: 'number', step: '1', size: '4', pattern: '\\d+',
//     min: 0
//   }]
// ]]
]]]],['fieldset',[['legend',['Typed Array initialization (optional)']],['select',{class:'buffersource-typedArrays-init','aria-label':'Typed Arrays',$custom:{/**
             * @callback SetMinsAndMaxes
             * @param {TypedArray} typedArray
             * @returns {void}
             */ /** @type {SetMinsAndMaxes} */$setMinsAndMaxes(typedArray){cov_24tv8o6xo1().f[32]++;const{min,max}=(cov_24tv8o6xo1().s[207]++,getMinMaxForTypedArray(typedArray));/** @type {HTMLInputElement[]} */cov_24tv8o6xo1().s[208]++;$$e(/** @type {HTMLElement} */ /**
                   * @type {HTMLSelectElement & {
                   *   $setMinsAndMaxes: SetMinsAndMaxes,
                   *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                   * }}
                   */this.parentElement,'.typedArrayValue').forEach(typedArrayValue=>{cov_24tv8o6xo1().f[33]++;cov_24tv8o6xo1().s[209]++;typedArrayValue.className='typedArrayValue typedArray-'+typedArray;cov_24tv8o6xo1().s[210]++;typedArrayValue.min=String(min);cov_24tv8o6xo1().s[211]++;typedArrayValue.max=String(max);});},/**
             * @typedef {(e: Event) => void} CheckTypedArrayByteLength
             */ /** @type {CheckTypedArrayByteLength} */$checkTypedArrayByteLength(e){cov_24tv8o6xo1().f[34]++;const that=(/**
              * @type {HTMLSelectElement & {
              *   $setMinsAndMaxes: SetMinsAndMaxes,
              *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
              * }}
              */cov_24tv8o6xo1().s[212]++,this);const TypedArray=(cov_24tv8o6xo1().s[213]++,getTypedArray(/** @type {TypedArray} */that.value));const byteLength=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[214]++,$e(/** @type {HTMLElement} */that.parentElement?.parentElement,'.byteLength'));const arrayBufferLength=(cov_24tv8o6xo1().s[215]++,byteLength.value?(cov_24tv8o6xo1().b[43][0]++,Number.parseInt(byteLength.value)):(cov_24tv8o6xo1().b[43][1]++,0));cov_24tv8o6xo1().s[216]++;if(arrayBufferLength%TypedArray.BYTES_PER_ELEMENT){cov_24tv8o6xo1().b[44][0]++;cov_24tv8o6xo1().s[217]++;byteLength.setCustomValidity('Array buffer must be a multiple of the typed array\'s '+`bytes-per-element size (${TypedArray.BYTES_PER_ELEMENT})`);cov_24tv8o6xo1().s[218]++;e.stopPropagation();}else{cov_24tv8o6xo1().b[44][1]++;cov_24tv8o6xo1().s[219]++;byteLength.setCustomValidity('');}cov_24tv8o6xo1().s[220]++;byteLength.reportValidity();}},$on:{change(e){cov_24tv8o6xo1().f[35]++;const that=(/**
                * @type {HTMLSelectElement & {
                *   $setMinsAndMaxes: SetMinsAndMaxes,
                *   $checkTypedArrayByteLength: CheckTypedArrayByteLength
                * }}
                */cov_24tv8o6xo1().s[221]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[222]++,that.parentElement?.parentElement?.parentElement);// Update to reflect current state changes if later revealing
/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[223]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.buffersource-typedArrays').value=that.value;const typedArrayLength=(/**
               * @type {HTMLInputElement & {
               *   $checkBufferBounds: CheckBufferBounds
               * }}
               */cov_24tv8o6xo1().s[224]++,$e(ancestor,'.typedArrayLength'));cov_24tv8o6xo1().s[225]++;if(!typedArrayLength.$checkBufferBounds(e)){cov_24tv8o6xo1().b[45][0]++;cov_24tv8o6xo1().s[226]++;return;}else{cov_24tv8o6xo1().b[45][1]++;}cov_24tv8o6xo1().s[227]++;that.$checkTypedArrayByteLength(e);cov_24tv8o6xo1().s[228]++;that.$setMinsAndMaxes(/** @type {TypedArray} */that.value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[229]++,$e(/** @type {HTMLElement} */that?.parentElement?.parentElement,'.typedArrayByteOffset'));/**
               * @type {HTMLInputElement & {
               *   $checkByteOffsetMultiple: CheckByteOffsetMultiple
               * }}
               */cov_24tv8o6xo1().s[230]++;typedArrayByteOffset.$checkByteOffsetMultiple(e);/**
               * @type {HTMLFieldSetElement & {
               *   $buildInstances: BuildInstances
               * }}
               */cov_24tv8o6xo1().s[231]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement,'.returnType').$buildInstances();}}},typedArrays.map(typedArray=>{cov_24tv8o6xo1().f[36]++;cov_24tv8o6xo1().s[232]++;return['option',[typedArray]];})],' ',['label',['Array length: ',['input',{class:'typedArrayLength',type:'number',step:'1',size:'4',pattern:String.raw`\d+`,min:0,$custom:{/**
               * When creating a view from a buffer, the bounds are outside
               * the buffer. In other words, `byteOffset + length *
               * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength`.
               * @typedef {(e: Event) => boolean} CheckBufferBounds
               */ /** @type {CheckBufferBounds} */$checkBufferBounds(e){cov_24tv8o6xo1().f[37]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[233]++,this);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[234]++,that.parentElement?.parentElement?.parentElement);const bufferByteLengthVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[235]++,$e(ancestor,'.byteLength').value);const bufferByteLength=(cov_24tv8o6xo1().s[236]++,bufferByteLengthVal?(cov_24tv8o6xo1().b[46][0]++,Number.parseInt(bufferByteLengthVal)):(cov_24tv8o6xo1().b[46][1]++,0));const length=(cov_24tv8o6xo1().s[237]++,that.value?(cov_24tv8o6xo1().b[47][0]++,Number.parseInt(that.value)):(cov_24tv8o6xo1().b[47][1]++,bufferByteLength));const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[238]++,$e(ancestor,'.buffersource-typedArrays-init'));const TypedArray=(cov_24tv8o6xo1().s[239]++,getTypedArray(/** @type {TypedArray} */value));const typedArrayByteOffsetVal=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[240]++,$e(ancestor,'.typedArrayByteOffset').value);const typedArrayByteOffset=(cov_24tv8o6xo1().s[241]++,typedArrayByteOffsetVal?(cov_24tv8o6xo1().b[48][0]++,Number.parseInt(typedArrayByteOffsetVal)):(cov_24tv8o6xo1().b[48][1]++,0));cov_24tv8o6xo1().s[242]++;if(typedArrayByteOffset+length*TypedArray.BYTES_PER_ELEMENT>bufferByteLength){cov_24tv8o6xo1().b[49][0]++;cov_24tv8o6xo1().s[243]++;that.setCustomValidity('The byte offset and the length times bytes per element '+'is greater than the buffer length');cov_24tv8o6xo1().s[244]++;e.stopPropagation();cov_24tv8o6xo1().s[245]++;that.reportValidity();cov_24tv8o6xo1().s[246]++;return false;}else{cov_24tv8o6xo1().b[49][1]++;}cov_24tv8o6xo1().s[247]++;that.setCustomValidity('');cov_24tv8o6xo1().s[248]++;that.reportValidity();cov_24tv8o6xo1().s[249]++;return true;},/**
               * @typedef {() => void} BuildTypedArray
               */ /** @type {BuildTypedArray} */$buildTypedArray(){cov_24tv8o6xo1().f[38]++;const that=(/**
                * @type {HTMLInputElement & {
                *   $checkBufferBounds: CheckBufferBounds,
                *   $buildTypedArray: BuildTypedArray
                * }}
                */cov_24tv8o6xo1().s[250]++,this);const length=(cov_24tv8o6xo1().s[251]++,Number.parseInt(that.value));const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[252]++,that.parentElement?.parentElement);const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[253]++,that.parentElement?.parentElement?.parentElement);const bufferByteLength=(/**
                   * @type {HTMLInputElement & {
                   *   $typedArray: TypedArrayInstance
                   * }}
                   */cov_24tv8o6xo1().s[254]++,$e(ancestor,'.byteLength'));const typedArrayArea=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[255]++,$e(grandparent,'.typedArrayArea'));cov_24tv8o6xo1().s[256]++;typedArrayArea.addEventListener('change',e=>{cov_24tv8o6xo1().f[39]++;const input=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[257]++,e.target);cov_24tv8o6xo1().s[258]++;bufferByteLength.$typedArray.set([// @ts-expect-error Ok
input.dataset.bigint==='true'?(cov_24tv8o6xo1().b[50][0]++,BigInt(input.value)):(cov_24tv8o6xo1().b[50][1]++,Number(input.value))],Number.parseInt(/** @type {string} */input.dataset.key));});const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[259]++,$e(grandparent,'.buffersource-typedArrays-init'));const{min,max}=(cov_24tv8o6xo1().s[260]++,getMinMaxForTypedArray(/** @type {TypedArray} */value));cov_24tv8o6xo1().s[261]++;typedArrayArea.textContent='';cov_24tv8o6xo1().s[262]++;typedArrayArea.append(...Array.from({length},(_v,key)=>{cov_24tv8o6xo1().f[40]++;cov_24tv8o6xo1().s[263]++;return jml('label',[key,' ',['input',{class:'typedArrayValue typedArray-'+value,dataset:{key,bigint:String(value.startsWith('BigInt'))},type:'number',step:'1',pattern:value.startsWith('Float')?(cov_24tv8o6xo1().b[51][0]++,String.raw`\d+(?:\.\d+)?`):(cov_24tv8o6xo1().b[51][1]++,String.raw`\d+`),value:bufferByteLength.$typedArray[key]?(cov_24tv8o6xo1().b[52][0]++,String(bufferByteLength.$typedArray[key])):(cov_24tv8o6xo1().b[52][1]++,'0'),min,max}],' '// !key || key % 9 ? ' ' : ['br']
]);}));}},$on:{change(e){cov_24tv8o6xo1().f[41]++;const that=(/**
                   * @type {HTMLInputElement & {
                   *   $checkBufferBounds: CheckBufferBounds,
                   *   $buildTypedArray: BuildTypedArray
                   * }}
                   */cov_24tv8o6xo1().s[264]++,this);const grandparent=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[265]++,this.parentElement?.parentElement);cov_24tv8o6xo1().s[266]++;if(!that.$checkBufferBounds(e)){cov_24tv8o6xo1().b[53][0]++;cov_24tv8o6xo1().s[267]++;return;}else{cov_24tv8o6xo1().b[53][1]++;}const{value}=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[268]++,$e(grandparent,'.buffersource-typedArrays-init'));const length=(cov_24tv8o6xo1().s[269]++,Number.parseInt(that.value));cov_24tv8o6xo1().s[270]++;try{const TypedArray=(cov_24tv8o6xo1().s[271]++,getTypedArray(/** @type {TypedArray} */value));// eslint-disable-next-line no-new -- Testing
cov_24tv8o6xo1().s[272]++;new TypedArray(length);}catch{cov_24tv8o6xo1().s[273]++;that.setCustomValidity('Typed Array length is too long');cov_24tv8o6xo1().s[274]++;e.stopPropagation();cov_24tv8o6xo1().s[275]++;that.reportValidity();cov_24tv8o6xo1().s[276]++;return;}cov_24tv8o6xo1().s[277]++;that.setCustomValidity('');cov_24tv8o6xo1().s[278]++;that.reportValidity();/**
                 * @type {HTMLFieldSetElement & {
                 *   $buildInstances: BuildInstances
                 * }}
                 */cov_24tv8o6xo1().s[279]++;$e(/** @type {HTMLElement} */this.parentElement?.parentElement?.parentElement,'.returnType').$buildInstances();cov_24tv8o6xo1().s[280]++;that.$buildTypedArray();}}}],['div',{class:'typedArrayArea'}]]]]],['fieldset',[['legend',['DataView initialization (optional)']],['select',{class:'dataViewMethod','aria-label':'Data View methods',$on:{change(){cov_24tv8o6xo1().f[42]++;const dataViewArea=(/** @type {HTMLDivElement} */cov_24tv8o6xo1().s[281]++,$e(/** @type {HTMLElement} */this.parentElement,'.dataViewArea'));const val=(/** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[282]++,this.value);const typedArray=(/** @type {TypedArray} */cov_24tv8o6xo1().s[283]++,val.slice(3)+'Array');cov_24tv8o6xo1().s[284]++;dataViewArea.textContent='';cov_24tv8o6xo1().s[285]++;dataViewArea.append(jml('label',['Byte offset ',['input',{type:'number',class:'dataViewSetByteOffset',step:'1',size:'4',pattern:String.raw`\d+`}]]),' ',jml('label',['Value ',['input',{type:'number',step:'1',size:'4',pattern:String.raw`\d+`,class:'typedArrayValue typedArray-'+typedArray,...getMinMaxForTypedArray(typedArray)}]]),(cov_24tv8o6xo1().b[55][0]++,val==='setInt8')||(cov_24tv8o6xo1().b[55][1]++,val==='setUint8')?(cov_24tv8o6xo1().b[54][0]++,''):(cov_24tv8o6xo1().b[54][1]++,jml('label',[['input',{class:'littleEndian',type:'checkbox'}],'Little endian'])),' ',jml('button',{$on:{click(e){cov_24tv8o6xo1().f[43]++;cov_24tv8o6xo1().s[286]++;e.preventDefault();const ancestor=(/** @type {HTMLElement} */cov_24tv8o6xo1().s[287]++,this.parentElement);const dataViewMethod=(/** @type {dataViewMethods[number]} */ /** @type {HTMLSelectElement} */cov_24tv8o6xo1().s[288]++,ancestor.previousElementSibling?.value);const dataViewSetByteOffset=(cov_24tv8o6xo1().s[289]++,Number.parseInt(/** @type {HTMLInputElement} */$e(ancestor,'.dataViewSetByteOffset').value));const typedArrayValue=(/** @type {HTMLInputElement} */cov_24tv8o6xo1().s[290]++,$e(ancestor,'.typedArrayValue').value);const littleEndian=(/** @type {HTMLInputElement|null} */cov_24tv8o6xo1().s[291]++,$e(ancestor,'.littleEndian')?.checked);const byteLength=(/**
                         * @type {HTMLInputElement & {
                         *   $dataView: DataView,
                         * }}
                         */cov_24tv8o6xo1().s[292]++,$e(/** @type {HTMLElement} */ancestor?.parentElement?.parentElement,'.byteLength'));cov_24tv8o6xo1().s[293]++;if((cov_24tv8o6xo1().b[57][0]++,dataViewMethod==='setBigInt64')||(cov_24tv8o6xo1().b[57][1]++,dataViewMethod==='setBigUint64')){cov_24tv8o6xo1().b[56][0]++;cov_24tv8o6xo1().s[294]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,BigInt(typedArrayValue),littleEndian);}else{cov_24tv8o6xo1().b[56][1]++;cov_24tv8o6xo1().s[295]++;byteLength.$dataView[dataViewMethod](dataViewSetByteOffset,Number(typedArrayValue),littleEndian);}const typedArrayLength=(/**
                         * @type {HTMLInputElement & {
                         *   $buildTypedArray: BuildTypedArray
                         * }}
                         */cov_24tv8o6xo1().s[296]++,$e(/** @type {HTMLElement} */ancestor.parentElement?.parentElement,'.typedArrayLength'));cov_24tv8o6xo1().s[297]++;typedArrayLength.$buildTypedArray();}}},['Set']));}}},[['option',{value:''},['(Select a data view method)']],...dataViewMethods.map(dataViewMethod=>{cov_24tv8o6xo1().f[44]++;cov_24tv8o6xo1().s[298]++;return/** @type {import('jamilih').JamilihArray} */['option',[dataViewMethod]];})]],' ',['div',{class:'dataViewArea'}]]]]));cov_24tv8o6xo1().s[299]++;if((cov_24tv8o6xo1().b[59][0]++,this.setValue)&&(cov_24tv8o6xo1().b[59][1]++,value)){cov_24tv8o6xo1().b[58][0]++;cov_24tv8o6xo1().s[300]++;this.setValue({root:div,value});}else{cov_24tv8o6xo1().b[58][1]++;const byteLength=(/**
       * @type {HTMLInputElement & {
       *   $value: BufferSource
       * }}
       */cov_24tv8o6xo1().s[301]++,$e(div,'.byteLength'));cov_24tv8o6xo1().s[302]++;byteLength.$value=new ArrayBuffer(0);}cov_24tv8o6xo1().s[303]++;return[div];}});export default buffersourceType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,