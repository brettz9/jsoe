function cov_132oqssb06(){var path="/Users/brett/jsoe/src/fundamentalTypes/functionType.js";var hash="f746a8b8f97fa27142e0c4139abf97c65cc75547";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/functionType.js",statementMap:{"0":{start:{line:5,column:20},end:{line:5,column:33}},"1":{start:{line:9,column:2},end:{line:9,column:72}},"2":{start:{line:19,column:20},end:{line:85,column:1}},"3":{start:{line:22,column:2},end:{line:27,column:6}},"4":{start:{line:30,column:4},end:{line:30,column:31}},"5":{start:{line:31,column:2},end:{line:37,column:5}},"6":{start:{line:32,column:4},end:{line:36,column:6}},"7":{start:{line:39,column:2},end:{line:41,column:3}},"8":{start:{line:40,column:4},end:{line:40,column:11}},"9":{start:{line:46,column:20},end:{line:67,column:3}},"10":{start:{line:47,column:4},end:{line:49,column:5}},"11":{start:{line:48,column:6},end:{line:48,column:13}},"12":{start:{line:50,column:44},end:{line:52,column:31}},"13":{start:{line:53,column:4},end:{line:66,column:5}},"14":{start:{line:54,column:61},end:{line:56,column:20}},"15":{start:{line:59,column:6},end:{line:65,column:9}},"16":{start:{line:60,column:8},end:{line:64,column:10}},"17":{start:{line:69,column:19},end:{line:80,column:4}},"18":{start:{line:70,column:4},end:{line:79,column:5}},"19":{start:{line:71,column:6},end:{line:78,column:7}},"20":{start:{line:72,column:8},end:{line:74,column:9}},"21":{start:{line:73,column:10},end:{line:73,column:26}},"22":{start:{line:75,column:8},end:{line:77,column:9}},"23":{start:{line:76,column:10},end:{line:76,column:26}},"24":{start:{line:81,column:2},end:{line:83,column:5}},"25":{start:{line:84,column:2},end:{line:84,column:34}},"26":{start:{line:94,column:33},end:{line:119,column:1}},"27":{start:{line:95,column:18},end:{line:95,column:30}},"28":{start:{line:96,column:22},end:{line:100,column:6}},"29":{start:{line:101,column:15},end:{line:103,column:10}},"30":{start:{line:105,column:65},end:{line:110,column:14}},"31":{start:{line:112,column:59},end:{line:116,column:32}},"32":{start:{line:116,column:20},end:{line:116,column:31}},"33":{start:{line:118,column:2},end:{line:118,column:22}},"34":{start:{line:128,column:28},end:{line:161,column:1}},"35":{start:{line:129,column:23},end:{line:129,column:54}},"36":{start:{line:132,column:2},end:{line:160,column:5}},"37":{start:{line:134,column:6},end:{line:134,column:44}},"38":{start:{line:137,column:61},end:{line:137,column:76}},"39":{start:{line:139,column:4},end:{line:143,column:7}},"40":{start:{line:140,column:6},end:{line:142,column:7}},"41":{start:{line:141,column:8},end:{line:141,column:46}},"42":{start:{line:145,column:4},end:{line:159,column:7}},"43":{start:{line:146,column:6},end:{line:148,column:8}},"44":{start:{line:150,column:6},end:{line:155,column:7}},"45":{start:{line:151,column:8},end:{line:153,column:11}},"46":{start:{line:152,column:10},end:{line:152,column:37}},"47":{start:{line:154,column:8},end:{line:154,column:34}},"48":{start:{line:156,column:6},end:{line:158,column:7}},"49":{start:{line:157,column:8},end:{line:157,column:75}},"50":{start:{line:166,column:21},end:{line:316,column:1}},"51":{start:{line:174,column:4},end:{line:174,column:35}},"52":{start:{line:181,column:52},end:{line:181,column:68}},"53":{start:{line:188,column:4},end:{line:188,column:69}},"54":{start:{line:191,column:4},end:{line:191,column:69}},"55":{start:{line:194,column:4},end:{line:194,column:39}},"56":{start:{line:198,column:6},end:{line:198,column:27}},"57":{start:{line:200,column:61},end:{line:200,column:76}},"58":{start:{line:202,column:4},end:{line:205,column:6}},"59":{start:{line:203,column:36},end:{line:203,column:48}},"60":{start:{line:208,column:25},end:{line:208,column:56}},"61":{start:{line:209,column:4},end:{line:220,column:7}},"62":{start:{line:228,column:30},end:{line:230,column:17}},"63":{start:{line:231,column:74},end:{line:233,column:62}},"64":{start:{line:234,column:4},end:{line:234,column:31}},"65":{start:{line:236,column:4},end:{line:238,column:5}},"66":{start:{line:237,column:6},end:{line:237,column:46}},"67":{start:{line:240,column:17},end:{line:240,column:39}},"68":{start:{line:242,column:6},end:{line:251,column:7}},"69":{start:{line:254,column:16},end:{line:287,column:6}},"70":{start:{line:289,column:4},end:{line:312,column:5}},"71":{start:{line:290,column:6},end:{line:296,column:9}},"72":{start:{line:291,column:8},end:{line:295,column:11}},"73":{start:{line:297,column:11},end:{line:312,column:5}},"74":{start:{line:298,column:6},end:{line:311,column:9}},"75":{start:{line:299,column:8},end:{line:310,column:11}},"76":{start:{line:302,column:12},end:{line:302,column:32}},"77":{start:{line:305,column:12},end:{line:305,column:27}},"78":{start:{line:307,column:10},end:{line:309,column:13}},"79":{start:{line:314,column:4},end:{line:314,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:20},end:{line:19,column:21}},loc:{start:{line:19,column:79},end:{line:85,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:20},end:{line:31,column:21}},loc:{start:{line:31,column:39},end:{line:37,column:3}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:46,column:20},end:{line:46,column:21}},loc:{start:{line:46,column:30},end:{line:67,column:3}},line:46},"3":{name:"(anonymous_3)",decl:{start:{line:59,column:24},end:{line:59,column:25}},loc:{start:{line:59,column:43},end:{line:65,column:7}},line:59},"4":{name:"(anonymous_4)",decl:{start:{line:69,column:40},end:{line:69,column:41}},loc:{start:{line:69,column:58},end:{line:80,column:3}},line:69},"5":{name:"(anonymous_5)",decl:{start:{line:94,column:33},end:{line:94,column:34}},loc:{start:{line:94,column:43},end:{line:119,column:1}},line:94},"6":{name:"(anonymous_6)",decl:{start:{line:116,column:8},end:{line:116,column:9}},loc:{start:{line:116,column:20},end:{line:116,column:31}},line:116},"7":{name:"(anonymous_7)",decl:{start:{line:128,column:28},end:{line:128,column:29}},loc:{start:{line:128,column:69},end:{line:161,column:1}},line:128},"8":{name:"(anonymous_8)",decl:{start:{line:132,column:13},end:{line:132,column:14}},loc:{start:{line:132,column:19},end:{line:160,column:3}},line:132},"9":{name:"(anonymous_9)",decl:{start:{line:139,column:17},end:{line:139,column:18}},loc:{start:{line:139,column:32},end:{line:143,column:5}},line:139},"10":{name:"(anonymous_10)",decl:{start:{line:145,column:15},end:{line:145,column:16}},loc:{start:{line:145,column:21},end:{line:159,column:5}},line:145},"11":{name:"(anonymous_11)",decl:{start:{line:151,column:21},end:{line:151,column:22}},loc:{start:{line:151,column:35},end:{line:153,column:9}},line:151},"12":{name:"(anonymous_12)",decl:{start:{line:173,column:2},end:{line:173,column:3}},loc:{start:{line:173,column:17},end:{line:175,column:3}},line:173},"13":{name:"(anonymous_13)",decl:{start:{line:176,column:2},end:{line:176,column:3}},loc:{start:{line:176,column:24},end:{line:189,column:3}},line:176},"14":{name:"(anonymous_14)",decl:{start:{line:190,column:2},end:{line:190,column:3}},loc:{start:{line:190,column:20},end:{line:192,column:3}},line:190},"15":{name:"(anonymous_15)",decl:{start:{line:193,column:2},end:{line:193,column:3}},loc:{start:{line:193,column:27},end:{line:195,column:3}},line:193},"16":{name:"(anonymous_16)",decl:{start:{line:196,column:2},end:{line:196,column:3}},loc:{start:{line:196,column:20},end:{line:206,column:3}},line:196},"17":{name:"(anonymous_17)",decl:{start:{line:203,column:23},end:{line:203,column:24}},loc:{start:{line:203,column:36},end:{line:203,column:48}},line:203},"18":{name:"(anonymous_18)",decl:{start:{line:207,column:2},end:{line:207,column:3}},loc:{start:{line:207,column:41},end:{line:221,column:3}},line:207},"19":{name:"(anonymous_19)",decl:{start:{line:222,column:2},end:{line:222,column:3}},loc:{start:{line:226,column:5},end:{line:315,column:3}},line:226},"20":{name:"(anonymous_20)",decl:{start:{line:290,column:17},end:{line:290,column:18}},loc:{start:{line:290,column:23},end:{line:296,column:7}},line:290},"21":{name:"(anonymous_21)",decl:{start:{line:298,column:17},end:{line:298,column:18}},loc:{start:{line:298,column:23},end:{line:311,column:7}},line:298},"22":{name:"(anonymous_22)",decl:{start:{line:299,column:19},end:{line:299,column:20}},loc:{start:{line:299,column:25},end:{line:310,column:9}},line:299}},branchMap:{"0":{loc:{start:{line:33,column:6},end:{line:33,column:34}},type:"binary-expr",locations:[{start:{line:33,column:6},end:{line:33,column:21}},{start:{line:33,column:25},end:{line:33,column:34}}],line:33},"1":{loc:{start:{line:39,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:39,column:2},end:{line:41,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:39},"2":{loc:{start:{line:47,column:4},end:{line:49,column:5}},type:"if",locations:[{start:{line:47,column:4},end:{line:49,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:47},"3":{loc:{start:{line:53,column:4},end:{line:66,column:5}},type:"if",locations:[{start:{line:53,column:4},end:{line:66,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:53},"4":{loc:{start:{line:61,column:10},end:{line:61,column:38}},type:"binary-expr",locations:[{start:{line:61,column:10},end:{line:61,column:25}},{start:{line:61,column:29},end:{line:61,column:38}}],line:61},"5":{loc:{start:{line:71,column:6},end:{line:78,column:7}},type:"if",locations:[{start:{line:71,column:6},end:{line:78,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:71},"6":{loc:{start:{line:97,column:4},end:{line:99,column:29}},type:"cond-expr",locations:[{start:{line:98,column:8},end:{line:98,column:15}},{start:{line:99,column:8},end:{line:99,column:29}}],line:97},"7":{loc:{start:{line:140,column:6},end:{line:142,column:7}},type:"if",locations:[{start:{line:140,column:6},end:{line:142,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:140},"8":{loc:{start:{line:150,column:6},end:{line:155,column:7}},type:"if",locations:[{start:{line:150,column:6},end:{line:155,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:150},"9":{loc:{start:{line:156,column:6},end:{line:158,column:7}},type:"if",locations:[{start:{line:156,column:6},end:{line:158,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:156},"10":{loc:{start:{line:177,column:19},end:{line:180,column:10}},type:"default-arg",locations:[{start:{line:180,column:8},end:{line:180,column:10}}],line:177},"11":{loc:{start:{line:211,column:13},end:{line:211,column:64}},type:"binary-expr",locations:[{start:{line:211,column:13},end:{line:211,column:46}},{start:{line:211,column:50},end:{line:211,column:64}}],line:211},"12":{loc:{start:{line:228,column:30},end:{line:230,column:17}},type:"cond-expr",locations:[{start:{line:229,column:8},end:{line:229,column:40}},{start:{line:230,column:8},end:{line:230,column:17}}],line:228},"13":{loc:{start:{line:231,column:74},end:{line:233,column:62}},type:"binary-expr",locations:[{start:{line:231,column:74},end:{line:233,column:11}},{start:{line:233,column:15},end:{line:233,column:62}}],line:231},"14":{loc:{start:{line:236,column:4},end:{line:238,column:5}},type:"if",locations:[{start:{line:236,column:4},end:{line:238,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:236},"15":{loc:{start:{line:245,column:17},end:{line:245,column:50}},type:"cond-expr",locations:[{start:{line:245,column:34},end:{line:245,column:43}},{start:{line:245,column:46},end:{line:245,column:50}}],line:245},"16":{loc:{start:{line:289,column:4},end:{line:312,column:5}},type:"if",locations:[{start:{line:289,column:4},end:{line:312,column:5}},{start:{line:297,column:11},end:{line:312,column:5}}],line:289},"17":{loc:{start:{line:297,column:11},end:{line:312,column:5}},type:"if",locations:[{start:{line:297,column:11},end:{line:312,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:297}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f746a8b8f97fa27142e0c4139abf97c65cc75547"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_132oqssb06=function(){return actualCoverage;};}return actualCoverage;}cov_132oqssb06();import{$e,$$e}from'../utils/templateUtils.js';import{jml,parseAcorn}from'../vendor-imports.js';import{copyObject}from'../utils/objects.js';const observerMap=(cov_132oqssb06().s[0]++,new WeakMap());// See https://github.com/tc39/proposal-regexp-unicode-property-escapes#other-examples
const idRegex=(cov_132oqssb06().s[1]++,String.raw`^(?:[$_\p{ID_Start}])(?:[$_\u200C\u200D\p{ID_Continue}])*$`);/**
 * @param {{
 *   root: HTMLDivElement,
 *   specificSchemaObject?: import('../formats/schema.js').ZodexSchema
 *   textareas: HTMLTextAreaElement[]
 *   textareaBody: HTMLTextAreaElement
 * }} cfg
 */cov_132oqssb06().s[2]++;const setTooltips=({root,specificSchemaObject,textareas,textareaBody})=>{cov_132oqssb06().f[0]++;cov_132oqssb06().s[3]++;// Todo: For these `JSON.stringify` calls, might instead use
//    zodex->(zod)->zod-to-json-schema instead
textareaBody.title=`Return type:\n\n${JSON.stringify(/** @type {import('zodex').SzFunction<any, any>} */specificSchemaObject.returns,null,2)}`;// eslint-disable-next-line prefer-destructuring -- TS
const args=(/** @type {import('zodex').SzFunction<any, any>} */cov_132oqssb06().s[4]++,specificSchemaObject.args);cov_132oqssb06().s[5]++;textareas.forEach((textarea,idx)=>{cov_132oqssb06().f[1]++;cov_132oqssb06().s[6]++;textarea.title=JSON.stringify((cov_132oqssb06().b[0][0]++,args.items[idx])??(cov_132oqssb06().b[0][1]++,args.rest),null,2);});cov_132oqssb06().s[7]++;if(observerMap.has(root)){cov_132oqssb06().b[1][0]++;cov_132oqssb06().s[8]++;return;}else{cov_132oqssb06().b[1][1]++;}/**
   * @param {Node} node
   */cov_132oqssb06().s[9]++;const addTitles=node=>{cov_132oqssb06().f[2]++;cov_132oqssb06().s[10]++;if(node.nodeType!==Node.ELEMENT_NODE){cov_132oqssb06().b[2][0]++;cov_132oqssb06().s[11]++;return;}else{cov_132oqssb06().b[2][1]++;}const textarea=(/** @type {Element} */cov_132oqssb06().s[12]++,node.querySelector('textarea'));cov_132oqssb06().s[13]++;if(textarea){cov_132oqssb06().b[3][0]++;const textareas=(/** @type {HTMLTextAreaElement[]} */cov_132oqssb06().s[14]++,$$e(root,'textarea').slice(0,-1));// Redo them all, as order may have changed
cov_132oqssb06().s[15]++;textareas.forEach((textarea,idx)=>{cov_132oqssb06().f[3]++;cov_132oqssb06().s[16]++;textarea.title=JSON.stringify((cov_132oqssb06().b[4][0]++,args.items[idx])??(cov_132oqssb06().b[4][1]++,args.rest),null,2);});}else{cov_132oqssb06().b[3][1]++;}};const observer=(cov_132oqssb06().s[17]++,new MutationObserver(mutationList=>{cov_132oqssb06().f[4]++;cov_132oqssb06().s[18]++;for(const mutation of mutationList){cov_132oqssb06().s[19]++;if(mutation.type==='childList'){cov_132oqssb06().b[5][0]++;cov_132oqssb06().s[20]++;for(const node of mutation.removedNodes){cov_132oqssb06().s[21]++;addTitles(node);}cov_132oqssb06().s[22]++;for(const node of mutation.addedNodes){cov_132oqssb06().s[23]++;addTitles(node);}}else{cov_132oqssb06().b[5][1]++;}}}));cov_132oqssb06().s[24]++;observer.observe(root,{attributes:false,childList:true,subtree:true});cov_132oqssb06().s[25]++;observerMap.set(root,observer);};/**
 * @typedef {Function} ArbitraryFunction
 */ /**
 * @param {ArbitraryFunction} func
 */cov_132oqssb06().s[26]++;const getArgsAndBodyOfFunction=func=>{cov_132oqssb06().f[5]++;const funcStr=(cov_132oqssb06().s[27]++,String(func));const funcStrFull=(cov_132oqssb06().s[28]++,String(`(${funcStr.trimStart().startsWith('function')?(cov_132oqssb06().b[6][0]++,funcStr):(cov_132oqssb06().b[6][1]++,`function ${funcStr}`)})`));const body=(cov_132oqssb06().s[29]++,funcStrFull.slice(funcStrFull.indexOf('{')+1,funcStrFull.lastIndexOf('}')).trim());const ast=(/** @type {import('acorn').ExpressionStatement} */cov_132oqssb06().s[30]++,parseAcorn(funcStrFull,{ecmaVersion:'latest',sourceType:'module'}).body[0].expression);const args=(/** @type {import('acorn').Identifier[]} */cov_132oqssb06().s[31]++,(/** @type {import('acorn').FunctionExpression} */ast.params).map(({name})=>{cov_132oqssb06().f[6]++;cov_132oqssb06().s[32]++;return name.trim();}));cov_132oqssb06().s[33]++;return{args,body};};/**
 * @param {{
 *   root: HTMLDivElement,
 *   value: import('../types.js').StructuredCloneValue
 *   specificSchemaObject?: import('../formats/schema.js').ZodexSchema
 * }} cfg
 */cov_132oqssb06().s[34]++;const setValueAndTooltips=({root,value,specificSchemaObject})=>{cov_132oqssb06().f[7]++;const{args,body}=(cov_132oqssb06().s[35]++,getArgsAndBodyOfFunction(value));// Wait for textareas to be available
cov_132oqssb06().s[36]++;setTimeout(()=>{cov_132oqssb06().f[8]++;let textareas=(/** @type {HTMLTextAreaElement[]} */cov_132oqssb06().s[37]++,$$e(root,'textarea[name$="-string"]'));const textareaBody=(/** @type {HTMLTextAreaElement} */cov_132oqssb06().s[38]++,textareas.pop());cov_132oqssb06().s[39]++;args.forEach((_arg,idx)=>{cov_132oqssb06().f[9]++;cov_132oqssb06().s[40]++;if(!textareas[idx]){cov_132oqssb06().b[7][0]++;cov_132oqssb06().s[41]++;$e(root,'.addArrayElement')?.click();}else{cov_132oqssb06().b[7][1]++;}});cov_132oqssb06().s[42]++;setTimeout(()=>{cov_132oqssb06().f[10]++;cov_132oqssb06().s[43]++;textareas=/** @type {HTMLTextAreaElement[]} */$$e(root,'textarea[name$="-string"]').slice(0,-1);cov_132oqssb06().s[44]++;if(value){cov_132oqssb06().b[8][0]++;cov_132oqssb06().s[45]++;args.forEach((arg,idx)=>{cov_132oqssb06().f[11]++;cov_132oqssb06().s[46]++;textareas[idx].value=arg;});cov_132oqssb06().s[47]++;textareaBody.value=body;}else{cov_132oqssb06().b[8][1]++;}cov_132oqssb06().s[48]++;if(specificSchemaObject){cov_132oqssb06().b[9][0]++;cov_132oqssb06().s[49]++;setTooltips({root,specificSchemaObject,textareas,textareaBody});}else{cov_132oqssb06().b[9][1]++;}});});};/**
 * @type {import('../types.js').TypeObject}
 */const functionType=(cov_132oqssb06().s[50]++,{option:['function'],regexEndings:['}'],stringRegexBegin:/^function\((?<args>[^)]*?)\) \{(?<returns>.*)\}$/u,stringRegexEnd:/^\}/u,array:true,valueMatch(x){cov_132oqssb06().f[12]++;cov_132oqssb06().s[51]++;return typeof x==='function';},toValue(s,rootInfo){cov_132oqssb06().f[13]++;const{groups:{args,returns/* istanbul ignore next -- Should always be found */}=(cov_132oqssb06().b[10][0]++,{})}=(/** @type {RegExpMatchArray} */ /** @type {import('../types.js').RootInfo} */cov_132oqssb06().s[52]++,rootInfo.match);// Todo: Either re-use proper acorn parsing here for the `split` or
//         get rid of acorn
// eslint-disable-next-line no-new-func -- Needed
cov_132oqssb06().s[53]++;return{value:new Function(...args.split(/\s*,\s*/u),returns)};},getInput({root}){cov_132oqssb06().f[14]++;cov_132oqssb06().s[54]++;return/** @type {HTMLTextAreaElement} */$e(root,'textarea');},setValue({root,value}){cov_132oqssb06().f[15]++;cov_132oqssb06().s[55]++;setValueAndTooltips({root,value});},getValue({root}){cov_132oqssb06().f[16]++;const textareas=(/** @type {HTMLTextAreaElement[]} */cov_132oqssb06().s[56]++,$$e(root,'textarea'));const textareaBody=(/** @type {HTMLTextAreaElement} */cov_132oqssb06().s[57]++,textareas.pop());// eslint-disable-next-line no-new-func -- Needed
cov_132oqssb06().s[58]++;return new Function(...textareas.map(({value})=>{cov_132oqssb06().f[17]++;cov_132oqssb06().s[59]++;return value.trim();}),textareaBody.value.trim());},viewUI({value,specificSchemaObject}){cov_132oqssb06().f[18]++;const{args,body}=(cov_132oqssb06().s[60]++,getArgsAndBodyOfFunction(value));cov_132oqssb06().s[61]++;return['span',{dataset:{type:'function'},title:(cov_132oqssb06().b[11][0]++,specificSchemaObject?.description)??(cov_132oqssb06().b[11][1]++,'(a function)')},[['b',['Args']],' ',`(${args.join(', ')})`,['br'],['b',['Body']],' ',body]];},editUI({type,buildTypeChoices,specificSchemaObject,topRoot,// schemaContent,
typeNamespace,value}){cov_132oqssb06().f[19]++;// We want to allow overriding its descriptions
const specificSchemaObj=(cov_132oqssb06().s[62]++,specificSchemaObject?(cov_132oqssb06().b[12][0]++,copyObject(specificSchemaObject)):(cov_132oqssb06().b[12][1]++,undefined));const argsTuple=(/** @type {import('zodex').SzFunction<any, any>} */cov_132oqssb06().s[63]++,(cov_132oqssb06().b[13][0]++,specificSchemaObj?.args)??(cov_132oqssb06().b[13][1]++,{type:'tuple',items:[],rest:{type:'any'}}));cov_132oqssb06().s[64]++;argsTuple.description='';// This `description` not in use, but could support
cov_132oqssb06().s[65]++;if(argsTuple.rest){cov_132oqssb06().b[14][0]++;cov_132oqssb06().s[66]++;argsTuple.rest.description='Argument';}else{cov_132oqssb06().b[14][1]++;}const size=(cov_132oqssb06().s[67]++,argsTuple.items.length);const args=(/** @type {import('zodex').SzType} */cov_132oqssb06().s[68]++,{type:'set',minSize:size,maxSize:argsTuple.rest?(cov_132oqssb06().b[15][0]++,undefined):(cov_132oqssb06().b[15][1]++,size),value:{type:'string',regex:idRegex,flags:'v'}});const div=(cov_132oqssb06().s[69]++,jml('div',{dataset:{type:'function'}},[['b',['Arguments']],['br'],...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),format:'schema',// We're always supplying a schema
// schemaOriginal: schemaContent,
schemaContent:args,state:type,// itemIndex,
typeNamespace}).domArray),['b',['Function body']],['br'],...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),format:'schema',// We're always supplying a schema
// schemaOriginal: schemaContent,
schemaContent:{type:'string'},state:type,// itemIndex,
typeNamespace}).domArray)]));cov_132oqssb06().s[70]++;if(value){cov_132oqssb06().b[16][0]++;cov_132oqssb06().s[71]++;setTimeout(()=>{cov_132oqssb06().f[20]++;cov_132oqssb06().s[72]++;setValueAndTooltips({root:div,value,specificSchemaObject});});}else{cov_132oqssb06().b[16][1]++;cov_132oqssb06().s[73]++;if(specificSchemaObject){cov_132oqssb06().b[17][0]++;cov_132oqssb06().s[74]++;setTimeout(()=>{cov_132oqssb06().f[21]++;cov_132oqssb06().s[75]++;setTimeout(()=>{cov_132oqssb06().f[22]++;// Should have some empty textareas by now
const textareas=(/** @type {HTMLTextAreaElement[]} */cov_132oqssb06().s[76]++,$$e(div,'textarea'));const textareaBody=(/** @type {HTMLTextAreaElement} */cov_132oqssb06().s[77]++,textareas.pop());cov_132oqssb06().s[78]++;setTooltips({root:div,specificSchemaObject,textareas,textareaBody});});});}else{cov_132oqssb06().b[17][1]++;}}cov_132oqssb06().s[79]++;return[div];}});export default functionType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,