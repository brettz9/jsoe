function cov_132oqssb06(){var path="/Users/brett/jsoe/src/fundamentalTypes/functionType.js";var hash="fe246617c9e370b0fd1aa0952e83fbef41672e86";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/functionType.js",statementMap:{"0":{start:{line:7,column:21},end:{line:91,column:1}},"1":{start:{line:12,column:4},end:{line:12,column:35}},"2":{start:{line:15,column:4},end:{line:15,column:35}},"3":{start:{line:18,column:4},end:{line:18,column:66}},"4":{start:{line:21,column:4},end:{line:21,column:40}},"5":{start:{line:24,column:4},end:{line:24,column:39}},"6":{start:{line:27,column:4},end:{line:30,column:16}},"7":{start:{line:46,column:30},end:{line:46,column:62}},"8":{start:{line:47,column:74},end:{line:49,column:62}},"9":{start:{line:50,column:4},end:{line:50,column:31}},"10":{start:{line:52,column:4},end:{line:52,column:44}},"11":{start:{line:54,column:4},end:{line:89,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:17},end:{line:13,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:14},end:{line:16,column:3}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:2},end:{line:17,column:3}},loc:{start:{line:17,column:20},end:{line:19,column:3}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:27},end:{line:22,column:3}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:20},end:{line:25,column:3}},line:23},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:2},end:{line:26,column:3}},loc:{start:{line:26,column:41},end:{line:31,column:3}},line:26},"6":{name:"(anonymous_6)",decl:{start:{line:32,column:2},end:{line:32,column:3}},loc:{start:{line:35,column:5},end:{line:90,column:3}},line:35}},branchMap:{"0":{loc:{start:{line:29,column:13},end:{line:29,column:64}},type:"binary-expr",locations:[{start:{line:29,column:13},end:{line:29,column:46}},{start:{line:29,column:50},end:{line:29,column:64}}],line:29},"1":{loc:{start:{line:47,column:74},end:{line:49,column:62}},type:"binary-expr",locations:[{start:{line:47,column:74},end:{line:49,column:11}},{start:{line:49,column:15},end:{line:49,column:62}}],line:47},"2":{loc:{start:{line:82,column:75},end:{line:84,column:35}},type:"binary-expr",locations:[{start:{line:82,column:75},end:{line:84,column:18}},{start:{line:84,column:22},end:{line:84,column:35}}],line:82}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fe246617c9e370b0fd1aa0952e83fbef41672e86"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_132oqssb06=function(){return actualCoverage;};}return actualCoverage;}cov_132oqssb06();import{$e}from'../utils/templateUtils.js';import{copyObject}from'../utils/objects.js';/**
 * @type {import('../types.js').TypeObject}
 */const functionType=(cov_132oqssb06().s[0]++,{option:['function'],stringRegex:/^function\((.*)\): (.*)$/u,// Todo: Fix all the following methods up to `editUI` to work with children
valueMatch(x){cov_132oqssb06().f[0]++;cov_132oqssb06().s[1]++;return typeof x==='function';},toValue(s){cov_132oqssb06().f[1]++;cov_132oqssb06().s[2]++;return{value:s.slice(8,-1)};},getInput({root}){cov_132oqssb06().f[2]++;cov_132oqssb06().s[3]++;return/** @type {HTMLTextAreaElement} */$e(root,'input');},setValue({root,value}){cov_132oqssb06().f[3]++;cov_132oqssb06().s[4]++;this.getInput({root}).value=value;},getValue({root}){cov_132oqssb06().f[4]++;cov_132oqssb06().s[5]++;return this.getInput({root}).value;},viewUI({value,specificSchemaObject}){cov_132oqssb06().f[5]++;cov_132oqssb06().s[6]++;return['span',{dataset:{type:'function'},title:(cov_132oqssb06().b[0][0]++,specificSchemaObject?.description)??(cov_132oqssb06().b[0][1]++,'(a function)')},[value]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_132oqssb06().f[6]++;// Todo: Could make a function instance result type which builds a Function
//        like `new Function('arg1', 'return !arg1');` this just builds a
//        specific function schema instance, and can't have a meaningful
//        `getValue`, etc.; add to demo with tests; could also add to
//        use with `Promise` so that could also build a meaningful
//        implementation; use schema to inform user of types of args,
//        but remember we are not reimplementing the function schema to
//        ask for argument types, etc.
// We want to allow overriding its descriptions
const specificSchemaObj=(cov_132oqssb06().s[7]++,copyObject(specificSchemaObject));const argsTuple=(/** @type {import('zodex').SzFunction<any, any>} */cov_132oqssb06().s[8]++,(cov_132oqssb06().b[1][0]++,specificSchemaObj?.args)??(cov_132oqssb06().b[1][1]++,{type:'tuple',items:[],rest:{type:'any'}}));cov_132oqssb06().s[9]++;argsTuple.description='';// This `description` not in use, but could support
cov_132oqssb06().s[10]++;argsTuple.rest.description='Argument';cov_132oqssb06().s[11]++;return['div',{dataset:{type:'function'}},[['b',['Arguments']],['br'],...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:argsTuple,state:type,// itemIndex,
typeNamespace}).domArray),['b',['Returns']],['br'],...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:/** @type {import('zodex').SzFunction<any, any>} */(cov_132oqssb06().b[2][0]++,specificSchemaObj?.returns)??(cov_132oqssb06().b[2][1]++,{type:'any'}),state:type,// itemIndex,
typeNamespace}).domArray)]];}});export default functionType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,