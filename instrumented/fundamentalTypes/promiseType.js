function cov_1k8s4p1zgp(){var path="/Users/brett/jsoe/src/fundamentalTypes/promiseType.js";var hash="71df7d62d8de90b04aa30008e0bd16b62468157a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/promiseType.js",statementMap:{"0":{start:{line:12,column:19},end:{line:53,column:1}},"1":{start:{line:13,column:33},end:{line:25,column:3}},"2":{start:{line:15,column:6},end:{line:23,column:9}},"3":{start:{line:22,column:8},end:{line:22,column:48}},"4":{start:{line:26,column:2},end:{line:31,column:4}},"5":{start:{line:32,column:2},end:{line:52,column:4}},"6":{start:{line:40,column:12},end:{line:40,column:43}},"7":{start:{line:43,column:12},end:{line:43,column:51}},"8":{start:{line:47,column:12},end:{line:47,column:27}},"9":{start:{line:58,column:20},end:{line:187,column:1}},"10":{start:{line:66,column:4},end:{line:66,column:40}},"11":{start:{line:69,column:61},end:{line:71,column:23}},"12":{start:{line:73,column:4},end:{line:76,column:6}},"13":{start:{line:80,column:6},end:{line:80,column:32}},"14":{start:{line:83,column:4},end:{line:85,column:6}},"15":{start:{line:89,column:4},end:{line:113,column:7}},"16":{start:{line:90,column:18},end:{line:90,column:29}},"17":{start:{line:91,column:22},end:{line:91,column:34}},"18":{start:{line:93,column:8},end:{line:93,column:39}},"19":{start:{line:96,column:55},end:{line:96,column:73}},"20":{start:{line:97,column:6},end:{line:97,column:26}},"21":{start:{line:98,column:6},end:{line:98,column:48}},"22":{start:{line:101,column:8},end:{line:101,column:34}},"23":{start:{line:104,column:6},end:{line:108,column:9}},"24":{start:{line:109,column:20},end:{line:109,column:64}},"25":{start:{line:111,column:6},end:{line:111,column:47}},"26":{start:{line:112,column:6},end:{line:112,column:20}},"27":{start:{line:117,column:6},end:{line:117,column:32}},"28":{start:{line:119,column:4},end:{line:119,column:67}},"29":{start:{line:122,column:20},end:{line:122,column:32}},"30":{start:{line:124,column:17},end:{line:124,column:28}},"31":{start:{line:125,column:24},end:{line:125,column:34}},"32":{start:{line:127,column:4},end:{line:141,column:9}},"33":{start:{line:128,column:18},end:{line:128,column:29}},"34":{start:{line:129,column:19},end:{line:129,column:50}},"35":{start:{line:130,column:6},end:{line:130,column:30}},"36":{start:{line:132,column:8},end:{line:134,column:9}},"37":{start:{line:136,column:6},end:{line:140,column:8}},"38":{start:{line:143,column:4},end:{line:150,column:7}},"39":{start:{line:156,column:4},end:{line:156,column:23}},"40":{start:{line:158,column:16},end:{line:179,column:6}},"41":{start:{line:181,column:4},end:{line:183,column:5}},"42":{start:{line:182,column:6},end:{line:182,column:40}},"43":{start:{line:185,column:4},end:{line:185,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:19},end:{line:12,column:20}},loc:{start:{line:12,column:25},end:{line:53,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:21},end:{line:24,column:5}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:13},end:{line:21,column:14}},loc:{start:{line:21,column:23},end:{line:23,column:7}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:10},end:{line:39,column:11}},loc:{start:{line:39,column:19},end:{line:41,column:11}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:42,column:10},end:{line:42,column:11}},loc:{start:{line:42,column:29},end:{line:44,column:11}},line:42},"5":{name:"(anonymous_5)",decl:{start:{line:45,column:10},end:{line:45,column:11}},loc:{start:{line:45,column:21},end:{line:48,column:11}},line:45},"6":{name:"(anonymous_6)",decl:{start:{line:65,column:2},end:{line:65,column:3}},loc:{start:{line:65,column:17},end:{line:67,column:3}},line:65},"7":{name:"(anonymous_7)",decl:{start:{line:68,column:2},end:{line:68,column:3}},loc:{start:{line:68,column:20},end:{line:77,column:3}},line:68},"8":{name:"(anonymous_8)",decl:{start:{line:78,column:2},end:{line:78,column:3}},loc:{start:{line:78,column:20},end:{line:86,column:3}},line:78},"9":{name:"(anonymous_9)",decl:{start:{line:87,column:2},end:{line:87,column:3}},loc:{start:{line:87,column:27},end:{line:114,column:3}},line:87},"10":{name:"(anonymous_10)",decl:{start:{line:89,column:15},end:{line:89,column:16}},loc:{start:{line:89,column:27},end:{line:113,column:5}},line:89},"11":{name:"(anonymous_11)",decl:{start:{line:115,column:2},end:{line:115,column:3}},loc:{start:{line:115,column:20},end:{line:120,column:3}},line:115},"12":{name:"(anonymous_12)",decl:{start:{line:121,column:2},end:{line:121,column:3}},loc:{start:{line:121,column:57},end:{line:151,column:3}},line:121},"13":{name:"(anonymous_13)",decl:{start:{line:127,column:5},end:{line:127,column:6}},loc:{start:{line:127,column:17},end:{line:141,column:5}},line:127},"14":{name:"(anonymous_14)",decl:{start:{line:152,column:2},end:{line:152,column:3}},loc:{start:{line:155,column:5},end:{line:186,column:3}},line:155}},branchMap:{"0":{loc:{start:{line:160,column:13},end:{line:160,column:63}},type:"binary-expr",locations:[{start:{line:160,column:13},end:{line:160,column:46}},{start:{line:160,column:50},end:{line:160,column:63}}],line:160},"1":{loc:{start:{line:172,column:64},end:{line:174,column:33}},type:"binary-expr",locations:[{start:{line:172,column:64},end:{line:174,column:16}},{start:{line:174,column:20},end:{line:174,column:33}}],line:172},"2":{loc:{start:{line:181,column:4},end:{line:183,column:5}},type:"if",locations:[{start:{line:181,column:4},end:{line:183,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:181},"3":{loc:{start:{line:181,column:8},end:{line:181,column:30}},type:"binary-expr",locations:[{start:{line:181,column:8},end:{line:181,column:13}},{start:{line:181,column:17},end:{line:181,column:30}}],line:181}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"71df7d62d8de90b04aa30008e0bd16b62468157a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1k8s4p1zgp=function(){return actualCoverage;};}return actualCoverage;}cov_1k8s4p1zgp();import{jml,toStringTag,Typeson,structuredCloningThrowing,resurrectable as noneditable,symbol,promise}from'../vendor-imports.js';import{$e}from'../utils/templateUtils.js';import arrayType from'./arrayType.js';/**
 *
 */cov_1k8s4p1zgp().s[0]++;const getTypeson=()=>{cov_1k8s4p1zgp().f[0]++;const structuredCloningFixed=(cov_1k8s4p1zgp().s[1]++,structuredCloningThrowing.filter(typeSpecSet=>{cov_1k8s4p1zgp().f[1]++;cov_1k8s4p1zgp().s[2]++;return![// Not yet supported within JSOE
'imagedata','imagebitmap','cryptokey','domquad'].some(prop=>{cov_1k8s4p1zgp().f[2]++;cov_1k8s4p1zgp().s[3]++;return Object.hasOwn(typeSpecSet,prop);});}));cov_1k8s4p1zgp().s[4]++;structuredCloningFixed.splice(// Add after userObjects
1,0,noneditable);cov_1k8s4p1zgp().s[5]++;return new Typeson().register([...structuredCloningFixed,symbol,promise,{function:{test(x){cov_1k8s4p1zgp().f[3]++;cov_1k8s4p1zgp().s[6]++;return typeof x==='function';},replace(funcType){cov_1k8s4p1zgp().f[4]++;cov_1k8s4p1zgp().s[7]++;return'('+funcType.toString()+')';},revive(o){cov_1k8s4p1zgp().f[5]++;cov_1k8s4p1zgp().s[8]++;// eslint-disable-next-line no-eval -- User opted in
return eval(o);}}}]);};/**
 * @type {import('../types.js').TypeObject}
 */const promiseType=(cov_1k8s4p1zgp().s[9]++,{option:['Promise'],regexEndings:[',',')'],stringRegexBegin:/^Promise\(/u,stringRegexEnd:/^\)/u,array:true,valueMatch(x){cov_1k8s4p1zgp().f[6]++;cov_1k8s4p1zgp().s[10]++;return toStringTag(x)==='Promise';},toValue(...args){cov_1k8s4p1zgp().f[7]++;const val=(/** @type {import('../types.js').ToValue} */cov_1k8s4p1zgp().s[11]++,arrayType.toValue.apply(this,args));cov_1k8s4p1zgp().s[12]++;return{value:Promise.resolve(val.value[0]),remnant:val.remnant};},getInput({root}){cov_1k8s4p1zgp().f[8]++;const childRoot=(/** @type {HTMLDivElement} */cov_1k8s4p1zgp().s[13]++,$e(root,'div[data-type]'));// eslint-disable-next-line @stylistic/max-len -- Long
cov_1k8s4p1zgp().s[14]++;return/** @type {HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement|HTMLButtonElement} */this.types?.getFormControlForRoot(childRoot);},setValue({root,value}){cov_1k8s4p1zgp().f[9]++;cov_1k8s4p1zgp().s[15]++;// Need to wait a tick
setTimeout(async()=>{cov_1k8s4p1zgp().f[10]++;const val=(cov_1k8s4p1zgp().s[16]++,await value);const typeson=(cov_1k8s4p1zgp().s[17]++,getTypeson());const type=(/** @type {import('../types.js').AvailableArbitraryType} */cov_1k8s4p1zgp().s[18]++,await typeson.rootTypeName(val));const select=(/** @type {HTMLSelectElement} */cov_1k8s4p1zgp().s[19]++,$e(root,'select'));cov_1k8s4p1zgp().s[20]++;select.value=type;cov_1k8s4p1zgp().s[21]++;select.dispatchEvent(new Event('change'));const childRoot=(/** @type {HTMLDivElement} */cov_1k8s4p1zgp().s[22]++,$e(root,'div[data-type]'));cov_1k8s4p1zgp().s[23]++;this.types?.setValue({type,root:childRoot,value:val});const input=(cov_1k8s4p1zgp().s[24]++,this.types?.getFormControlForRoot(childRoot));// Avoid invalid number, etc.
cov_1k8s4p1zgp().s[25]++;input?.dispatchEvent(new Event('input'));cov_1k8s4p1zgp().s[26]++;input?.blur();});},getValue({root}){cov_1k8s4p1zgp().f[11]++;const childRoot=(/** @type {HTMLDivElement} */cov_1k8s4p1zgp().s[27]++,$e(root,'div[data-type]'));cov_1k8s4p1zgp().s[28]++;return Promise.resolve(this.types?.getValueForRoot(childRoot));},viewUI({specificSchemaObject,types,value,...args}){cov_1k8s4p1zgp().f[12]++;const typeson=(cov_1k8s4p1zgp().s[29]++,getTypeson());const span=(cov_1k8s4p1zgp().s[30]++,jml('span'));const valueHolder=(cov_1k8s4p1zgp().s[31]++,jml('div'));cov_1k8s4p1zgp().s[32]++;(async()=>{cov_1k8s4p1zgp().f[13]++;const val=(cov_1k8s4p1zgp().s[33]++,await value);const type=(cov_1k8s4p1zgp().s[34]++,await typeson.rootTypeName(val));cov_1k8s4p1zgp().s[35]++;span.textContent=type;const typeObj=(/** @type {import('../types.js').TypeObject} */cov_1k8s4p1zgp().s[36]++,types.getTypeObject(/** @type {import('../types.js').AvailableArbitraryType} */type));cov_1k8s4p1zgp().s[37]++;valueHolder.append(jml(...typeObj.viewUI({specificSchemaObject,types,value:val,...args})));})();cov_1k8s4p1zgp().s[38]++;return['span',{dataset:{type:'promise'},title:specificSchemaObject?.description},['A Promise ',span,valueHolder]];},editUI({format,types,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace,value}){cov_1k8s4p1zgp().f[14]++;cov_1k8s4p1zgp().s[39]++;this.types=types;const div=(cov_1k8s4p1zgp().s[40]++,jml('div',{dataset:{type:'promise'},title:(cov_1k8s4p1zgp().b[0][0]++,specificSchemaObject?.description)??(cov_1k8s4p1zgp().b[0][1]++,'(a Promise)')},['Promise ',...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:/** @type {import('zodex').SzPromise} */(cov_1k8s4p1zgp().b[1][0]++,specificSchemaObject?.value)??(cov_1k8s4p1zgp().b[1][1]++,{type:'any'}),state:type,// itemIndex,
typeNamespace}).domArray)]));cov_1k8s4p1zgp().s[41]++;if((cov_1k8s4p1zgp().b[3][0]++,value)&&(cov_1k8s4p1zgp().b[3][1]++,this.setValue)){cov_1k8s4p1zgp().b[2][0]++;cov_1k8s4p1zgp().s[42]++;this.setValue({root:div,value});}else{cov_1k8s4p1zgp().b[2][1]++;}cov_1k8s4p1zgp().s[43]++;return[div];}});export default promiseType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,