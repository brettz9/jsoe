function cov_10hsn8kd3b(){var path="/Users/brett/jsoe/src/fundamentalTypes/catchType.js";var hash="15353d4061d824317961217fea6779fede3d5d40";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/catchType.js",statementMap:{"0":{start:{line:6,column:18},end:{line:93,column:1}},"1":{start:{line:10,column:4},end:{line:10,column:17}},"2":{start:{line:14,column:4},end:{line:14,column:35}},"3":{start:{line:17,column:4},end:{line:17,column:75}},"4":{start:{line:20,column:4},end:{line:20,column:40}},"5":{start:{line:23,column:4},end:{line:23,column:39}},"6":{start:{line:30,column:4},end:{line:53,column:7}},"7":{start:{line:60,column:45},end:{line:63,column:14}},"8":{start:{line:64,column:4},end:{line:91,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:2},end:{line:9,column:3}},loc:{start:{line:9,column:16},end:{line:11,column:3}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:2},end:{line:13,column:3}},loc:{start:{line:13,column:14},end:{line:15,column:3}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:2},end:{line:16,column:3}},loc:{start:{line:16,column:20},end:{line:18,column:3}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:19,column:2},end:{line:19,column:3}},loc:{start:{line:19,column:27},end:{line:21,column:3}},line:19},"4":{name:"(anonymous_4)",decl:{start:{line:22,column:2},end:{line:22,column:3}},loc:{start:{line:22,column:20},end:{line:24,column:3}},line:22},"5":{name:"(anonymous_5)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:29,column:5},end:{line:54,column:3}},line:29},"6":{name:"(anonymous_6)",decl:{start:{line:55,column:2},end:{line:55,column:3}},loc:{start:{line:58,column:5},end:{line:92,column:3}},line:58}},branchMap:{"0":{loc:{start:{line:32,column:13},end:{line:32,column:61}},type:"binary-expr",locations:[{start:{line:32,column:13},end:{line:32,column:46}},{start:{line:32,column:50},end:{line:32,column:61}}],line:32},"1":{loc:{start:{line:66,column:13},end:{line:66,column:63}},type:"binary-expr",locations:[{start:{line:66,column:13},end:{line:66,column:46}},{start:{line:66,column:50},end:{line:66,column:63}}],line:66},"2":{loc:{start:{line:83,column:64},end:{line:85,column:39}},type:"binary-expr",locations:[{start:{line:83,column:64},end:{line:85,column:22}},{start:{line:85,column:26},end:{line:85,column:39}}],line:83}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"15353d4061d824317961217fea6779fede3d5d40"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_10hsn8kd3b=function(){return actualCoverage;};}return actualCoverage;}cov_10hsn8kd3b();import{$e}from'../utils/templateUtils.js';/**
 * @type {import('../types.js').TypeObject}
 */const catchType=(cov_10hsn8kd3b().s[0]++,{option:['Catch'],stringRegex:/^catch\((.*)\)$/u,valueMatch(){cov_10hsn8kd3b().f[0]++;cov_10hsn8kd3b().s[1]++;return false;},// Todo: Fix all the following methods up to `editUI` to work with children
toValue(s){cov_10hsn8kd3b().f[1]++;cov_10hsn8kd3b().s[2]++;return{value:s.slice(6,-1)};},getInput({root}){cov_10hsn8kd3b().f[2]++;cov_10hsn8kd3b().s[3]++;return/** @type {HTMLTextAreaElement} */$e(root,'input,textarea');},setValue({root,value}){cov_10hsn8kd3b().f[3]++;cov_10hsn8kd3b().s[4]++;this.getInput({root}).value=value;},getValue({root}){cov_10hsn8kd3b().f[4]++;cov_10hsn8kd3b().s[5]++;return this.getInput({root}).value;},viewUI({specificSchemaObject,types,resultType,typeNamespace,type,topRoot,format,bringIntoFocus,buildTypeChoices,schemaContent,replaced}){cov_10hsn8kd3b().f[5]++;cov_10hsn8kd3b().s[6]++;return['span',{dataset:{type:'catch'},title:(cov_10hsn8kd3b().b[0][0]++,specificSchemaObject?.description)??(cov_10hsn8kd3b().b[0][1]++,'(a catch)')},['A Catch',['br'],types.getUIForModeAndType({readonly:true,specificSchemaObject:/** @type {import('zodex').SzCatch} */specificSchemaObject?.innerType,hasValue:true,value:/** @type {import('zodex').SzCatch} */specificSchemaObject// @ts-expect-error Wait until change Zodex fork
.value,resultType,typeNamespace,// eslint-disable-next-line object-shorthand -- TS
type:(/** @type {import('../types.js').AvailableType} */type),topRoot,bringIntoFocus,buildTypeChoices,format,schemaContent,replaced})]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_10hsn8kd3b().f[6]++;const schemaValue=(/** @type {import('zodex').SzCatch} */cov_10hsn8kd3b().s[7]++,specificSchemaObject// @ts-expect-error Undo when Zodex may update to support
?.value);cov_10hsn8kd3b().s[8]++;return['div',{dataset:{type:'catch'},title:(cov_10hsn8kd3b().b[1][0]++,specificSchemaObject?.description)??(cov_10hsn8kd3b().b[1][1]++,'(a `catch`)')},[['label',[['b',['Value']],' ',...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),value:schemaValue,schemaOriginal:schemaContent,schemaContent:/** @type {import('zodex').SzCatch} */(cov_10hsn8kd3b().b[2][0]++,specificSchemaObject?.innerType)??(cov_10hsn8kd3b().b[2][1]++,{type:'any'}),state:type,// itemIndex,
typeNamespace}).domArray)]]]];}});export default catchType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,