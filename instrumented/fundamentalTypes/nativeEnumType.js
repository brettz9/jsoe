function cov_uzyxo640v(){var path="/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js";var hash="ea42f797e95478e9b0fe9fa70631aa99c54a7287";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js",statementMap:{"0":{start:{line:8,column:23},end:{line:98,column:1}},"1":{start:{line:12,column:4},end:{line:19,column:9}},"2":{start:{line:17,column:8},end:{line:18,column:52}},"3":{start:{line:23,column:4},end:{line:23,column:35}},"4":{start:{line:26,column:4},end:{line:26,column:66}},"5":{start:{line:29,column:4},end:{line:29,column:40}},"6":{start:{line:32,column:4},end:{line:32,column:39}},"7":{start:{line:35,column:4},end:{line:38,column:16}},"8":{start:{line:45,column:30},end:{line:45,column:62}},"9":{start:{line:46,column:29},end:{line:78,column:5}},"10":{start:{line:79,column:4},end:{line:79,column:49}},"11":{start:{line:81,column:4},end:{line:96,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:17},end:{line:20,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:30},end:{line:16,column:31}},loc:{start:{line:16,column:46},end:{line:19,column:7}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:2},end:{line:22,column:3}},loc:{start:{line:22,column:14},end:{line:24,column:3}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:20},end:{line:27,column:3}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:27},end:{line:30,column:3}},line:28},"5":{name:"(anonymous_5)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:20},end:{line:33,column:3}},line:31},"6":{name:"(anonymous_6)",decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:41},end:{line:39,column:3}},line:34},"7":{name:"(anonymous_7)",decl:{start:{line:40,column:2},end:{line:40,column:3}},loc:{start:{line:43,column:5},end:{line:97,column:3}},line:43}},branchMap:{"0":{loc:{start:{line:12,column:11},end:{line:19,column:8}},type:"binary-expr",locations:[{start:{line:12,column:11},end:{line:12,column:12}},{start:{line:12,column:16},end:{line:12,column:37}},{start:{line:14,column:6},end:{line:14,column:33}},{start:{line:16,column:6},end:{line:19,column:8}}],line:12},"1":{loc:{start:{line:17,column:15},end:{line:18,column:51}},type:"binary-expr",locations:[{start:{line:17,column:16},end:{line:17,column:36}},{start:{line:17,column:40},end:{line:17,column:63}},{start:{line:18,column:10},end:{line:18,column:51}}],line:17},"2":{loc:{start:{line:37,column:13},end:{line:37,column:67}},type:"binary-expr",locations:[{start:{line:37,column:13},end:{line:37,column:46}},{start:{line:37,column:50},end:{line:37,column:67}}],line:37},"3":{loc:{start:{line:46,column:29},end:{line:78,column:5}},type:"binary-expr",locations:[{start:{line:46,column:29},end:{line:46,column:54}},{start:{line:46,column:58},end:{line:78,column:5}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0,0,0],"1":[0,0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ea42f797e95478e9b0fe9fa70631aa99c54a7287"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_uzyxo640v=function(){return actualCoverage;};}return actualCoverage;}cov_uzyxo640v();import{toStringTag}from'../vendor-imports.js';import{$e}from'../utils/templateUtils.js';import{copyObject}from'../utils/objects.js';/**
 * @type {import('../types.js').TypeObject}
 */const nativeEnumType=(cov_uzyxo640v().s[0]++,{option:['Native enum'],stringRegex:/^nativeEnum\((.*)\)$/u,valueMatch(x){cov_uzyxo640v().f[0]++;cov_uzyxo640v().s[1]++;// Like `object` type, can also match
return(cov_uzyxo640v().b[0][0]++,x)&&(cov_uzyxo640v().b[0][1]++,typeof x==='object')&&(cov_uzyxo640v().b[0][2]++,// Exclude other special object types
toStringTag(x)==='Object')&&(cov_uzyxo640v().b[0][3]++,// Check it is specifically like a native enum
Object.entries(x).every(([key,val])=>{cov_uzyxo640v().f[1]++;cov_uzyxo640v().s[2]++;return(cov_uzyxo640v().b[1][0]++,/^\d+$/u.test(key))&&(cov_uzyxo640v().b[1][1]++,typeof val==='string')||(cov_uzyxo640v().b[1][2]++,['number','string'].includes(typeof val));}));},// Todo: Fix all the following methods up to `editUI` to work with children
toValue(s){cov_uzyxo640v().f[2]++;cov_uzyxo640v().s[3]++;return{value:s.slice(8,-1)};},getInput({root}){cov_uzyxo640v().f[3]++;cov_uzyxo640v().s[4]++;return/** @type {HTMLTextAreaElement} */$e(root,'input');},setValue({root,value}){cov_uzyxo640v().f[4]++;cov_uzyxo640v().s[5]++;this.getInput({root}).value=value;},getValue({root}){cov_uzyxo640v().f[5]++;cov_uzyxo640v().s[6]++;return this.getInput({root}).value;},viewUI({value,specificSchemaObject}){cov_uzyxo640v().f[6]++;cov_uzyxo640v().s[7]++;return['span',{dataset:{type:'nativeEnum'},title:(cov_uzyxo640v().b[2][0]++,specificSchemaObject?.description)??(cov_uzyxo640v().b[2][1]++,'(a native enum)')},[value]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_uzyxo640v().f[7]++;// We want to allow overriding its descriptions
const specificSchemaObj=(cov_uzyxo640v().s[8]++,copyObject(specificSchemaObject));const nativeEnumValues=(cov_uzyxo640v().s[9]++,(cov_uzyxo640v().b[3][0]++,specificSchemaObj?.values)??(cov_uzyxo640v().b[3][1]++,{type:'union',options:[{description:'Numeric',type:'record',key:{type:'number'},value:{type:'string'}},{description:'String',type:'record',key:{type:'string'},value:{type:'union',options:[{type:'string'},{type:'number'}]}}]}));cov_uzyxo640v().s[10]++;nativeEnumValues.description='Native Enum';cov_uzyxo640v().s[11]++;return['div',{dataset:{type:'nativeEnum'}},[...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:nativeEnumValues,state:type,// itemIndex,
typeNamespace}).domArray)]];}});export default nativeEnumType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,