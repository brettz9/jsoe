function cov_uzyxo640v(){var path="/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js";var hash="0c5b46ac6c23693c5e825df98dab09dd32020b99";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js",statementMap:{"0":{start:{line:9,column:23},end:{line:101,column:1}},"1":{start:{line:13,column:4},end:{line:20,column:9}},"2":{start:{line:18,column:8},end:{line:19,column:52}},"3":{start:{line:24,column:4},end:{line:24,column:35}},"4":{start:{line:27,column:4},end:{line:27,column:66}},"5":{start:{line:30,column:4},end:{line:30,column:40}},"6":{start:{line:33,column:18},end:{line:33,column:68}},"7":{start:{line:35,column:4},end:{line:35,column:17}},"8":{start:{line:38,column:4},end:{line:41,column:16}},"9":{start:{line:48,column:30},end:{line:48,column:62}},"10":{start:{line:49,column:29},end:{line:81,column:5}},"11":{start:{line:82,column:4},end:{line:82,column:49}},"12":{start:{line:84,column:4},end:{line:99,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:17},end:{line:21,column:3}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:30},end:{line:17,column:31}},loc:{start:{line:17,column:46},end:{line:20,column:7}},line:17},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:14},end:{line:25,column:3}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:2},end:{line:26,column:3}},loc:{start:{line:26,column:20},end:{line:28,column:3}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:29,column:2},end:{line:29,column:3}},loc:{start:{line:29,column:27},end:{line:31,column:3}},line:29},"5":{name:"(anonymous_5)",decl:{start:{line:32,column:2},end:{line:32,column:3}},loc:{start:{line:32,column:43},end:{line:36,column:3}},line:32},"6":{name:"(anonymous_6)",decl:{start:{line:37,column:2},end:{line:37,column:3}},loc:{start:{line:37,column:41},end:{line:42,column:3}},line:37},"7":{name:"(anonymous_7)",decl:{start:{line:43,column:2},end:{line:43,column:3}},loc:{start:{line:46,column:5},end:{line:100,column:3}},line:46}},branchMap:{"0":{loc:{start:{line:13,column:11},end:{line:20,column:8}},type:"binary-expr",locations:[{start:{line:13,column:11},end:{line:13,column:12}},{start:{line:13,column:16},end:{line:13,column:37}},{start:{line:15,column:6},end:{line:15,column:33}},{start:{line:17,column:6},end:{line:20,column:8}}],line:13},"1":{loc:{start:{line:18,column:15},end:{line:19,column:51}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:36}},{start:{line:18,column:40},end:{line:18,column:63}},{start:{line:19,column:10},end:{line:19,column:51}}],line:18},"2":{loc:{start:{line:40,column:13},end:{line:40,column:67}},type:"binary-expr",locations:[{start:{line:40,column:13},end:{line:40,column:46}},{start:{line:40,column:50},end:{line:40,column:67}}],line:40},"3":{loc:{start:{line:49,column:29},end:{line:81,column:5}},type:"binary-expr",locations:[{start:{line:49,column:29},end:{line:49,column:54}},{start:{line:49,column:58},end:{line:81,column:5}}],line:49}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0,0,0],"1":[0,0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0c5b46ac6c23693c5e825df98dab09dd32020b99"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_uzyxo640v=function(){return actualCoverage;};}return actualCoverage;}cov_uzyxo640v();import{toStringTag}from'../vendor-imports.js';import{$e}from'../utils/templateUtils.js';import{copyObject}from'../utils/objects.js';import recordType from'./recordType.js';/**
 * @type {import('../types.js').TypeObject}
 */const nativeEnumType=(cov_uzyxo640v().s[0]++,{option:['Native enum'],stringRegex:/^nativeEnum\((.*)\)$/u,valueMatch(x){cov_uzyxo640v().f[0]++;cov_uzyxo640v().s[1]++;// Like `object` type, can also match
return(cov_uzyxo640v().b[0][0]++,x)&&(cov_uzyxo640v().b[0][1]++,typeof x==='object')&&(cov_uzyxo640v().b[0][2]++,// Exclude other special object types
toStringTag(x)==='Object')&&(cov_uzyxo640v().b[0][3]++,// Check it is specifically like a native enum
Object.entries(x).every(([key,val])=>{cov_uzyxo640v().f[1]++;cov_uzyxo640v().s[2]++;return(cov_uzyxo640v().b[1][0]++,/^\d+$/u.test(key))&&(cov_uzyxo640v().b[1][1]++,typeof val==='string')||(cov_uzyxo640v().b[1][2]++,['number','string'].includes(typeof val));}));},// Todo: Fix all the following methods up to `editUI` to work with children
toValue(s){cov_uzyxo640v().f[2]++;cov_uzyxo640v().s[3]++;return{value:s.slice(8,-1)};},getInput({root}){cov_uzyxo640v().f[3]++;cov_uzyxo640v().s[4]++;return/** @type {HTMLTextAreaElement} */$e(root,'input');},setValue({root,value}){cov_uzyxo640v().f[4]++;cov_uzyxo640v().s[5]++;this.getInput({root}).value=value;},getValue({root,stateObj,currentPath}){cov_uzyxo640v().f[5]++;const value=(cov_uzyxo640v().s[6]++,recordType.getValue({root,stateObj,currentPath}));// Todo: Add any numeric keys
cov_uzyxo640v().s[7]++;return value;},viewUI({value,specificSchemaObject}){cov_uzyxo640v().f[6]++;cov_uzyxo640v().s[8]++;return['span',{dataset:{type:'nativeEnum'},title:(cov_uzyxo640v().b[2][0]++,specificSchemaObject?.description)??(cov_uzyxo640v().b[2][1]++,'(a native enum)')},[value]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_uzyxo640v().f[7]++;// We want to allow overriding its descriptions
const specificSchemaObj=(cov_uzyxo640v().s[9]++,copyObject(specificSchemaObject));const nativeEnumValues=(cov_uzyxo640v().s[10]++,(cov_uzyxo640v().b[3][0]++,specificSchemaObj?.values)??(cov_uzyxo640v().b[3][1]++,{type:'union',options:[{description:'Numeric',type:'record',key:{type:'number'},value:{type:'string'}},{description:'String',type:'record',key:{type:'string'},value:{type:'union',options:[{type:'string'},{type:'number'}]}}]}));cov_uzyxo640v().s[11]++;nativeEnumValues.description='Native Enum';cov_uzyxo640v().s[12]++;return['div',{dataset:{type:'nativeEnum'}},[...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:nativeEnumValues,state:type,// itemIndex,
typeNamespace}).domArray)]];}});export default nativeEnumType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,