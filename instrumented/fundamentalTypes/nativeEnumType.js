function cov_uzyxo640v(){var path="/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js";var hash="ea789e7452136234257301aacd94994dbe261400";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js",statementMap:{"0":{start:{line:7,column:23},end:{line:85,column:1}},"1":{start:{line:12,column:4},end:{line:12,column:35}},"2":{start:{line:15,column:4},end:{line:15,column:66}},"3":{start:{line:18,column:4},end:{line:18,column:40}},"4":{start:{line:21,column:4},end:{line:21,column:39}},"5":{start:{line:24,column:4},end:{line:24,column:62}},"6":{start:{line:31,column:30},end:{line:31,column:62}},"7":{start:{line:32,column:29},end:{line:64,column:5}},"8":{start:{line:65,column:4},end:{line:65,column:49}},"9":{start:{line:67,column:4},end:{line:83,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:14},end:{line:13,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:20},end:{line:16,column:3}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:2},end:{line:17,column:3}},loc:{start:{line:17,column:27},end:{line:19,column:3}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:20},end:{line:22,column:3}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:19},end:{line:25,column:3}},line:23},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:2},end:{line:26,column:3}},loc:{start:{line:29,column:5},end:{line:84,column:3}},line:29}},branchMap:{"0":{loc:{start:{line:32,column:29},end:{line:64,column:5}},type:"binary-expr",locations:[{start:{line:32,column:29},end:{line:32,column:54}},{start:{line:32,column:58},end:{line:64,column:5}}],line:32}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ea789e7452136234257301aacd94994dbe261400"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_uzyxo640v=function(){return actualCoverage;};}return actualCoverage;}cov_uzyxo640v();import{$e}from'../utils/templateUtils.js';import{copyObject}from'../utils/objects.js';/**
 * @type {import('../types.js').TypeObject}
 */const nativeEnumType=(cov_uzyxo640v().s[0]++,{option:['Native enum'],stringRegex:/^nativeEnum\((.*)\)$/u,// Todo: Fix all the following methods up to `editUI` to work with children
toValue(s){cov_uzyxo640v().f[0]++;cov_uzyxo640v().s[1]++;return{value:s.slice(8,-1)};},getInput({root}){cov_uzyxo640v().f[1]++;cov_uzyxo640v().s[2]++;return/** @type {HTMLTextAreaElement} */$e(root,'input');},setValue({root,value}){cov_uzyxo640v().f[2]++;cov_uzyxo640v().s[3]++;this.getInput({root}).value=value;},getValue({root}){cov_uzyxo640v().f[3]++;cov_uzyxo640v().s[4]++;return this.getInput({root}).value;},viewUI({value}){cov_uzyxo640v().f[4]++;cov_uzyxo640v().s[5]++;return['span',{dataset:{type:'nativeEnum'}},[value]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_uzyxo640v().f[5]++;// We want to allow overriding its descriptions
const specificSchemaObj=(cov_uzyxo640v().s[6]++,copyObject(specificSchemaObject));const nativeEnumValues=(cov_uzyxo640v().s[7]++,(cov_uzyxo640v().b[0][0]++,specificSchemaObj?.values)??(cov_uzyxo640v().b[0][1]++,{type:'union',options:[{description:'Numeric',type:'record',key:{type:'number'},value:{type:'string'}},{description:'String',type:'record',key:{type:'string'},value:{type:'union',options:[{type:'string'},{type:'number'}]}}]}));cov_uzyxo640v().s[8]++;nativeEnumValues.description='Native Enum';cov_uzyxo640v().s[9]++;return['div',{dataset:{type:'nativeEnum'}},[...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:nativeEnumValues,// schemaState,
state:type,// itemIndex,
typeNamespace}).domArray)]];}});export default nativeEnumType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdXp5eG82NDB2IiwiYWN0dWFsQ292ZXJhZ2UiLCIkZSIsImNvcHlPYmplY3QiLCJuYXRpdmVFbnVtVHlwZSIsInMiLCJvcHRpb24iLCJzdHJpbmdSZWdleCIsInRvVmFsdWUiLCJmIiwidmFsdWUiLCJzbGljZSIsImdldElucHV0Iiwicm9vdCIsInNldFZhbHVlIiwiZ2V0VmFsdWUiLCJ2aWV3VUkiLCJkYXRhc2V0IiwidHlwZSIsImVkaXRVSSIsImZvcm1hdCIsImJ1aWxkVHlwZUNob2ljZXMiLCJzcGVjaWZpY1NjaGVtYU9iamVjdCIsInRvcFJvb3QiLCJzY2hlbWFDb250ZW50IiwidHlwZU5hbWVzcGFjZSIsInNwZWNpZmljU2NoZW1hT2JqIiwibmF0aXZlRW51bVZhbHVlcyIsImIiLCJ2YWx1ZXMiLCJvcHRpb25zIiwiZGVzY3JpcHRpb24iLCJrZXkiLCJzY2hlbWFPcmlnaW5hbCIsInN0YXRlIiwiZG9tQXJyYXkiXSwic291cmNlcyI6WyJuYXRpdmVFbnVtVHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyRlfSBmcm9tICcuLi91dGlscy90ZW1wbGF0ZVV0aWxzLmpzJztcbmltcG9ydCB7Y29weU9iamVjdH0gZnJvbSAnLi4vdXRpbHMvb2JqZWN0cy5qcyc7XG5cbi8qKlxuICogQHR5cGUge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5UeXBlT2JqZWN0fVxuICovXG5jb25zdCBuYXRpdmVFbnVtVHlwZSA9IHtcbiAgb3B0aW9uOiBbJ05hdGl2ZSBlbnVtJ10sXG4gIHN0cmluZ1JlZ2V4OiAvXm5hdGl2ZUVudW1cXCgoLiopXFwpJC91LFxuICAvLyBUb2RvOiBGaXggYWxsIHRoZSBmb2xsb3dpbmcgbWV0aG9kcyB1cCB0byBgZWRpdFVJYCB0byB3b3JrIHdpdGggY2hpbGRyZW5cbiAgdG9WYWx1ZSAocykge1xuICAgIHJldHVybiB7dmFsdWU6IHMuc2xpY2UoOCwgLTEpfTtcbiAgfSxcbiAgZ2V0SW5wdXQgKHtyb290fSkge1xuICAgIHJldHVybiAvKiogQHR5cGUge0hUTUxUZXh0QXJlYUVsZW1lbnR9ICovICgkZShyb290LCAnaW5wdXQnKSk7XG4gIH0sXG4gIHNldFZhbHVlICh7cm9vdCwgdmFsdWV9KSB7XG4gICAgdGhpcy5nZXRJbnB1dCh7cm9vdH0pLnZhbHVlID0gdmFsdWU7XG4gIH0sXG4gIGdldFZhbHVlICh7cm9vdH0pIHtcbiAgICByZXR1cm4gdGhpcy5nZXRJbnB1dCh7cm9vdH0pLnZhbHVlO1xuICB9LFxuICB2aWV3VUkgKHt2YWx1ZX0pIHtcbiAgICByZXR1cm4gWydzcGFuJywge2RhdGFzZXQ6IHt0eXBlOiAnbmF0aXZlRW51bSd9fSwgW3ZhbHVlXV07XG4gIH0sXG4gIGVkaXRVSSAoe1xuICAgIGZvcm1hdCwgdHlwZSwgYnVpbGRUeXBlQ2hvaWNlcywgc3BlY2lmaWNTY2hlbWFPYmplY3QsXG4gICAgdG9wUm9vdCwgc2NoZW1hQ29udGVudCwgdHlwZU5hbWVzcGFjZVxuICB9KSB7XG4gICAgLy8gV2Ugd2FudCB0byBhbGxvdyBvdmVycmlkaW5nIGl0cyBkZXNjcmlwdGlvbnNcbiAgICBjb25zdCBzcGVjaWZpY1NjaGVtYU9iaiA9IGNvcHlPYmplY3Qoc3BlY2lmaWNTY2hlbWFPYmplY3QpO1xuICAgIGNvbnN0IG5hdGl2ZUVudW1WYWx1ZXMgPSBzcGVjaWZpY1NjaGVtYU9iaj8udmFsdWVzID8/IHtcbiAgICAgIHR5cGU6ICd1bmlvbicsXG4gICAgICBvcHRpb25zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ051bWVyaWMnLFxuICAgICAgICAgIHR5cGU6ICdyZWNvcmQnLFxuICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgdHlwZTogJ251bWJlcidcbiAgICAgICAgICB9LFxuICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICB0eXBlOiAnc3RyaW5nJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3RyaW5nJyxcbiAgICAgICAgICB0eXBlOiAncmVjb3JkJyxcbiAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgdHlwZTogJ3VuaW9uJyxcbiAgICAgICAgICAgIG9wdGlvbnM6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJ1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgICBuYXRpdmVFbnVtVmFsdWVzLmRlc2NyaXB0aW9uID0gJ05hdGl2ZSBFbnVtJztcblxuICAgIHJldHVybiBbJ2RpdicsIHtkYXRhc2V0OiB7dHlwZTogJ25hdGl2ZUVudW0nfX0sIFtcbiAgICAgIC4uLigvKiogQHR5cGUge2ltcG9ydCgnLi4vdHlwZUNob2ljZXMuanMnKS5CdWlsZFR5cGVDaG9pY2VzfSAqLyAoXG4gICAgICAgIGJ1aWxkVHlwZUNob2ljZXNcbiAgICAgICkoe1xuICAgICAgICAvLyByZXN1bHRUeXBlLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgb2JqZWN0LXNob3J0aGFuZCAtLSBUU1xuICAgICAgICB0b3BSb290OiAvKiogQHR5cGUge0hUTUxEaXZFbGVtZW50fSAqLyAodG9wUm9vdCksXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBvYmplY3Qtc2hvcnRoYW5kIC0tIFRTXG4gICAgICAgIGZvcm1hdDogLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2Zvcm1hdHMuanMnKS5BdmFpbGFibGVGb3JtYXR9ICovIChmb3JtYXQpLFxuICAgICAgICBzY2hlbWFPcmlnaW5hbDogc2NoZW1hQ29udGVudCxcbiAgICAgICAgc2NoZW1hQ29udGVudDogbmF0aXZlRW51bVZhbHVlcyxcbiAgICAgICAgLy8gc2NoZW1hU3RhdGUsXG4gICAgICAgIHN0YXRlOiB0eXBlLFxuICAgICAgICAvLyBpdGVtSW5kZXgsXG4gICAgICAgIHR5cGVOYW1lc3BhY2VcbiAgICAgIH0pLmRvbUFycmF5KVxuICAgIF1dO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBuYXRpdmVFbnVtVHlwZTtcbiJdLCJtYXBwaW5ncyI6Ind4RUFlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWixPQUFRRSxFQUFFLEtBQU8sMkJBQTJCLENBQzVDLE9BQVFDLFVBQVUsS0FBTyxxQkFBcUIsQ0FFOUM7QUFDQTtBQUNBLEdBQ0EsS0FBTSxDQUFBQyxjQUFjLEVBQUFKLGFBQUEsR0FBQUssQ0FBQSxNQUFHLENBQ3JCQyxNQUFNLENBQUUsQ0FBQyxhQUFhLENBQUMsQ0FDdkJDLFdBQVcsQ0FBRSx1QkFBdUIsQ0FDcEM7QUFDQUMsT0FBT0EsQ0FBRUgsQ0FBQyxDQUFFLENBQUFMLGFBQUEsR0FBQVMsQ0FBQSxNQUFBVCxhQUFBLEdBQUFLLENBQUEsTUFDVixNQUFPLENBQUNLLEtBQUssQ0FBRUwsQ0FBQyxDQUFDTSxLQUFLLENBQUMsQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDaEMsQ0FBQyxDQUNEQyxRQUFRQSxDQUFFLENBQUNDLElBQUksQ0FBQyxDQUFFLENBQUFiLGFBQUEsR0FBQVMsQ0FBQSxNQUFBVCxhQUFBLEdBQUFLLENBQUEsTUFDaEIsTUFBTyxrQ0FBb0NILEVBQUUsQ0FBQ1csSUFBSSxDQUFFLE9BQU8sQ0FBQyxDQUM5RCxDQUFDLENBQ0RDLFFBQVFBLENBQUUsQ0FBQ0QsSUFBSSxDQUFFSCxLQUFLLENBQUMsQ0FBRSxDQUFBVixhQUFBLEdBQUFTLENBQUEsTUFBQVQsYUFBQSxHQUFBSyxDQUFBLE1BQ3ZCLElBQUksQ0FBQ08sUUFBUSxDQUFDLENBQUNDLElBQUksQ0FB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