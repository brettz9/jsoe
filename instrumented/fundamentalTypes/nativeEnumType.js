function cov_uzyxo640v(){var path="/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js";var hash="b9fe064c1fa5352baaca72a69b7728c51d94e460";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/fundamentalTypes/nativeEnumType.js",statementMap:{"0":{start:{line:7,column:23},end:{line:88,column:1}},"1":{start:{line:12,column:4},end:{line:12,column:35}},"2":{start:{line:15,column:4},end:{line:15,column:66}},"3":{start:{line:18,column:4},end:{line:18,column:40}},"4":{start:{line:21,column:4},end:{line:21,column:39}},"5":{start:{line:24,column:4},end:{line:24,column:62}},"6":{start:{line:31,column:30},end:{line:31,column:62}},"7":{start:{line:33,column:73},end:{line:67,column:5}},"8":{start:{line:68,column:4},end:{line:68,column:49}},"9":{start:{line:70,column:4},end:{line:86,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:14},end:{line:13,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:20},end:{line:16,column:3}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:2},end:{line:17,column:3}},loc:{start:{line:17,column:27},end:{line:19,column:3}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:20},end:{line:22,column:3}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:19},end:{line:25,column:3}},line:23},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:2},end:{line:26,column:3}},loc:{start:{line:29,column:5},end:{line:87,column:3}},line:29}},branchMap:{"0":{loc:{start:{line:33,column:73},end:{line:67,column:5}},type:"binary-expr",locations:[{start:{line:33,column:73},end:{line:35,column:13}},{start:{line:35,column:17},end:{line:67,column:5}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b9fe064c1fa5352baaca72a69b7728c51d94e460"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_uzyxo640v=function(){return actualCoverage;};}return actualCoverage;}cov_uzyxo640v();import{$e}from'../utils/templateUtils.js';import{copyObject}from'../utils/objects.js';/**
 * @type {import('../types.js').TypeObject}
 */const nativeEnumType=(cov_uzyxo640v().s[0]++,{option:['Native enum'],stringRegex:/^nativeEnum\((.*)\)$/u,// Todo: Fix all the following methods up to `editUI` to work with children
toValue(s){cov_uzyxo640v().f[0]++;cov_uzyxo640v().s[1]++;return{value:s.slice(8,-1)};},getInput({root}){cov_uzyxo640v().f[1]++;cov_uzyxo640v().s[2]++;return/** @type {HTMLTextAreaElement} */$e(root,'input');},setValue({root,value}){cov_uzyxo640v().f[2]++;cov_uzyxo640v().s[3]++;this.getInput({root}).value=value;},getValue({root}){cov_uzyxo640v().f[3]++;cov_uzyxo640v().s[4]++;return this.getInput({root}).value;},viewUI({value}){cov_uzyxo640v().f[4]++;cov_uzyxo640v().s[5]++;return['span',{dataset:{type:'nativeEnum'}},[value]];},editUI({format,type,buildTypeChoices,specificSchemaObject,topRoot,schemaContent,typeNamespace}){cov_uzyxo640v().f[5]++;// We want to allow overriding its descriptions
const specificSchemaObj=(cov_uzyxo640v().s[6]++,copyObject(specificSchemaObject));// @ts-expect-error Remove when Zodex updated to support
const nativeEnumValues=(/** @type {import('zodex').SzNativeEnum} */cov_uzyxo640v().s[7]++,(cov_uzyxo640v().b[0][0]++,specificSchemaObj?.values)??(cov_uzyxo640v().b[0][1]++,{type:'union',options:[{description:'Numeric',type:'record',key:{type:'number'},value:{type:'string'}},{description:'String',type:'record',key:{type:'string'},value:{type:'union',options:[{type:'string'},{type:'number'}]}}]}));cov_uzyxo640v().s[8]++;nativeEnumValues.description='Native Enum';cov_uzyxo640v().s[9]++;return['div',{dataset:{type:'nativeEnum'}},[...(/** @type {import('../typeChoices.js').BuildTypeChoices} */buildTypeChoices({// resultType,
// eslint-disable-next-line object-shorthand -- TS
topRoot:(/** @type {HTMLDivElement} */topRoot),// eslint-disable-next-line object-shorthand -- TS
format:(/** @type {import('../formats.js').AvailableFormat} */format),schemaOriginal:schemaContent,schemaContent:nativeEnumValues,// schemaState,
state:type,// itemIndex,
typeNamespace}).domArray)]];}});export default nativeEnumType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdXp5eG82NDB2IiwiYWN0dWFsQ292ZXJhZ2UiLCIkZSIsImNvcHlPYmplY3QiLCJuYXRpdmVFbnVtVHlwZSIsInMiLCJvcHRpb24iLCJzdHJpbmdSZWdleCIsInRvVmFsdWUiLCJmIiwidmFsdWUiLCJzbGljZSIsImdldElucHV0Iiwicm9vdCIsInNldFZhbHVlIiwiZ2V0VmFsdWUiLCJ2aWV3VUkiLCJkYXRhc2V0IiwidHlwZSIsImVkaXRVSSIsImZvcm1hdCIsImJ1aWxkVHlwZUNob2ljZXMiLCJzcGVjaWZpY1NjaGVtYU9iamVjdCIsInRvcFJvb3QiLCJzY2hlbWFDb250ZW50IiwidHlwZU5hbWVzcGFjZSIsInNwZWNpZmljU2NoZW1hT2JqIiwibmF0aXZlRW51bVZhbHVlcyIsImIiLCJ2YWx1ZXMiLCJvcHRpb25zIiwiZGVzY3JpcHRpb24iLCJrZXkiLCJzY2hlbWFPcmlnaW5hbCIsInN0YXRlIiwiZG9tQXJyYXkiXSwic291cmNlcyI6WyJuYXRpdmVFbnVtVHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyRlfSBmcm9tICcuLi91dGlscy90ZW1wbGF0ZVV0aWxzLmpzJztcbmltcG9ydCB7Y29weU9iamVjdH0gZnJvbSAnLi4vdXRpbHMvb2JqZWN0cy5qcyc7XG5cbi8qKlxuICogQHR5cGUge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5UeXBlT2JqZWN0fVxuICovXG5jb25zdCBuYXRpdmVFbnVtVHlwZSA9IHtcbiAgb3B0aW9uOiBbJ05hdGl2ZSBlbnVtJ10sXG4gIHN0cmluZ1JlZ2V4OiAvXm5hdGl2ZUVudW1cXCgoLiopXFwpJC91LFxuICAvLyBUb2RvOiBGaXggYWxsIHRoZSBmb2xsb3dpbmcgbWV0aG9kcyB1cCB0byBgZWRpdFVJYCB0byB3b3JrIHdpdGggY2hpbGRyZW5cbiAgdG9WYWx1ZSAocykge1xuICAgIHJldHVybiB7dmFsdWU6IHMuc2xpY2UoOCwgLTEpfTtcbiAgfSxcbiAgZ2V0SW5wdXQgKHtyb290fSkge1xuICAgIHJldHVybiAvKiogQHR5cGUge0hUTUxUZXh0QXJlYUVsZW1lbnR9ICovICgkZShyb290LCAnaW5wdXQnKSk7XG4gIH0sXG4gIHNldFZhbHVlICh7cm9vdCwgdmFsdWV9KSB7XG4gICAgdGhpcy5nZXRJbnB1dCh7cm9vdH0pLnZhbHVlID0gdmFsdWU7XG4gIH0sXG4gIGdldFZhbHVlICh7cm9vdH0pIHtcbiAgICByZXR1cm4gdGhpcy5nZXRJbnB1dCh7cm9vdH0pLnZhbHVlO1xuICB9LFxuICB2aWV3VUkgKHt2YWx1ZX0pIHtcbiAgICByZXR1cm4gWydzcGFuJywge2RhdGFzZXQ6IHt0eXBlOiAnbmF0aXZlRW51bSd9fSwgW3ZhbHVlXV07XG4gIH0sXG4gIGVkaXRVSSAoe1xuICAgIGZvcm1hdCwgdHlwZSwgYnVpbGRUeXBlQ2hvaWNlcywgc3BlY2lmaWNTY2hlbWFPYmplY3QsXG4gICAgdG9wUm9vdCwgc2NoZW1hQ29udGVudCwgdHlwZU5hbWVzcGFjZVxuICB9KSB7XG4gICAgLy8gV2Ugd2FudCB0byBhbGxvdyBvdmVycmlkaW5nIGl0cyBkZXNjcmlwdGlvbnNcbiAgICBjb25zdCBzcGVjaWZpY1NjaGVtYU9iaiA9IGNvcHlPYmplY3Qoc3BlY2lmaWNTY2hlbWFPYmplY3QpO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgUmVtb3ZlIHdoZW4gWm9kZXggdXBkYXRlZCB0byBzdXBwb3J0XG4gICAgY29uc3QgbmF0aXZlRW51bVZhbHVlcyA9IC8qKiBAdHlwZSB7aW1wb3J0KCd6b2RleCcpLlN6TmF0aXZlRW51bX0gKi8gKFxuICAgICAgc3BlY2lmaWNTY2hlbWFPYmpcbiAgICApPy52YWx1ZXMgPz8ge1xuICAgICAgdHlwZTogJ3VuaW9uJyxcbiAgICAgIG9wdGlvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTnVtZXJpYycsXG4gICAgICAgICAgdHlwZTogJ3JlY29yZCcsXG4gICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICB0eXBlOiAnbnVtYmVyJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgZGVzY3JpcHRpb246ICdTdHJpbmcnLFxuICAgICAgICAgIHR5cGU6ICdyZWNvcmQnLFxuICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgdHlwZTogJ3N0cmluZydcbiAgICAgICAgICB9LFxuICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICB0eXBlOiAndW5pb24nLFxuICAgICAgICAgICAgb3B0aW9uczogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZydcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICAgIG5hdGl2ZUVudW1WYWx1ZXMuZGVzY3JpcHRpb24gPSAnTmF0aXZlIEVudW0nO1xuXG4gICAgcmV0dXJuIFsnZGl2Jywge2RhdGFzZXQ6IHt0eXBlOiAnbmF0aXZlRW51bSd9fSwgW1xuICAgICAgLi4uKC8qKiBAdHlwZSB7aW1wb3J0KCcuLi90eXBlQ2hvaWNlcy5qcycpLkJ1aWxkVHlwZUNob2ljZXN9ICovIChcbiAgICAgICAgYnVpbGRUeXBlQ2hvaWNlc1xuICAgICAgKSh7XG4gICAgICAgIC8vIHJlc3VsdFR5cGUsXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBvYmplY3Qtc2hvcnRoYW5kIC0tIFRTXG4gICAgICAgIHRvcFJvb3Q6IC8qKiBAdHlwZSB7SFRNTERpdkVsZW1lbnR9ICovICh0b3BSb290KSxcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG9iamVjdC1zaG9ydGhhbmQgLS0gVFNcbiAgICAgICAgZm9ybWF0OiAvKiogQHR5cGUge2ltcG9ydCgnLi4vZm9ybWF0cy5qcycpLkF2YWlsYWJsZUZvcm1hdH0gKi8gKGZvcm1hdCksXG4gICAgICAgIHNjaGVtYU9yaWdpbmFsOiBzY2hlbWFDb250ZW50LFxuICAgICAgICBzY2hlbWFDb250ZW50OiBuYXRpdmVFbnVtVmFsdWVzLFxuICAgICAgICAvLyBzY2hlbWFTdGF0ZSxcbiAgICAgICAgc3RhdGU6IHR5cGUsXG4gICAgICAgIC8vIGl0ZW1JbmRleCxcbiAgICAgICAgdHlwZU5hbWVzcGFjZVxuICAgICAgfSkuZG9tQXJyYXkpXG4gICAgXV07XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IG5hdGl2ZUVudW1UeXBlO1xuIl0sIm1hcHBpbmdzIjoid3hFQWVZO0FBQUFBLGFBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsYUFBQSxHQWZaLE9BQVFFLEVBQUUsS0FBTywyQkFBMkIsQ0FDNUMsT0FBUUMsVUFBVSxLQUFPLHFCQUFxQixDQUU5QztBQUNBO0FBQ0EsR0FDQSxLQUFNLENBQUFDLGNBQWMsRUFBQUosYUFBQSxHQUFBSyxDQUFBLE1BQUcsQ0FDckJDLE1BQU0sQ0FBRSxDQUFDLGFBQWEsQ0FBQyxDQUN2QkMsV0FBVyxDQUFFLHVCQUF1QixDQUNwQztBQUNBQyxPQUFPQSxDQUFFSCxDQUFDLENBQUUsQ0FBQUwsYUFBQSxHQUFBUyxDQUFBLE1BQUFULGFBQUEsR0FBQUssQ0FBQSxNQUNWLE1BQU8sQ0FBQ0ssS0FBSyxDQUFFTCxDQUFDLENBQUNNLEtBQUssQ0FBQyxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNoQyxDQUFDLENBQ0RDLFFBQVFBLENBQUUsQ0FBQ0MsSUFBSSxDQUFDLENBQUUsQ0FBQWIsYUFBQSxHQUFBUyxDQUFBLE1BQUFULGFBQUEsR0FBQUssQ0FBQSxNQUNoQixNQUFPLGtDQUFvQ0gsRUFBRSxDQUFDVyxJQUFJLENBQUUsT0FBTyxDQUFDLENBQzlELENBQUMsQ0FDREMsUUFBUUEs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