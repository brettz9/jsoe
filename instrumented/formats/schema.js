function cov_20vwq19i5l(){var path="/Users/brett/jsoe/src/formats/schema.js";var hash="c9d50670be844bb16755e89f8d21274830a9a06c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/formats/schema.js",statementMap:{"0":{start:{line:23,column:40},end:{line:56,column:2}},"1":{start:{line:73,column:2},end:{line:76,column:3}},"2":{start:{line:78,column:2},end:{line:81,column:3}},"3":{start:{line:83,column:21},end:{line:83,column:41}},"4":{start:{line:85,column:2},end:{line:108,column:3}},"5":{start:{line:86,column:4},end:{line:107,column:5}},"6":{start:{line:87,column:6},end:{line:106,column:7}},"7":{start:{line:88,column:8},end:{line:92,column:9}},"8":{start:{line:89,column:10},end:{line:91,column:18}},"9":{start:{line:94,column:8},end:{line:100,column:9}},"10":{start:{line:95,column:10},end:{line:99,column:12}},"11":{start:{line:102,column:8},end:{line:105,column:16}},"12":{start:{line:110,column:2},end:{line:126,column:3}},"13":{start:{line:111,column:4},end:{line:118,column:5}},"14":{start:{line:113,column:6},end:{line:117,column:8}},"15":{start:{line:119,column:32},end:{line:125,column:14}},"16":{start:{line:128,column:2},end:{line:128,column:20}},"17":{start:{line:137,column:20},end:{line:137,column:29}},"18":{start:{line:138,column:21},end:{line:138,column:31}},"19":{start:{line:140,column:16},end:{line:140,column:18}},"20":{start:{line:141,column:2},end:{line:145,column:3}},"21":{start:{line:142,column:4},end:{line:144,column:5}},"22":{start:{line:143,column:6},end:{line:143,column:51}},"23":{start:{line:147,column:2},end:{line:147,column:15}},"24":{start:{line:150,column:19},end:{line:150,column:20}},"25":{start:{line:159,column:2},end:{line:168,column:3}},"26":{start:{line:160,column:4},end:{line:160,column:19}},"27":{start:{line:161,column:4},end:{line:167,column:5}},"28":{start:{line:165,column:6},end:{line:165,column:39}},"29":{start:{line:166,column:6},end:{line:166,column:52}},"30":{start:{line:170,column:2},end:{line:174,column:3}},"31":{start:{line:171,column:4},end:{line:173,column:7}},"32":{start:{line:176,column:2},end:{line:182,column:3}},"33":{start:{line:177,column:4},end:{line:181,column:5}},"34":{start:{line:178,column:6},end:{line:180,column:7}},"35":{start:{line:179,column:8},end:{line:179,column:49}},"36":{start:{line:183,column:2},end:{line:189,column:3}},"37":{start:{line:184,column:4},end:{line:188,column:5}},"38":{start:{line:185,column:6},end:{line:187,column:7}},"39":{start:{line:186,column:8},end:{line:186,column:52}},"40":{start:{line:191,column:2},end:{line:197,column:3}},"41":{start:{line:192,column:4},end:{line:196,column:5}},"42":{start:{line:193,column:6},end:{line:195,column:35}},"43":{start:{line:206,column:2},end:{line:571,column:3}},"44":{start:{line:208,column:4},end:{line:208,column:21}},"45":{start:{line:210,column:16},end:{line:210,column:25}},"46":{start:{line:219,column:4},end:{line:219,column:26}},"47":{start:{line:220,column:4},end:{line:220,column:15}},"48":{start:{line:225,column:14},end:{line:225,column:16}},"49":{start:{line:226,column:4},end:{line:228,column:5}},"50":{start:{line:227,column:6},end:{line:227,column:65}},"51":{start:{line:230,column:4},end:{line:235,column:5}},"52":{start:{line:231,column:6},end:{line:234,column:7}},"53":{start:{line:233,column:8},end:{line:233,column:56}},"54":{start:{line:237,column:4},end:{line:237,column:36}},"55":{start:{line:238,column:4},end:{line:238,column:24}},"56":{start:{line:240,column:17},end:{line:240,column:67}},"57":{start:{line:241,column:18},end:{line:241,column:69}},"58":{start:{line:243,column:16},end:{line:243,column:48}},"59":{start:{line:244,column:4},end:{line:244,column:36}},"60":{start:{line:245,column:4},end:{line:245,column:24}},"61":{start:{line:247,column:4},end:{line:559,column:7}},"62":{start:{line:561,column:4},end:{line:568,column:5}},"63":{start:{line:563,column:21},end:{line:566,column:8}},"64":{start:{line:567,column:6},end:{line:567,column:53}},"65":{start:{line:569,column:4},end:{line:569,column:35}},"66":{start:{line:575,column:15},end:{line:780,column:1}},"67":{start:{line:578,column:4},end:{line:578,column:31}},"68":{start:{line:579,column:4},end:{line:579,column:56}},"69":{start:{line:586,column:42},end:{line:586,column:64}},"70":{start:{line:588,column:4},end:{line:590,column:5}},"71":{start:{line:591,column:24},end:{line:591,column:46}},"72":{start:{line:592,column:25},end:{line:592,column:30}},"73":{start:{line:601,column:4},end:{line:603,column:5}},"74":{start:{line:602,column:6},end:{line:602,column:59}},"75":{start:{line:605,column:4},end:{line:655,column:5}},"76":{start:{line:607,column:6},end:{line:611,column:8}},"77":{start:{line:612,column:6},end:{line:617,column:7}},"78":{start:{line:613,column:8},end:{line:615,column:19}},"79":{start:{line:616,column:8},end:{line:616,column:30}},"80":{start:{line:618,column:6},end:{line:618,column:12}},"81":{start:{line:620,column:6},end:{line:622,column:16}},"82":{start:{line:623,column:6},end:{line:623,column:12}},"83":{start:{line:625,column:6},end:{line:627,column:14}},"84":{start:{line:628,column:6},end:{line:628,column:12}},"85":{start:{line:630,column:6},end:{line:632,column:14}},"86":{start:{line:633,column:6},end:{line:633,column:12}},"87":{start:{line:642,column:6},end:{line:647,column:13}},"88":{start:{line:648,column:6},end:{line:648,column:12}},"89":{start:{line:654,column:6},end:{line:654,column:12}},"90":{start:{line:658,column:4},end:{line:660,column:5}},"91":{start:{line:661,column:26},end:{line:664,column:6}},"92":{start:{line:670,column:4},end:{line:726,column:5}},"93":{start:{line:672,column:6},end:{line:678,column:7}},"94":{start:{line:673,column:8},end:{line:673,column:33}},"95":{start:{line:677,column:8},end:{line:677,column:38}},"96":{start:{line:679,column:24},end:{line:681,column:8}},"97":{start:{line:682,column:21},end:{line:682,column:43}},"98":{start:{line:684,column:6},end:{line:686,column:7}},"99":{start:{line:685,column:8},end:{line:685,column:41}},"100":{start:{line:688,column:6},end:{line:725,column:7}},"101":{start:{line:689,column:19},end:{line:689,column:67}},"102":{start:{line:690,column:8},end:{line:694,column:9}},"103":{start:{line:691,column:10},end:{line:693,column:12}},"104":{start:{line:698,column:12},end:{line:700,column:13}},"105":{start:{line:703,column:8},end:{line:724,column:9}},"106":{start:{line:710,column:10},end:{line:723,column:12}},"107":{start:{line:727,column:4},end:{line:727,column:31}},"108":{start:{line:737,column:4},end:{line:739,column:5}},"109":{start:{line:738,column:6},end:{line:738,column:47}},"110":{start:{line:742,column:4},end:{line:746,column:5}},"111":{start:{line:743,column:6},end:{line:745,column:8}},"112":{start:{line:749,column:26},end:{line:752,column:6}},"113":{start:{line:760,column:22},end:{line:762,column:6}},"114":{start:{line:761,column:6},end:{line:761,column:18}},"115":{start:{line:764,column:4},end:{line:778,column:6}},"116":{start:{line:767,column:8},end:{line:773,column:9}},"117":{start:{line:768,column:10},end:{line:772,column:12}},"118":{start:{line:774,column:8},end:{line:776,column:10}}},fnMap:{"0":{name:"mergeSchema",decl:{start:{line:71,column:9},end:{line:71,column:20}},loc:{start:{line:71,column:43},end:{line:129,column:1}},line:71},"1":{name:"flattenIntersection",decl:{start:{line:136,column:9},end:{line:136,column:28}},loc:{start:{line:136,column:43},end:{line:148,column:1}},line:136},"2":{name:"addModifiers",decl:{start:{line:158,column:9},end:{line:158,column:21}},loc:{start:{line:158,column:42},end:{line:198,column:1}},line:158},"3":{name:"getTypesForSchema",decl:{start:{line:205,column:16},end:{line:205,column:33}},loc:{start:{line:205,column:63},end:{line:572,column:1}},line:205},"4":{name:"(anonymous_4)",decl:{start:{line:576,column:2},end:{line:576,column:3}},loc:{start:{line:576,column:30},end:{line:580,column:3}},line:576},"5":{name:"(anonymous_5)",decl:{start:{line:582,column:2},end:{line:582,column:3}},loc:{start:{line:584,column:4},end:{line:728,column:3}},line:584},"6":{name:"(anonymous_6)",decl:{start:{line:736,column:2},end:{line:736,column:3}},loc:{start:{line:736,column:74},end:{line:779,column:3}},line:736},"7":{name:"(anonymous_7)",decl:{start:{line:760,column:40},end:{line:760,column:41}},loc:{start:{line:760,column:52},end:{line:762,column:5}},line:760},"8":{name:"(anonymous_8)",decl:{start:{line:766,column:27},end:{line:766,column:28}},loc:{start:{line:766,column:42},end:{line:777,column:7}},line:766}},branchMap:{"0":{loc:{start:{line:73,column:2},end:{line:76,column:3}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:73},"1":{loc:{start:{line:78,column:2},end:{line:81,column:3}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:78},"2":{loc:{start:{line:86,column:4},end:{line:107,column:5}},type:"if",locations:[{start:{line:86,column:4},end:{line:107,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:86},"3":{loc:{start:{line:86,column:8},end:{line:86,column:48}},type:"binary-expr",locations:[{start:{line:86,column:8},end:{line:86,column:23}},{start:{line:86,column:27},end:{line:86,column:48}}],line:86},"4":{loc:{start:{line:87,column:6},end:{line:106,column:7}},type:"if",locations:[{start:{line:87,column:6},end:{line:106,column:7}},{start:{line:93,column:13},end:{line:106,column:7}}],line:87},"5":{loc:{start:{line:88,column:8},end:{line:92,column:9}},type:"if",locations:[{start:{line:88,column:8},end:{line:92,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:88},"6":{loc:{start:{line:89,column:29},end:{line:91,column:17}},type:"cond-expr",locations:[{start:{line:90,column:14},end:{line:90,column:46}},{start:{line:91,column:14},end:{line:91,column:17}}],line:89},"7":{loc:{start:{line:94,column:8},end:{line:100,column:9}},type:"if",locations:[{start:{line:94,column:8},end:{line:100,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:94},"8":{loc:{start:{line:102,column:27},end:{line:105,column:15}},type:"cond-expr",locations:[{start:{line:103,column:12},end:{line:103,column:27}},{start:{line:105,column:12},end:{line:105,column:15}}],line:102},"9":{loc:{start:{line:102,column:27},end:{line:102,column:57}},type:"binary-expr",locations:[{start:{line:102,column:27},end:{line:102,column:30}},{start:{line:102,column:34},end:{line:102,column:57}}],line:102},"10":{loc:{start:{line:111,column:4},end:{line:118,column:5}},type:"if",locations:[{start:{line:111,column:4},end:{line:118,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:111},"11":{loc:{start:{line:111,column:8},end:{line:112,column:37}},type:"binary-expr",locations:[{start:{line:111,column:8},end:{line:111,column:49}},{start:{line:112,column:8},end:{line:112,column:37}}],line:111},"12":{loc:{start:{line:159,column:2},end:{line:168,column:3}},type:"if",locations:[{start:{line:159,column:2},end:{line:168,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:159},"13":{loc:{start:{line:170,column:2},end:{line:174,column:3}},type:"if",locations:[{start:{line:170,column:2},end:{line:174,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:170},"14":{loc:{start:{line:176,column:2},end:{line:182,column:3}},type:"if",locations:[{start:{line:176,column:2},end:{line:182,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:176},"15":{loc:{start:{line:178,column:6},end:{line:180,column:7}},type:"if",locations:[{start:{line:178,column:6},end:{line:180,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:178},"16":{loc:{start:{line:183,column:2},end:{line:189,column:3}},type:"if",locations:[{start:{line:183,column:2},end:{line:189,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:183},"17":{loc:{start:{line:185,column:6},end:{line:187,column:7}},type:"if",locations:[{start:{line:185,column:6},end:{line:187,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:185},"18":{loc:{start:{line:191,column:2},end:{line:197,column:3}},type:"if",locations:[{start:{line:191,column:2},end:{line:197,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:191},"19":{loc:{start:{line:193,column:24},end:{line:195,column:34}},type:"cond-expr",locations:[{start:{line:194,column:10},end:{line:194,column:62}},{start:{line:195,column:10},end:{line:195,column:34}}],line:193},"20":{loc:{start:{line:206,column:2},end:{line:571,column:3}},type:"switch",locations:[{start:{line:207,column:2},end:{line:208,column:21}},{start:{line:209,column:2},end:{line:221,column:3}},{start:{line:222,column:2},end:{line:222,column:28}},{start:{line:223,column:2},end:{line:239,column:3}},{start:{line:239,column:4},end:{line:246,column:3}},{start:{line:246,column:4},end:{line:246,column:15}},{start:{line:246,column:16},end:{line:559,column:7}},{start:{line:560,column:2},end:{line:570,column:3}}],line:206},"21":{loc:{start:{line:230,column:4},end:{line:235,column:5}},type:"if",locations:[{start:{line:230,column:4},end:{line:235,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:230},"22":{loc:{start:{line:561,column:4},end:{line:568,column:5}},type:"if",locations:[{start:{line:561,column:4},end:{line:568,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:561},"23":{loc:{start:{line:586,column:42},end:{line:586,column:64}},type:"binary-expr",locations:[{start:{line:586,column:42},end:{line:586,column:58}},{start:{line:586,column:62},end:{line:586,column:64}}],line:586},"24":{loc:{start:{line:588,column:4},end:{line:590,column:5}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:588},"25":{loc:{start:{line:601,column:4},end:{line:603,column:5}},type:"if",locations:[{start:{line:601,column:4},end:{line:603,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:601},"26":{loc:{start:{line:601,column:8},end:{line:601,column:77}},type:"binary-expr",locations:[{start:{line:601,column:8},end:{line:601,column:43}},{start:{line:601,column:47},end:{line:601,column:77}}],line:601},"27":{loc:{start:{line:605,column:4},end:{line:655,column:5}},type:"switch",locations:[{start:{line:606,column:4},end:{line:618,column:12}},{start:{line:619,column:4},end:{line:623,column:12}},{start:{line:624,column:4},end:{line:628,column:12}},{start:{line:629,column:4},end:{line:633,column:12}},{start:{line:641,column:4},end:{line:648,column:12}},{start:{line:653,column:4},end:{line:654,column:12}}],line:605},"28":{loc:{start:{line:612,column:6},end:{line:617,column:7}},type:"if",locations:[{start:{line:612,column:6},end:{line:617,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:612},"29":{loc:{start:{line:642,column:61},end:{line:647,column:12}},type:"binary-expr",locations:[{start:{line:642,column:61},end:{line:644,column:48}},{start:{line:645,column:45},end:{line:647,column:12}}],line:642},"30":{loc:{start:{line:658,column:4},end:{line:660,column:5}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:658},"31":{loc:{start:{line:672,column:6},end:{line:678,column:7}},type:"if",locations:[{start:{line:672,column:6},end:{line:678,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:672},"32":{loc:{start:{line:684,column:6},end:{line:686,column:7}},type:"if",locations:[{start:{line:684,column:6},end:{line:686,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:684},"33":{loc:{start:{line:688,column:6},end:{line:725,column:7}},type:"if",locations:[{start:{line:688,column:6},end:{line:725,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:688},"34":{loc:{start:{line:690,column:8},end:{line:694,column:9}},type:"if",locations:[{start:{line:690,column:8},end:{line:694,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:690},"35":{loc:{start:{line:690,column:12},end:{line:690,column:45}},type:"binary-expr",locations:[{start:{line:690,column:12},end:{line:690,column:17}},{start:{line:690,column:21},end:{line:690,column:45}}],line:690},"36":{loc:{start:{line:703,column:8},end:{line:724,column:9}},type:"if",locations:[{start:{line:703,column:8},end:{line:724,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:703},"37":{loc:{start:{line:703,column:12},end:{line:703,column:61}},type:"binary-expr",locations:[{start:{line:703,column:12},end:{line:703,column:33}},{start:{line:703,column:37},end:{line:703,column:61}}],line:703},"38":{loc:{start:{line:715,column:20},end:{line:721,column:15}},type:"cond-expr",locations:[{start:{line:717,column:16},end:{line:717,column:22}},{start:{line:718,column:16},end:{line:721,column:15}}],line:715},"39":{loc:{start:{line:715,column:20},end:{line:716,column:63}},type:"binary-expr",locations:[{start:{line:715,column:20},end:{line:715,column:36}},{start:{line:716,column:15},end:{line:716,column:32}},{start:{line:716,column:36},end:{line:716,column:62}}],line:715},"40":{loc:{start:{line:737,column:4},end:{line:739,column:5}},type:"if",locations:[{start:{line:737,column:4},end:{line:739,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:737},"41":{loc:{start:{line:742,column:4},end:{line:746,column:5}},type:"if",locations:[{start:{line:742,column:4},end:{line:746,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:742},"42":{loc:{start:{line:751,column:44},end:{line:751,column:76}},type:"binary-expr",locations:[{start:{line:751,column:45},end:{line:751,column:59}},{start:{line:751,column:64},end:{line:751,column:76}}],line:751},"43":{loc:{start:{line:767,column:8},end:{line:773,column:9}},type:"if",locations:[{start:{line:767,column:8},end:{line:773,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:767}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0],"25":[0,0],"26":[0,0],"27":[0,0,0,0,0,0],"28":[0,0],"29":[0,0],"30":[0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c9d50670be844bb16755e89f8d21274830a9a06c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_20vwq19i5l=function(){return actualCoverage;};}return actualCoverage;}cov_20vwq19i5l();// import {z} from 'zod';
import{dezerialize}from'zodex';import structuredCloning from'./structuredCloning.js';import{resolveJSONPointer}from'../utils/jsonPointer.js';import{copyObject}from'../utils/objects.js';/* eslint-disable jsdoc/valid-types -- https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/147 */ /**
 * @typedef {T[keyof T]} ValueOf<T>
 * @template T
 */ /* eslint-enable jsdoc/valid-types -- https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/147 */ /**
 * @typedef {ValueOf<
*   Pick<import('zodex').SzType, "type">
* >} AvailableZodexType
*/ /** @type {Map<AvailableZodexType, import('../types.js').AvailableType>} */const zodexToStructuredCloningTypeMap=(cov_20vwq19i5l().s[0]++,new Map([['boolean','boolean'],['number','number'],['nan','nan'],['bigInt','bigint'],['string','string'],['date','date'],['undefined','undef'],['void','void'],['null','null'],// ['array', 'array'],
['array','arrayNonindexKeys'],['object','object'],['enum','enum'],['literal','literal'],['tuple','tuple'],['record','record'],['map','map'],['set','set'],['never','never'],// Todo: Allow non-cloning version to return these too, but filter out
//         otherwise
// ['symbol', 'symbol'],
// ['function', 'function'],
// ['promise', 'promise'],
['catch','catch'],['nativeEnum','nativeEnum']]));/**
 * @typedef {import('zodex').SzType} ZodexSchema
 */ /**
 * @typedef {import('../utils/objects.js').NestedObject} NestedObject
 */ /**
 * @param {ZodexSchema} leftItem
 * @param {ZodexSchema} rightItem
 * @throws {Error}
 * @returns {ZodexSchema}
 */function mergeSchema(leftItem,rightItem){cov_20vwq19i5l().f[0]++;cov_20vwq19i5l().s[1]++;/* istanbul ignore if -- Guard */if(leftItem.type!=='object'){console.log('leftItem',leftItem);throw new Error('Unexpected leftItem of type '+leftItem.type);}else{cov_20vwq19i5l().b[0][0]++;}/* istanbul ignore if -- Guard */cov_20vwq19i5l().s[2]++;if(rightItem.type!=='object'){console.log('rightItem',rightItem);throw new Error('Unexpected rightItem of type '+rightItem.type);}else{cov_20vwq19i5l().b[1][0]++;}const newLeftObj=(cov_20vwq19i5l().s[3]++,copyObject(leftItem));cov_20vwq19i5l().s[4]++;for(const[prop,val]of Object.entries(rightItem)){cov_20vwq19i5l().s[5]++;if((cov_20vwq19i5l().b[3][0]++,prop!=='type')&&(cov_20vwq19i5l().b[3][1]++,prop!=='properties')){cov_20vwq19i5l().b[2][0]++;cov_20vwq19i5l().s[6]++;if(prop==='description'){cov_20vwq19i5l().b[4][0]++;cov_20vwq19i5l().s[7]++;if(val!=='Modifiers'){cov_20vwq19i5l().b[5][0]++;cov_20vwq19i5l().s[8]++;// A bit cleaner
newLeftObj[prop]=newLeftObj[prop]?(cov_20vwq19i5l().b[6][0]++,newLeftObj[prop]+' and '+val):(cov_20vwq19i5l().b[6][1]++,val);}else{cov_20vwq19i5l().b[5][1]++;}}else{cov_20vwq19i5l().b[4][1]++;cov_20vwq19i5l().s[9]++;// catchall, unknownKeys
if(prop in newLeftObj){cov_20vwq19i5l().b[7][0]++;cov_20vwq19i5l().s[10]++;throw new Error('Duplicate property '+prop+' of value '+JSON.stringify(val)+' and '+JSON.stringify(newLeftObj[prop]));}else{cov_20vwq19i5l().b[7][1]++;}cov_20vwq19i5l().s[11]++;newLeftObj[prop]=(cov_20vwq19i5l().b[9][0]++,val)&&(cov_20vwq19i5l().b[9][1]++,typeof val==='object')?(cov_20vwq19i5l().b[8][0]++,copyObject(val)/* istanbul ignore next -- Guard */):(cov_20vwq19i5l().b[8][1]++,val);}}else{cov_20vwq19i5l().b[2][1]++;}}cov_20vwq19i5l().s[12]++;for(const[prop,val]of Object.entries(rightItem.properties)){cov_20vwq19i5l().s[13]++;if((cov_20vwq19i5l().b[11][0]++,typeof newLeftObj.properties!=='string')&&(cov_20vwq19i5l().b[11][1]++,prop in newLeftObj.properties)){cov_20vwq19i5l().b[10][0]++;cov_20vwq19i5l().s[14]++;throw new Error('Duplicate property '+prop+' of value '+JSON.stringify(val)+' and '+JSON.stringify(newLeftObj.properties[prop]));}else{cov_20vwq19i5l().b[10][1]++;}/** @type {NestedObject} */cov_20vwq19i5l().s[15]++;newLeftObj.properties[prop]=/* istanbul ignore next -- Guard */val&&typeof val==='object'?copyObject(val)/* istanbul ignore next -- Guard */:val;}cov_20vwq19i5l().s[16]++;return newLeftObj;}/**
 * @param {Set<ZodexSchema>} left
 * @param {Set<ZodexSchema>} right
 * @returns {ZodexSchema[]}
 */function flattenIntersection(left,right){cov_20vwq19i5l().f[1]++;const leftArray=(cov_20vwq19i5l().s[17]++,[...left]);const rightArray=(cov_20vwq19i5l().s[18]++,[...right]);const items=(cov_20vwq19i5l().s[19]++,[]);cov_20vwq19i5l().s[20]++;for(const leftItem of leftArray){cov_20vwq19i5l().s[21]++;for(const rightItem of rightArray){cov_20vwq19i5l().s[22]++;items.push(mergeSchema(leftItem,rightItem));}}cov_20vwq19i5l().s[23]++;return items;}let unionGroupID=(cov_20vwq19i5l().s[24]++,0);/**
 * @param {ZodexSchema} schemaObject
 * @param {(ZodexSchema & {
 *   $unionGroupID?: number, $defaultValue?: any, $readonlyParent?: any
 * })[]} set
 * @returns {void}
 */function addModifiers(schemaObject,set){cov_20vwq19i5l().f[2]++;cov_20vwq19i5l().s[25]++;if('defaultValue'in schemaObject){cov_20vwq19i5l().b[12][0]++;cov_20vwq19i5l().s[26]++;unionGroupID++;cov_20vwq19i5l().s[27]++;for(const obj of set){cov_20vwq19i5l().s[28]++;// Todo: Validate that `defaultValue` is possible and allow for
//        selection of the first schema to validate the `defaultValue`;
//        also validate things like impossible max/min combos
obj.$unionGroupID=unionGroupID;cov_20vwq19i5l().s[29]++;obj.$defaultValue=schemaObject.defaultValue;}}else{cov_20vwq19i5l().b[12][1]++;}cov_20vwq19i5l().s[30]++;if(schemaObject.isNullable){cov_20vwq19i5l().b[13][0]++;cov_20vwq19i5l().s[31]++;set.push({type:'null'});}else{cov_20vwq19i5l().b[13][1]++;}cov_20vwq19i5l().s[32]++;if(schemaObject.isOptional){cov_20vwq19i5l().b[14][0]++;cov_20vwq19i5l().s[33]++;for(const obj of set){cov_20vwq19i5l().s[34]++;if(!('isOptional'in obj)){cov_20vwq19i5l().b[15][0]++;cov_20vwq19i5l().s[35]++;obj.isOptional=schemaObject.isOptional;}else{cov_20vwq19i5l().b[15][1]++;}}}else{cov_20vwq19i5l().b[14][1]++;}cov_20vwq19i5l().s[36]++;if(schemaObject.readonly){cov_20vwq19i5l().b[16][0]++;cov_20vwq19i5l().s[37]++;for(const obj of set){cov_20vwq19i5l().s[38]++;if(!('readonly'in obj)){cov_20vwq19i5l().b[17][0]++;cov_20vwq19i5l().s[39]++;obj.$readonlyParent=schemaObject.readonly;}else{cov_20vwq19i5l().b[17][1]++;}}}else{cov_20vwq19i5l().b[16][1]++;}cov_20vwq19i5l().s[40]++;if(schemaObject.description){cov_20vwq19i5l().b[18][0]++;cov_20vwq19i5l().s[41]++;for(const obj of set){cov_20vwq19i5l().s[42]++;obj.description=obj.description?(cov_20vwq19i5l().b[19][0]++,obj.description+' and '+schemaObject.description):(cov_20vwq19i5l().b[19][1]++,schemaObject.description);}}else{cov_20vwq19i5l().b[18][1]++;}}/**
 * @param {ZodexSchema} schemaObject
 * @param {ZodexSchema} originalJSON
 * @returns {Set<ZodexSchema>}
 */export function getTypesForSchema(schemaObject,originalJSON){cov_20vwq19i5l().f[3]++;cov_20vwq19i5l().s[43]++;switch(schemaObject.type){case'never':cov_20vwq19i5l().b[20][0]++;cov_20vwq19i5l().s[44]++;return new Set();case'object':cov_20vwq19i5l().b[20][1]++;{const set=(cov_20vwq19i5l().s[45]++,new Set());// const {properties} = schemaObject;
// if (
//   'type' in properties && properties.type.type === 'enum' &&
//   properties.type.values.length === 1
// ) {
//   set.add(schemaObject);
//   set.add(properties.type.defaultValue);
// }
cov_20vwq19i5l().s[46]++;set.add(schemaObject);cov_20vwq19i5l().s[47]++;return set;}case'discriminatedUnion':cov_20vwq19i5l().b[20][2]++;case'union':cov_20vwq19i5l().b[20][3]++;{/** @type {(ZodexSchema & {$discriminator?: string})[]} */let set=(cov_20vwq19i5l().s[48]++,[]);cov_20vwq19i5l().s[49]++;for(const option of schemaObject.options){cov_20vwq19i5l().s[50]++;set=[...set,...getTypesForSchema(option,originalJSON)];}cov_20vwq19i5l().s[51]++;if(schemaObject.type==='discriminatedUnion'){cov_20vwq19i5l().b[21][0]++;cov_20vwq19i5l().s[52]++;for(const obj of set){cov_20vwq19i5l().s[53]++;// Todo: Use to confirm the object has the discriminator
obj.$discriminator=schemaObject.discriminator;}}else{cov_20vwq19i5l().b[21][1]++;}cov_20vwq19i5l().s[54]++;addModifiers(schemaObject,set);cov_20vwq19i5l().s[55]++;return new Set(set);}case'intersection':cov_20vwq19i5l().b[20][4]++;{const left=(cov_20vwq19i5l().s[56]++,getTypesForSchema(schemaObject.left,originalJSON));const right=(cov_20vwq19i5l().s[57]++,getTypesForSchema(schemaObject.right,originalJSON));const set=(cov_20vwq19i5l().s[58]++,flattenIntersection(left,right));cov_20vwq19i5l().s[59]++;addModifiers(schemaObject,set);cov_20vwq19i5l().s[60]++;return new Set(set);}case'any':cov_20vwq19i5l().b[20][5]++;case'unknown':cov_20vwq19i5l().b[20][6]++;cov_20vwq19i5l().s[61]++;return new Set([{type:'boolean'},{type:'number'},{type:'nan'},{type:'bigInt'},{type:'string'},{description:'Email',type:'string',kind:'email'},{description:'URL',type:'string',kind:'url'},{description:'Date',type:'string',kind:'date'},{type:'date'},// {
//   type: 'void'
// },
{type:'undefined'},{type:'null'},{type:'object',properties:{},unknownKeys:'passthrough'},// Todo: support these types separately
// {
//   type: 'symbol'
// },
// {
//   type: 'promise',
//   value: {
//     type: 'any'
//   }
// },
// {
//   type: 'function',
//   args: {
//     type: 'tuple',
//     items: [],
//     rest: {
//       type: 'any'
//     }
//   },
//   returns: {
//     type: 'any'
//   }
// },
{type:'nativeEnum',values:{type:'union',options:[{description:'Numeric',type:'record',key:{type:'number'},value:{type:'string'}},{description:'String',type:'record',key:{type:'string'},value:{type:'union',options:[{type:'string'},{type:'number'}]}}]}},{type:'array',element:{type:'any'}},{type:'set',value:{type:'any'}},{type:'map',key:{type:'any'},value:{type:'any'}},{type:'never'},{type:'effect',effects:[{name:'regexp',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'blob',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'BooleanObject',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'NumberObject',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'StringObject',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'SpecialRealNumber',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'domexception',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'error',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'filelist',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'file',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'resurrectable',// noneditable
type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'blobHTML',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'buffersource',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'dommatrix',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'dompoint',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'domrect',type:'refinement'}],inner:{type:'any'}},{type:'effect',effects:[{name:'errors',type:'refinement'}],inner:{type:'any'}},// Todo: Adapt into a widget to drag to point back to another object
{description:'JSON Reference',type:'object',properties:{$ref:{type:'string'}}}]);default:cov_20vwq19i5l().b[20][7]++;{cov_20vwq19i5l().s[62]++;if('$ref'in schemaObject){cov_20vwq19i5l().b[22][0]++;// console.log('originalJSON', originalJSON, schemaObject.$ref);
const refObj=(cov_20vwq19i5l().s[63]++,resolveJSONPointer({obj:originalJSON,path:/** @type {import('zodex').SzRef} */schemaObject.$ref}));cov_20vwq19i5l().s[64]++;return getTypesForSchema(refObj,originalJSON);}else{cov_20vwq19i5l().b[22][1]++;}cov_20vwq19i5l().s[65]++;return new Set([schemaObject]);}}}/** @type {import('../formats.js').Format} */const schema=(cov_20vwq19i5l().s[66]++,{iterate(records,stateObj){cov_20vwq19i5l().f[4]++;cov_20vwq19i5l().s[67]++;// console.log('records', records, stateObj);
stateObj.format='schema';cov_20vwq19i5l().s[68]++;return structuredCloning.iterate(records,stateObj);},convertFromTypeson(typesonType,types,v,arrayOrObjectPropertyName,parentSchemaInfo,stateObj){cov_20vwq19i5l().f[5]++;// eslint-disable-next-line prefer-const -- Convenient
let[parentSchema,parentSchemaIdx]=(cov_20vwq19i5l().s[69]++,(cov_20vwq19i5l().b[23][0]++,parentSchemaInfo)??(cov_20vwq19i5l().b[23][1]++,[]));/* istanbul ignore if -- Guard */cov_20vwq19i5l().s[70]++;if(!stateObj){throw new Error('State object expected for schema');}else{cov_20vwq19i5l().b[24][0]++;}let currentSchema=(cov_20vwq19i5l().s[71]++,stateObj.schemaContent);let mustBeOptional=(cov_20vwq19i5l().s[72]++,false);// console.log('currentSchema', currentSchema);
// console.log(
//   'parentSchema', parentSchemaIdx, parentSchema, '::',
//   arrayOrObjectPropertyName
// );
// We shouldn't have to reprocess intersections, etc., as this is our own
//   union
cov_20vwq19i5l().s[73]++;if((cov_20vwq19i5l().b[26][0]++,typeof parentSchemaIdx==='number')&&(cov_20vwq19i5l().b[26][1]++,parentSchema?.type==='union')){cov_20vwq19i5l().b[25][0]++;cov_20vwq19i5l().s[74]++;parentSchema=parentSchema.options[parentSchemaIdx];}else{cov_20vwq19i5l().b[25][1]++;}cov_20vwq19i5l().s[75]++;switch(parentSchema?.type){case'object':cov_20vwq19i5l().b[27][0]++;cov_20vwq19i5l().s[76]++;currentSchema=/** @type {import('zodex').SzObject} */parentSchema.properties[(/** @type {string} */arrayOrObjectPropertyName)];cov_20vwq19i5l().s[77]++;if(!currentSchema){cov_20vwq19i5l().b[28][0]++;cov_20vwq19i5l().s[78]++;currentSchema=/** @type {import('zodex').SzObject} */parentSchema.catchall;cov_20vwq19i5l().s[79]++;mustBeOptional=true;}else{cov_20vwq19i5l().b[28][1]++;}cov_20vwq19i5l().s[80]++;break;case'array':cov_20vwq19i5l().b[27][1]++;cov_20vwq19i5l().s[81]++;currentSchema=/** @type {import('zodex').SzArray} */parentSchema.element;cov_20vwq19i5l().s[82]++;break;case'set':cov_20vwq19i5l().b[27][2]++;cov_20vwq19i5l().s[83]++;currentSchema=/** @type {import('zodex').SzSet} */parentSchema.value;cov_20vwq19i5l().s[84]++;break;case'effect':cov_20vwq19i5l().b[27][3]++;cov_20vwq19i5l().s[85]++;currentSchema=/** @type {import('zodex').SzEffect} */parentSchema.inner;cov_20vwq19i5l().s[86]++;break;// Todo: Reenable
// // eslint-disable-next-line sonarjs/no-duplicated-branches -- Maintenance
// case 'promise':
//   currentSchema = /** @type {import('zodex').SzPromise} */ (
//     parentSchema
//   ).value;
//   break;
case'tuple':cov_20vwq19i5l().b[27][4]++;cov_20vwq19i5l().s[87]++;currentSchema=/** @type {import('zodex').SzTuple} */(cov_20vwq19i5l().b[29][0]++,parentSchema.items[Number(arrayOrObjectPropertyName)])??(cov_20vwq19i5l().b[29][1]++,/** @type {import('zodex').SzTuple} */parentSchema.rest);cov_20vwq19i5l().s[88]++;break;// Todo:
// 'record': key, value
// 'map': key, value
// 'function': args, returns
default:cov_20vwq19i5l().b[27][5]++;cov_20vwq19i5l().s[89]++;break;}/* istanbul ignore if -- Guard */cov_20vwq19i5l().s[90]++;if(!currentSchema){return{type:typesonType};}else{cov_20vwq19i5l().b[30][0]++;}const schemaObjects=(cov_20vwq19i5l().s[91]++,[...getTypesForSchema(/** @type {import('zodex').SzType} */currentSchema,/** @type {import('zodex').SzType} */stateObj.schemaContent)]);// console.log(
//   'vvv', v, currentSchema,
//   arrayOrObjectPropertyName, parentSchema, schemaObjects
// );
// console.log('schemaObjects', schemaObjects);
cov_20vwq19i5l().s[92]++;for(const[schemaIdx,schema]of schemaObjects.entries()){let unknownKeys;cov_20vwq19i5l().s[93]++;if(schema.type==='object'){cov_20vwq19i5l().b[31][0]++;cov_20vwq19i5l().s[94]++;({unknownKeys}=schema);// We don't want to eagerly match, e.g., if there are other objects
//  which include the optional properties; this could cause a problem,
//  however, if the tested object has extra non-standard properties
cov_20vwq19i5l().s[95]++;schema.unknownKeys='strict';}else{cov_20vwq19i5l().b[31][1]++;}const dezSchema=(cov_20vwq19i5l().s[96]++,dezerialize(schema,{originalShape:stateObj.schemaContent}));const parsed=(cov_20vwq19i5l().s[97]++,dezSchema.safeParse(v));cov_20vwq19i5l().s[98]++;if(schema.type==='object'){cov_20vwq19i5l().b[32][0]++;cov_20vwq19i5l().s[99]++;schema.unknownKeys=unknownKeys;}else{cov_20vwq19i5l().b[32][1]++;}// console.log('parsed', parsed.success, v, schema);
cov_20vwq19i5l().s[100]++;if(parsed.success){cov_20vwq19i5l().b[33][0]++;let type=(cov_20vwq19i5l().s[101]++,zodexToStructuredCloningTypeMap.get(schema.type));cov_20vwq19i5l().s[102]++;if((cov_20vwq19i5l().b[35][0]++,!type)&&(cov_20vwq19i5l().b[35][1]++,schema.type==='effect')){cov_20vwq19i5l().b[34][0]++;cov_20vwq19i5l().s[103]++;type=/** @type {import('../types.js').AvailableType} */schema.effects[0].name;}else{cov_20vwq19i5l().b[34][1]++;}const typeObject=(/** @type {Required<import('../types.js').TypeObject>} */cov_20vwq19i5l().s[104]++,types.getTypeObject(/** @type {import('../types.js').AvailableType} */type));cov_20vwq19i5l().s[105]++;if((cov_20vwq19i5l().b[37][0]++,typeObject.valueMatch)&&(cov_20vwq19i5l().b[37][1]++,typeObject.valueMatch(v))){cov_20vwq19i5l().b[36][0]++;cov_20vwq19i5l().s[106]++;// console.log(
//   'matched', v, v?.length, type, schema, schemaIdx, schemaObjects
// );
// console.log('ssss', !stateObj.rootUI ||
//   (stateObj.readonly || schemaObjects.length === 1),
//    schema, schemaObjects);
return{type,schemaIdx,// For `readonly`, we just want to show the current type (no
//   pull-down)
schema:(cov_20vwq19i5l().b[39][0]++,!stateObj.rootUI)||(cov_20vwq19i5l().b[39][1]++,stateObj.readonly)||(cov_20vwq19i5l().b[39][2]++,schemaObjects.length===1)?(cov_20vwq19i5l().b[38][0]++,schema):(cov_20vwq19i5l().b[38][1]++,{type:'union',options:schemaObjects}),mustBeOptional};}else{cov_20vwq19i5l().b[36][1]++;}}else{cov_20vwq19i5l().b[33][1]++;}}cov_20vwq19i5l().s[107]++;return{type:typesonType};},/* istanbul ignore next -- Not in use */types(){/* istanbul ignore next -- Not in use */return structuredCloning.types();},getTypesAndSchemasForState(types,state,schemaObject,schemaOriginal){cov_20vwq19i5l().f[6]++;cov_20vwq19i5l().s[108]++;if(!schemaObject){cov_20vwq19i5l().b[40][0]++;cov_20vwq19i5l().s[109]++;throw new Error('Missing schema object');}else{cov_20vwq19i5l().b[40][1]++;}// We don't care about the current schema, as these are inner types
cov_20vwq19i5l().s[110]++;if(state==='array'){cov_20vwq19i5l().b[41][0]++;cov_20vwq19i5l().s[111]++;return structuredCloning.getTypesAndSchemasForState(types,state,schemaObject,schemaOriginal);}else{cov_20vwq19i5l().b[41][1]++;}// alert(JSON.stringify(schemaObject));
const schemaObjects=(cov_20vwq19i5l().s[112]++,[...getTypesForSchema(schemaObject,/** @type {import('zodex').SzType} */(cov_20vwq19i5l().b[42][0]++,schemaOriginal)??(cov_20vwq19i5l().b[42][1]++,schemaObject))]);// Note: Zod does not support array/object references
// Todo: implement schema restrictions like tuple on array, record on object
// Todo: Fix `iterate` for schemas (e.g., inject a value method in demo)
/** @type {AvailableZodexType[]} */const typeArray=(cov_20vwq19i5l().s[113]++,schemaObjects.map(({type})=>{cov_20vwq19i5l().f[7]++;cov_20vwq19i5l().s[114]++;return type;}));cov_20vwq19i5l().s[115]++;return{schemaObjects,types:typeArray.map((item,idx)=>{cov_20vwq19i5l().f[8]++;cov_20vwq19i5l().s[116]++;if(item==='effect'){cov_20vwq19i5l().b[43][0]++;cov_20vwq19i5l().s[117]++;return/** @type {import('../types.js').AvailableType} */ /** @type {import('zodex').SzEffect} */schemaObjects[idx].effects[0].name;}else{cov_20vwq19i5l().b[43][1]++;}cov_20vwq19i5l().s[118]++;return/** @type {import('../types.js').AvailableType} */zodexToStructuredCloningTypeMap.get(item);})};}});export default schema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,