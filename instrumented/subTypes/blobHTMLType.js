function cov_2m1c9pxpr0(){var path="/Users/brett/jsoe/src/subTypes/blobHTMLType.js";var hash="2c20fdfa8e2830116b2a1807e0a0568fe48216d4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/subTypes/blobHTMLType.js",statementMap:{"0":{start:{line:19,column:21},end:{line:188,column:1}},"1":{start:{line:23,column:21},end:{line:23,column:48}},"2":{start:{line:34,column:32},end:{line:34,column:50}},"3":{start:{line:35,column:37},end:{line:35,column:70}},"4":{start:{line:37,column:6},end:{line:47,column:7}},"5":{start:{line:38,column:27},end:{line:38,column:38}},"6":{start:{line:39,column:8},end:{line:39,column:48}},"7":{start:{line:40,column:19},end:{line:40,column:37}},"8":{start:{line:41,column:8},end:{line:44,column:9}},"9":{start:{line:41,column:21},end:{line:41,column:22}},"10":{start:{line:43,column:10},end:{line:43,column:43}},"11":{start:{line:46,column:8},end:{line:46,column:19}},"12":{start:{line:48,column:6},end:{line:48,column:48}},"13":{start:{line:50,column:4},end:{line:52,column:6}},"14":{start:{line:61,column:4},end:{line:66,column:12}},"15":{start:{line:69,column:4},end:{line:69,column:29}},"16":{start:{line:72,column:19},end:{line:72,column:45}},"17":{start:{line:73,column:36},end:{line:75,column:59}},"18":{start:{line:81,column:16},end:{line:95,column:6}},"19":{start:{line:89,column:10},end:{line:92,column:15}},"20":{start:{line:98,column:4},end:{line:116,column:6}},"21":{start:{line:101,column:6},end:{line:101,column:43}},"22":{start:{line:102,column:6},end:{line:105,column:14}},"23":{start:{line:106,column:6},end:{line:106,column:23}},"24":{start:{line:117,column:4},end:{line:117,column:17}},"25":{start:{line:125,column:8},end:{line:125,column:60}},"26":{start:{line:127,column:4},end:{line:132,column:6}},"27":{start:{line:134,column:17},end:{line:140,column:5}},"28":{start:{line:141,column:4},end:{line:185,column:7}},"29":{start:{line:156,column:6},end:{line:178,column:9}},"30":{start:{line:179,column:6},end:{line:179,column:62}},"31":{start:{line:180,column:6},end:{line:184,column:7}},"32":{start:{line:181,column:66},end:{line:183,column:34}},"33":{start:{line:186,column:4},end:{line:186,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:14},end:{line:23,column:15}},loc:{start:{line:23,column:21},end:{line:23,column:48}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:14},end:{line:53,column:3}},line:25},"2":{name:"dataURIToBlob",decl:{start:{line:32,column:13},end:{line:32,column:26}},loc:{start:{line:32,column:37},end:{line:49,column:5}},line:32},"3":{name:"(anonymous_3)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:20},end:{line:67,column:3}},line:60},"4":{name:"(anonymous_4)",decl:{start:{line:68,column:2},end:{line:68,column:3}},loc:{start:{line:68,column:24},end:{line:70,column:3}},line:68},"5":{name:"(anonymous_5)",decl:{start:{line:71,column:2},end:{line:71,column:3}},loc:{start:{line:71,column:33},end:{line:77,column:3}},line:71},"6":{name:"(anonymous_6)",decl:{start:{line:78,column:2},end:{line:78,column:3}},loc:{start:{line:78,column:41},end:{line:119,column:3}},line:78},"7":{name:"(anonymous_7)",decl:{start:{line:88,column:8},end:{line:88,column:9}},loc:{start:{line:88,column:17},end:{line:93,column:9}},line:88},"8":{name:"(anonymous_8)",decl:{start:{line:98,column:30},end:{line:98,column:31}},loc:{start:{line:100,column:9},end:{line:109,column:5}},line:100},"9":{name:"(anonymous_9)",decl:{start:{line:120,column:2},end:{line:120,column:3}},loc:{start:{line:120,column:34},end:{line:187,column:3}},line:120},"10":{name:"(anonymous_10)",decl:{start:{line:141,column:15},end:{line:141,column:16}},loc:{start:{line:141,column:21},end:{line:185,column:5}},line:141}},branchMap:{"0":{loc:{start:{line:23,column:21},end:{line:23,column:48}},type:"binary-expr",locations:[{start:{line:23,column:21},end:{line:23,column:22}},{start:{line:23,column:26},end:{line:23,column:48}}],line:23},"1":{loc:{start:{line:37,column:6},end:{line:47,column:7}},type:"if",locations:[{start:{line:37,column:6},end:{line:47,column:7}},{start:{line:45,column:13},end:{line:47,column:7}}],line:37},"2":{loc:{start:{line:83,column:13},end:{line:83,column:67}},type:"cond-expr",locations:[{start:{line:83,column:49},end:{line:83,column:55}},{start:{line:83,column:58},end:{line:83,column:67}}],line:83},"3":{loc:{start:{line:85,column:6},end:{line:85,column:49}},type:"binary-expr",locations:[{start:{line:85,column:6},end:{line:85,column:39}},{start:{line:85,column:43},end:{line:85,column:49}}],line:85},"4":{loc:{start:{line:180,column:6},end:{line:184,column:7}},type:"if",locations:[{start:{line:180,column:6},end:{line:184,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:180}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2c20fdfa8e2830116b2a1807e0a0568fe48216d4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2m1c9pxpr0=function(){return actualCoverage;};}return actualCoverage;}cov_2m1c9pxpr0();/* globals sceditor -- No ESM version yet */import{jml}from'../vendor-imports.js';import{$e}from'../utils/templateUtils.js';import dialogs from'../utils/dialogs.js';import{isNullish}from'../utils/types.js';/**
 * @typedef {HTMLTextAreaElement & {
 *   sceditorInstance: {val: (val?: string) => string|void}
 * }} SCEditorTextarea
 */ /**
 * @type {import('../types.js').TypeObject & {
 *   loadBlob: (blob: Blob) => Promise<string>
 * }}
 */const blobHTMLType=(cov_2m1c9pxpr0().s[0]++,{// Todo (low): Support other content-types
option:['Blob (text/html)'],stringRegex:/^data:text\/html(?:;base64)?,.*$/u,valueMatch:v=>{cov_2m1c9pxpr0().f[0]++;cov_2m1c9pxpr0().s[1]++;return(cov_2m1c9pxpr0().b[0][0]++,v)&&(cov_2m1c9pxpr0().b[0][1]++,v.type==='text/html');},superType:'blob',toValue(s){cov_2m1c9pxpr0().f[1]++;// Todo (low): `Blob` untested; use https://stackoverflow.com/a/30407840/271577 ?
/**
     *
     * @param {string} dataURI
     * @returns {Blob}
     */function dataURIToBlob(dataURI){cov_2m1c9pxpr0().f[2]++;// Adapted from https://stackoverflow.com/a/12300351/271577
const[mimeInfo,bytes]=(cov_2m1c9pxpr0().s[2]++,dataURI.split(','));const[mimeString,encoding]=(cov_2m1c9pxpr0().s[3]++,mimeInfo.split(':')[1].split(';'));let ab;cov_2m1c9pxpr0().s[4]++;if(encoding==='base64'){cov_2m1c9pxpr0().b[1][0]++;const byteString=(cov_2m1c9pxpr0().s[5]++,atob(bytes));cov_2m1c9pxpr0().s[6]++;ab=new ArrayBuffer(byteString.length);const ia=(cov_2m1c9pxpr0().s[7]++,new Uint8Array(ab));cov_2m1c9pxpr0().s[8]++;for(let i=(cov_2m1c9pxpr0().s[9]++,0);i<byteString.length;i++){cov_2m1c9pxpr0().s[10]++;// eslint-disable-next-line unicorn/prefer-code-point -- Only a byte
ia[i]=byteString.charCodeAt(i);}}else{cov_2m1c9pxpr0().b[1][1]++;cov_2m1c9pxpr0().s[11]++;ab=bytes;}cov_2m1c9pxpr0().s[12]++;return new Blob([ab],{type:mimeString});}cov_2m1c9pxpr0().s[13]++;return{value:dataURIToBlob(s)};},/* istanbul ignore next -- No dupe keys, array refs, or validation */getInput({root}){return/** @type {HTMLTextAreaElement} */$e(root,'textarea[name$=-blobHTML]');},getValue({root}){cov_2m1c9pxpr0().f[3]++;cov_2m1c9pxpr0().s[14]++;return/** @type {import('../types.js').ToValue} */this.toValue('data:text/html,'+/** @type {SCEditorTextarea} */this.getInput({root}).sceditorInstance.val()// this.getInput({root}).value
).value;},async loadBlob(blob){cov_2m1c9pxpr0().f[4]++;cov_2m1c9pxpr0().s[15]++;return await blob.text();},async setValue({root,value}){cov_2m1c9pxpr0().f[5]++;const result=(cov_2m1c9pxpr0().s[16]++,await this.loadBlob(value));/** @type {SCEditorTextarea} */cov_2m1c9pxpr0().s[17]++;this.getInput({root}).sceditorInstance.val(/** @type {string} */result);// this.getInput({root}).value = result;
},viewUI({value,specificSchemaObject}){cov_2m1c9pxpr0().f[6]++;/** @type {string} */let val;const div=(cov_2m1c9pxpr0().s[18]++,jml('div',{dataset:{type:'blobHTML'},title:specificSchemaObject?.description?(cov_2m1c9pxpr0().b[2][0]++,'HTML'):(cov_2m1c9pxpr0().b[2][1]++,undefined)},[(cov_2m1c9pxpr0().b[3][0]++,specificSchemaObject?.description)??(cov_2m1c9pxpr0().b[3][1]++,'HTML'),': ',['button',{$on:{click(){cov_2m1c9pxpr0().f[7]++;cov_2m1c9pxpr0().s[19]++;dialogs.alert({message:['div',['Source: ',['textarea',{class:'view-source'},[val]]]]});}}},['View source']]]));// eslint-disable-next-line @stylistic/max-len -- Long
// eslint-disable-next-line promise/prefer-await-to-then -- Not an async method
cov_2m1c9pxpr0().s[20]++;this.loadBlob(value).then(result=>{cov_2m1c9pxpr0().f[8]++;cov_2m1c9pxpr0().s[21]++;val=/** @type {string} */result;cov_2m1c9pxpr0().s[22]++;jml('iframe',{sandbox:'',srcdoc:val},div);cov_2m1c9pxpr0().s[23]++;return undefined;// eslint-disable-next-line @stylistic/max-len -- Long
// eslint-disable-next-line promise/prefer-await-to-then -- Not an async method
}).catch(/* istanbul ignore next -- How to simulate? */ // eslint-disable-next-line promise/prefer-await-to-callbacks -- Not async
err=>{// Todo: Show an error message?
console.error('Err',err);});cov_2m1c9pxpr0().s[24]++;return[div];// return ['i', [`data:text/html,${value}`]];
},editUI({typeNamespace,value}){cov_2m1c9pxpr0().f[9]++;const textarea=(/**
       * @type {SCEditorTextarea}
       */cov_2m1c9pxpr0().s[25]++,jml('textarea',{name:`${typeNamespace}-blobHTML`}));cov_2m1c9pxpr0().s[26]++;textarea.sceditorInstance={/* istanbul ignore next */val(){throw new Error('Not yet instantiated');}};const root=(cov_2m1c9pxpr0().s[27]++,jml('div',{dataset:{type:'blobHTML'}},[textarea]));cov_2m1c9pxpr0().s[28]++;setTimeout(()=>{cov_2m1c9pxpr0().f[10]++;cov_2m1c9pxpr0().s[29]++;// Push onto these: https://www.sceditor.com/documentation/formats/xhtml/
// sceditor.formats.xhtml.converters array
// sceditor.formats.xhtml.allowedAttribs object
// sceditor.formats.xhtml.disallowedAttribs object
// sceditor.formats.xhtml.allowedTags array
// sceditor.formats.xhtml.disallowedTags array
// console.log(
//  'sceditor.formats.xhtml.converters',
//  sceditor.formats.xhtml.converters.map((c) => Object.keys(c.tags))
// );
// console.log(
//   'sceditor.formats.xhtml.converters',
//   sceditor.formats.xhtml.converters.map((c) => c.conv.toString())
// );
sceditor.create(textarea,{// Todo (low): "dragdrop" plugin is for file handling (could
//   treat as Blobs but would need to reference them)
// "autoyoutube" plugin may be ok
// toolbarExclude (default of `null` doesn't exclude any)
// Must also add languages files (after editor files but
//   before editor creation)
// locale: 'en',
// emoticons: {}, icons, //
// width, height, resizeMinWidth, resizeMinHeight, autoExpand: true,
// autofocus, autofocusEnd
// id, spellcheck, toolbarContainer, dropDownCss, fonts, colors
// disableBlockRemove, parserOptions
width:'1000px',height:'225px',// auto-updates original textbox when the editor loses focus
autoUpdate:true,resizeMaxHeight:-1,resizeMaxWidth:-1,plugins:'xhtml,plaintext,undo',emoticonsRoot:'node_modules/sceditor/',style:'node_modules/sceditor/minified/themes/content/default.min.css'});cov_2m1c9pxpr0().s[30]++;textarea.sceditorInstance=sceditor.instance(textarea);cov_2m1c9pxpr0().s[31]++;if(!isNullish(value)){cov_2m1c9pxpr0().b[4][0]++;cov_2m1c9pxpr0().s[32]++;/** @type {Required<import('../types.js').TypeObject>} */this.setValue({root,value});}else{cov_2m1c9pxpr0().b[4][1]++;}});cov_2m1c9pxpr0().s[33]++;return[root];}});export default blobHTMLType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,