function cov_46dnclk9m(){var path="/Users/brett/jsoe/src/typeChoices.js";var hash="03ed2bb06787631ee0b833b50c9b138038fa51df";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/typeChoices.js",statementMap:{"0":{start:{line:98,column:32},end:{line:385,column:1}},"1":{start:{line:117,column:28},end:{line:123,column:5}},"2":{start:{line:124,column:24},end:{line:124,column:41}},"3":{start:{line:125,column:21},end:{line:125,column:52}},"4":{start:{line:130,column:20},end:{line:145,column:3}},"5":{start:{line:132,column:6},end:{line:132,column:41}},"6":{start:{line:134,column:4},end:{line:144,column:6}},"7":{start:{line:146,column:48},end:{line:295,column:4}},"8":{start:{line:157,column:8},end:{line:157,column:26}},"9":{start:{line:158,column:8},end:{line:158,column:26}},"10":{start:{line:159,column:8},end:{line:159,column:64}},"11":{start:{line:165,column:8},end:{line:165,column:26}},"12":{start:{line:166,column:8},end:{line:166,column:26}},"13":{start:{line:171,column:30},end:{line:171,column:34}},"14":{start:{line:172,column:8},end:{line:172,column:33}},"15":{start:{line:173,column:25},end:{line:173,column:43}},"16":{start:{line:174,column:8},end:{line:177,column:9}},"17":{start:{line:176,column:10},end:{line:176,column:56}},"18":{start:{line:178,column:8},end:{line:183,column:9}},"19":{start:{line:179,column:10},end:{line:179,column:41}},"20":{start:{line:180,column:10},end:{line:182,column:13}},"21":{start:{line:181,column:12},end:{line:181,column:39}},"22":{start:{line:186,column:26},end:{line:186,column:46}},"23":{start:{line:188,column:8},end:{line:190,column:9}},"24":{start:{line:191,column:8},end:{line:191,column:47}},"25":{start:{line:198,column:30},end:{line:198,column:34}},"26":{start:{line:200,column:8},end:{line:202,column:9}},"27":{start:{line:201,column:10},end:{line:201,column:17}},"28":{start:{line:203,column:22},end:{line:203,column:40}},"29":{start:{line:209,column:8},end:{line:221,column:11}},"30":{start:{line:222,column:8},end:{line:222,column:34}},"31":{start:{line:223,column:8},end:{line:223,column:25}},"32":{start:{line:224,column:8},end:{line:224,column:37}},"33":{start:{line:226,column:8},end:{line:226,column:47}},"34":{start:{line:231,column:8},end:{line:231,column:38}},"35":{start:{line:232,column:8},end:{line:232,column:34}},"36":{start:{line:238,column:26},end:{line:238,column:46}},"37":{start:{line:239,column:8},end:{line:239,column:38}},"38":{start:{line:240,column:8},end:{line:240,column:31}},"39":{start:{line:243,column:8},end:{line:243,column:39}},"40":{start:{line:246,column:8},end:{line:246,column:46}},"41":{start:{line:252,column:30},end:{line:252,column:34}},"42":{start:{line:253,column:26},end:{line:253,column:46}},"43":{start:{line:254,column:8},end:{line:256,column:9}},"44":{start:{line:255,column:10},end:{line:255,column:23}},"45":{start:{line:257,column:23},end:{line:257,column:50}},"46":{start:{line:258,column:8},end:{line:260,column:11}},"47":{start:{line:266,column:6},end:{line:266,column:27}},"48":{start:{line:267,column:43},end:{line:274,column:9}},"49":{start:{line:275,column:43},end:{line:275,column:63}},"50":{start:{line:285,column:8},end:{line:292,column:10}},"51":{start:{line:296,column:2},end:{line:341,column:3}},"52":{start:{line:297,column:4},end:{line:300,column:7}},"53":{start:{line:298,column:6},end:{line:298,column:28}},"54":{start:{line:299,column:6},end:{line:299,column:45}},"55":{start:{line:301,column:9},end:{line:341,column:3}},"56":{start:{line:302,column:4},end:{line:340,column:7}},"57":{start:{line:303,column:6},end:{line:308,column:7}},"58":{start:{line:307,column:8},end:{line:307,column:19}},"59":{start:{line:309,column:6},end:{line:339,column:7}},"60":{start:{line:310,column:27},end:{line:322,column:9}},"61":{start:{line:324,column:10},end:{line:326,column:12}},"62":{start:{line:328,column:81},end:{line:330,column:56}},"63":{start:{line:343,column:24},end:{line:343,column:60}},"64":{start:{line:345,column:2},end:{line:384,column:4}},"65":{start:{line:357,column:8},end:{line:357,column:43}},"66":{start:{line:359,column:6},end:{line:359,column:40}},"67":{start:{line:365,column:8},end:{line:365,column:43}},"68":{start:{line:367,column:51},end:{line:367,column:71}},"69":{start:{line:368,column:6},end:{line:368,column:57}},"70":{start:{line:374,column:8},end:{line:377,column:9}},"71":{start:{line:379,column:19},end:{line:379,column:51}},"72":{start:{line:380,column:79},end:{line:382,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:98,column:32},end:{line:98,column:33}},loc:{start:{line:115,column:6},end:{line:385,column:1}},line:115},"1":{name:"(anonymous_1)",decl:{start:{line:130,column:20},end:{line:130,column:21}},loc:{start:{line:130,column:47},end:{line:145,column:3}},line:130},"2":{name:"(anonymous_2)",decl:{start:{line:156,column:6},end:{line:156,column:7}},loc:{start:{line:156,column:51},end:{line:160,column:7}},line:156},"3":{name:"(anonymous_3)",decl:{start:{line:164,column:6},end:{line:164,column:7}},loc:{start:{line:164,column:32},end:{line:167,column:7}},line:164},"4":{name:"(anonymous_4)",decl:{start:{line:170,column:6},end:{line:170,column:7}},loc:{start:{line:170,column:20},end:{line:184,column:7}},line:170},"5":{name:"(anonymous_5)",decl:{start:{line:180,column:64},end:{line:180,column:65}},loc:{start:{line:180,column:76},end:{line:182,column:11}},line:180},"6":{name:"(anonymous_6)",decl:{start:{line:185,column:6},end:{line:185,column:7}},loc:{start:{line:185,column:22},end:{line:192,column:7}},line:185},"7":{name:"(anonymous_7)",decl:{start:{line:195,column:6},end:{line:195,column:7}},loc:{start:{line:197,column:14},end:{line:227,column:7}},line:197},"8":{name:"(anonymous_8)",decl:{start:{line:230,column:6},end:{line:230,column:7}},loc:{start:{line:230,column:41},end:{line:233,column:7}},line:230},"9":{name:"(anonymous_9)",decl:{start:{line:237,column:6},end:{line:237,column:7}},loc:{start:{line:237,column:28},end:{line:241,column:7}},line:237},"10":{name:"(anonymous_10)",decl:{start:{line:242,column:6},end:{line:242,column:7}},loc:{start:{line:242,column:23},end:{line:244,column:7}},line:242},"11":{name:"(anonymous_11)",decl:{start:{line:245,column:6},end:{line:245,column:7}},loc:{start:{line:245,column:21},end:{line:247,column:7}},line:245},"12":{name:"(anonymous_12)",decl:{start:{line:251,column:6},end:{line:251,column:7}},loc:{start:{line:251,column:19},end:{line:261,column:7}},line:251},"13":{name:"(anonymous_13)",decl:{start:{line:263,column:10},end:{line:263,column:11}},loc:{start:{line:263,column:21},end:{line:276,column:5}},line:263},"14":{name:"(anonymous_14)",decl:{start:{line:284,column:6},end:{line:284,column:7}},loc:{start:{line:284,column:35},end:{line:293,column:7}},line:284},"15":{name:"(anonymous_15)",decl:{start:{line:297,column:15},end:{line:297,column:16}},loc:{start:{line:297,column:21},end:{line:300,column:5}},line:297},"16":{name:"(anonymous_16)",decl:{start:{line:302,column:15},end:{line:302,column:16}},loc:{start:{line:302,column:27},end:{line:340,column:5}},line:302},"17":{name:"(anonymous_17)",decl:{start:{line:355,column:4},end:{line:355,column:5}},loc:{start:{line:355,column:15},end:{line:360,column:5}},line:355},"18":{name:"(anonymous_18)",decl:{start:{line:363,column:4},end:{line:363,column:5}},loc:{start:{line:363,column:22},end:{line:369,column:5}},line:363},"19":{name:"(anonymous_19)",decl:{start:{line:372,column:4},end:{line:372,column:5}},loc:{start:{line:372,column:37},end:{line:383,column:5}},line:372}},branchMap:{"0":{loc:{start:{line:99,column:2},end:{line:99,column:20}},type:"default-arg",locations:[{start:{line:99,column:16},end:{line:99,column:20}}],line:99},"1":{loc:{start:{line:103,column:2},end:{line:103,column:18}},type:"default-arg",locations:[{start:{line:103,column:13},end:{line:103,column:18}}],line:103},"2":{loc:{start:{line:110,column:2},end:{line:110,column:25}},type:"default-arg",locations:[{start:{line:110,column:12},end:{line:110,column:25}}],line:110},"3":{loc:{start:{line:111,column:2},end:{line:111,column:21}},type:"default-arg",locations:[{start:{line:111,column:10},end:{line:111,column:21}}],line:111},"4":{loc:{start:{line:117,column:28},end:{line:123,column:5}},type:"cond-expr",locations:[{start:{line:118,column:6},end:{line:120,column:5}},{start:{line:121,column:6},end:{line:123,column:5}}],line:117},"5":{loc:{start:{line:147,column:12},end:{line:147,column:53}},type:"binary-expr",locations:[{start:{line:147,column:12},end:{line:147,column:25}},{start:{line:147,column:29},end:{line:147,column:53}}],line:147},"6":{loc:{start:{line:148,column:42},end:{line:150,column:10}},type:"cond-expr",locations:[{start:{line:149,column:8},end:{line:149,column:28}},{start:{line:150,column:8},end:{line:150,column:10}}],line:148},"7":{loc:{start:{line:174,column:8},end:{line:177,column:9}},type:"if",locations:[{start:{line:174,column:8},end:{line:177,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:174},"8":{loc:{start:{line:178,column:8},end:{line:183,column:9}},type:"if",locations:[{start:{line:178,column:8},end:{line:183,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:178},"9":{loc:{start:{line:188,column:8},end:{line:190,column:9}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:188},"10":{loc:{start:{line:195,column:29},end:{line:197,column:12}},type:"default-arg",locations:[{start:{line:197,column:10},end:{line:197,column:12}}],line:195},"11":{loc:{start:{line:200,column:8},end:{line:202,column:9}},type:"if",locations:[{start:{line:200,column:8},end:{line:202,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:200},"12":{loc:{start:{line:214,column:20},end:{line:214,column:61}},type:"binary-expr",locations:[{start:{line:214,column:20},end:{line:214,column:48}},{start:{line:214,column:52},end:{line:214,column:61}}],line:214},"13":{loc:{start:{line:219,column:25},end:{line:219,column:56}},type:"binary-expr",locations:[{start:{line:219,column:25},end:{line:219,column:39}},{start:{line:219,column:43},end:{line:219,column:56}}],line:219},"14":{loc:{start:{line:246,column:15},end:{line:246,column:45}},type:"binary-expr",locations:[{start:{line:246,column:15},end:{line:246,column:22}},{start:{line:246,column:26},end:{line:246,column:45}}],line:246},"15":{loc:{start:{line:254,column:8},end:{line:256,column:9}},type:"if",locations:[{start:{line:254,column:8},end:{line:256,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:254},"16":{loc:{start:{line:268,column:22},end:{line:273,column:21}},type:"cond-expr",locations:[{start:{line:269,column:12},end:{line:272,column:12}},{start:{line:273,column:12},end:{line:273,column:21}}],line:268},"17":{loc:{start:{line:289,column:21},end:{line:289,column:44}},type:"cond-expr",locations:[{start:{line:289,column:34},end:{line:289,column:39}},{start:{line:289,column:42},end:{line:289,column:44}}],line:289},"18":{loc:{start:{line:296,column:2},end:{line:341,column:3}},type:"if",locations:[{start:{line:296,column:2},end:{line:341,column:3}},{start:{line:301,column:9},end:{line:341,column:3}}],line:296},"19":{loc:{start:{line:296,column:6},end:{line:296,column:45}},type:"binary-expr",locations:[{start:{line:296,column:6},end:{line:296,column:17}},{start:{line:296,column:21},end:{line:296,column:45}}],line:296},"20":{loc:{start:{line:301,column:9},end:{line:341,column:3}},type:"if",locations:[{start:{line:301,column:9},end:{line:341,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:301},"21":{loc:{start:{line:301,column:13},end:{line:301,column:59}},type:"binary-expr",locations:[{start:{line:301,column:13},end:{line:301,column:21}},{start:{line:301,column:26},end:{line:301,column:39}},{start:{line:301,column:43},end:{line:301,column:58}}],line:301},"22":{loc:{start:{line:303,column:6},end:{line:308,column:7}},type:"if",locations:[{start:{line:303,column:6},end:{line:308,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:303}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"03ed2bb06787631ee0b833b50c9b138038fa51df"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_46dnclk9m=function(){return actualCoverage;};}return actualCoverage;}cov_46dnclk9m();import{jml}from'./vendor-imports.js';import Formats from'./formats.js';import Types from'./types.js';import{$e,DOM}from'./utils/templateUtils.js';import dialogs from'./utils/dialogs.js';// This is technically just `import('./index.js').SetType`, but our
//   redirect file causes problems, so we redefine here
/**
 * @typedef {(cfg: {
 *   type: string,
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean
 * }) => void} SetType
 */ /**
 * @typedef {(info: {type: string, editUI: Element}) => void} AddTypeAndEditUI
 */ /**
 * @typedef {(info?: {
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   schemaObject?: import('./formatAndTypeChoices.js').ZodexSchema
 * }) => void} AddAndValidateEditUI
 */ /**
 * @typedef {() => void} SetStyles
 */ /**
 * @typedef {HTMLElement & {
 *   $addAndValidateEditUI: AddAndValidateEditUI,
 *   $setStyles: SetStyles
 * }} TypeChoicesElementAPI
 */ /**
 * @callback GetValue
 * @param {import('./types.js').StateObject} [stateObj] Will
 *   auto-set `typeNamespace` and `format`
 * @param {string} [currentPath]
 * @returns {import('./formats.js').StructuredCloneValue}
 */ /**
 * @callback GetType
 * @returns {string}
 */ /**
 * @callback ValidValuesSet
 * @returns {boolean}
 */ /**
 * @callback SetValue
 * @param {import('./formats.js').StructuredCloneValue} value
 * @param {import('./types.js').StateObject} stateObj
 * @returns {Promise<void>}
 */ /**
 * @callback BuildTypeChoices
 * @param {{
 *   autoTrigger?: boolean,
 *   format: import('./formats.js').AvailableFormat,
 *   typeNamespace?: string,
 *   value?: import('./formats.js').StructuredCloneValue,
 *   setValue?: boolean,
 *   state?: string,
 *   forcedState?: string,
 *   keySelectClass?: string,
 *   requireObject?: boolean,
 *   objectHasValue?: boolean,
 *   topRoot?: import('./types.js').RootElement,
 *   formats?: import('./formats.js').default
 *   types?: import('./types.js').default
 *   schema?: string,
 *   schemaOriginal?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   schemaContent?: import('./formatAndTypeChoices.js').ZodexSchema,
 * }} cfg
 * @returns {{
 *   domArray: [select: HTMLElement, typeContainer: HTMLElement],
 *   getValue: GetValue,
 *   getType: GetType,
 *   validValuesSet: ValidValuesSet,
 *   setValue: SetValue
 * }}
 */ /**
 * @type {BuildTypeChoices}
 */cov_46dnclk9m().s[0]++;export const buildTypeChoices=({autoTrigger=(cov_46dnclk9m().b[0][0]++,true),format,typeNamespace,value,setValue=(cov_46dnclk9m().b[1][0]++,false),state,// itemIndex = 0,
keySelectClass,requireObject,objectHasValue,topRoot,formats=(cov_46dnclk9m().b[2][0]++,new Formats()),types=(cov_46dnclk9m().b[3][0]++,new Types()),schema,schemaOriginal,schemaContent})=>{cov_46dnclk9m().f[0]++;// console.log('format', format, 'state', state, 'path', typeNamespace);
const typeAndSchemaInfo=(cov_46dnclk9m().s[1]++,requireObject?(cov_46dnclk9m().b[4][0]++,{typeOptions:[types.getOptionForType('object')],schemaObjects:undefined}):(cov_46dnclk9m().b[4][1]++,types.getTypeOptionsForFormatAndState(format,state,schemaContent,schemaOriginal)));const{typeOptions}=(cov_46dnclk9m().s[2]++,typeAndSchemaInfo);const schemaObjs=(cov_46dnclk9m().s[3]++,typeAndSchemaInfo.schemaObjects);let editUI;/** @type {GetValue} */cov_46dnclk9m().s[4]++;const $getValue=(stateObj,currentPath)=>{cov_46dnclk9m().f[1]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[5]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[6]++;return types.getValueForRoot(root,/** @type {import('./types.js').StateObject} */{typeNamespace,formats,format,types,...stateObj},currentPath);};const sel=(/** @type {HTMLSelectElement} */cov_46dnclk9m().s[7]++,jml('select',{hidden:(cov_46dnclk9m().b[5][0]++,requireObject)||(cov_46dnclk9m().b[5][1]++,typeOptions.length===1),class:`typeChoices-${typeNamespace}${keySelectClass?(cov_46dnclk9m().b[6][0]++,' '+keySelectClass):(cov_46dnclk9m().b[6][1]++,'')}`,// is: 'type-choices',
$custom:{$getValue,/** @type {SetType} */$setType({type,baseValue,bringIntoFocus}){cov_46dnclk9m().f[2]++;cov_46dnclk9m().s[8]++;this.value=type;cov_46dnclk9m().s[9]++;this.$setStyles();cov_46dnclk9m().s[10]++;this.$addAndValidateEditUI({baseValue,bringIntoFocus});},/**
       * @type {(info: {type: string}) => void} cfg
       */$setTypeNoEditUI({type}){cov_46dnclk9m().f[3]++;cov_46dnclk9m().s[11]++;this.value=type;cov_46dnclk9m().s[12]++;this.$setStyles();},/** @type {SetStyles} */$setStyles(){cov_46dnclk9m().f[4]++;const{value:type}=(cov_46dnclk9m().s[13]++,this);cov_46dnclk9m().s[14]++;this.dataset.type=type;// Used for styling
let ancestorEl=(cov_46dnclk9m().s[15]++,this.parentElement);cov_46dnclk9m().s[16]++;if(ancestorEl.nodeName.toLowerCase()!=='fieldset'){cov_46dnclk9m().b[7][0]++;cov_46dnclk9m().s[17]++;// Grandparent check added for optional items placeholder
ancestorEl=this.parentElement.parentElement;}else{cov_46dnclk9m().b[7][1]++;}cov_46dnclk9m().s[18]++;if(ancestorEl.nodeName.toLowerCase()==='fieldset'){cov_46dnclk9m().b[8][0]++;cov_46dnclk9m().s[19]++;ancestorEl.dataset.type=type;cov_46dnclk9m().s[20]++;DOM.filterChildElements(ancestorEl,'legend').forEach(legend=>{cov_46dnclk9m().f[5]++;cov_46dnclk9m().s[21]++;legend.dataset.type=type;});}else{cov_46dnclk9m().b[8][1]++;}},$getTypeRoot(){cov_46dnclk9m().f[6]++;const container=(cov_46dnclk9m().s[22]++,this.$getContainer());/* istanbul ignore if -- How to replicate? */cov_46dnclk9m().s[23]++;if(!container){return false;}else{cov_46dnclk9m().b[9][0]++;}cov_46dnclk9m().s[24]++;return $e(container,'div[data-type]');},/** @type {AddAndValidateEditUI} */$addAndValidateEditUI({baseValue,bringIntoFocus,schemaObject}=(cov_46dnclk9m().b[10][0]++,{})){cov_46dnclk9m().f[7]++;const{value:type}=(cov_46dnclk9m().s[25]++,this);cov_46dnclk9m().s[26]++;if(!type){cov_46dnclk9m().b[11][0]++;cov_46dnclk9m().s[27]++;return;}else{cov_46dnclk9m().b[11][1]++;}let topRoot=(cov_46dnclk9m().s[28]++,this.$getTopRoot());// Todo (low): Try to avoid need for `baseValue`
//    (needed by arrayNonindexKeys for setting an array
//    length and avoiding errors); could set all
//    values through here?
cov_46dnclk9m().s[29]++;editUI=types.getUIForModeAndType({readonly:false,typeNamespace,type,bringIntoFocus,hasValue:(cov_46dnclk9m().b[12][0]++,type==='arrayNonindexKeys')&&(cov_46dnclk9m().b[12][1]++,baseValue),value:baseValue,buildTypeChoices,format,topRoot,schemaContent:(cov_46dnclk9m().b[13][0]++,schemaOriginal)??(cov_46dnclk9m().b[13][1]++,schemaContent),specificSchemaObject:schemaObject});cov_46dnclk9m().s[30]++;this.$addEditUI({editUI});cov_46dnclk9m().s[31]++;this.$validate();cov_46dnclk9m().s[32]++;topRoot=this.$getTopRoot();// May be existing now
// Needed; Array/object ref somewhere could now be valid or invalid
cov_46dnclk9m().s[33]++;types.validateAllReferences({topRoot});},/** @type {AddTypeAndEditUI} */$addTypeAndEditUI({type,editUI}){cov_46dnclk9m().f[8]++;cov_46dnclk9m().s[34]++;this.$setTypeNoEditUI({type});cov_46dnclk9m().s[35]++;this.$addEditUI({editUI});},/**
       * @type {(info: {editUI: HTMLElement}) => void}
       */$addEditUI({editUI}){cov_46dnclk9m().f[9]++;const container=(cov_46dnclk9m().s[36]++,this.$getContainer());cov_46dnclk9m().s[37]++;DOM.removeChildren(container);cov_46dnclk9m().s[38]++;jml(editUI,container);},$getContainer(){cov_46dnclk9m().f[10]++;cov_46dnclk9m().s[39]++;return this.nextElementSibling;},$getTopRoot(){cov_46dnclk9m().f[11]++;cov_46dnclk9m().s[40]++;return(cov_46dnclk9m().b[14][0]++,topRoot)||(cov_46dnclk9m().b[14][1]++,this.$getTypeRoot());},/**
       * @returns {boolean}
       */$validate(){cov_46dnclk9m().f[12]++;const{value:type}=(cov_46dnclk9m().s[41]++,this);const container=(cov_46dnclk9m().s[42]++,this.$getContainer());cov_46dnclk9m().s[43]++;if(!container.firstElementChild){cov_46dnclk9m().b[15][0]++;cov_46dnclk9m().s[44]++;return false;}else{cov_46dnclk9m().b[15][1]++;}const editUI=(cov_46dnclk9m().s[45]++,container.firstElementChild);cov_46dnclk9m().s[46]++;return types.validate({type,root:editUI,topRoot:this.$getTopRoot()});}},$on:{change(e){cov_46dnclk9m().f[13]++;cov_46dnclk9m().s[47]++;// We don't want form `onchange` to run `$checkForKeyDuplicates`
//   again (through `addAndValidateEditUI`->`validateAllReferences`)
e?.stopPropagation();/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[48]++;this.$addAndValidateEditUI({schemaObject:schemaObjs?(cov_46dnclk9m().b[16][0]++,schemaObjs[Number(/** @type {HTMLSelectElement} */e.target.selectedOptions[0].dataset.idx)]):(cov_46dnclk9m().b[16][1]++,undefined)});/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[49]++;this.$setStyles();}}},[['option',{value:''},['(Choose a type)']],// @ts-expect-error Apparent TS bug
...typeOptions.map(([optText,optAtts],idx)=>{cov_46dnclk9m().f[14]++;cov_46dnclk9m().s[50]++;return['option',{...optAtts,dataset:schemaObjs?(cov_46dnclk9m().b[17][0]++,{idx}):(cov_46dnclk9m().b[17][1]++,{})},[optText]];})]));cov_46dnclk9m().s[51]++;if((cov_46dnclk9m().b[19][0]++,autoTrigger)&&(cov_46dnclk9m().b[19][1]++,typeOptions.length===1)){cov_46dnclk9m().b[18][0]++;cov_46dnclk9m().s[52]++;setTimeout(()=>{cov_46dnclk9m().f[15]++;cov_46dnclk9m().s[53]++;sel.selectedIndex=1;cov_46dnclk9m().s[54]++;sel.dispatchEvent(new Event('change'));});}else{cov_46dnclk9m().b[18][1]++;cov_46dnclk9m().s[55]++;if((cov_46dnclk9m().b[21][0]++,setValue)||(cov_46dnclk9m().b[21][1]++,requireObject)&&(cov_46dnclk9m().b[21][2]++,!objectHasValue)){cov_46dnclk9m().b[20][0]++;cov_46dnclk9m().s[56]++;setTimeout(async()=>{cov_46dnclk9m().f[16]++;cov_46dnclk9m().s[57]++;if(!setValue){cov_46dnclk9m().b[22][0]++;cov_46dnclk9m().s[58]++;// if (requireObject && !objectHasValue) {
// Todo (low): We could auto-populate keypath if has
//   keypath (and we probably also only want if
//   not autoincrement)
value={};}else{cov_46dnclk9m().b[22][1]++;}cov_46dnclk9m().s[59]++;try{const rootEditUI=(cov_46dnclk9m().s[60]++,await formats.getControlsForFormatAndValue(types,format,value,{readonly:false,typeNamespace,schema,schemaContent,formats,types}));const type=(cov_46dnclk9m().s[61]++,Types.getTypeForRoot(/** @type {HTMLDivElement} */rootEditUI));// eslint-disable-next-line @stylistic/max-len -- Long
/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[62]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}catch(err){/* istanbul ignore next -- At least some errors handled earlier */dialogs.alert({message:'The object to be added had types not supported '+'by the current format.'});/* istanbul ignore next -- How to trigger? */console.log('err',err);}});}else{cov_46dnclk9m().b[20][1]++;}}const typeContainer=(cov_46dnclk9m().s[63]++,jml('div',{class:'typeContainer'}));cov_46dnclk9m().s[64]++;return{domArray:[sel,typeContainer],/** @type {GetValue} */getValue:$getValue,/** @type {GetType} */getType(){cov_46dnclk9m().f[17]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[65]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[66]++;return Types.getTypeForRoot(root);},/** @type {ValidValuesSet} */validValuesSet(){cov_46dnclk9m().f[18]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[67]++,$e(typeContainer,'div[data-type]'));const form=(/** @type {HTMLFormElement} */cov_46dnclk9m().s[68]++,root.closest('form'));cov_46dnclk9m().s[69]++;return Types.validValuesSet({form,typeNamespace});},/** @type {SetValue} */async setValue(value,stateObj){cov_46dnclk9m().f[19]++;const rootEditUI=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[70]++,await formats.getControlsForFormatAndValue(types,format,value,stateObj));const type=(cov_46dnclk9m().s[71]++,Types.getTypeForRoot(rootEditUI));/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[72]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}};};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,