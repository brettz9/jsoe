function cov_46dnclk9m(){var path="/Users/brett/jsoe/src/typeChoices.js";var hash="da7498b6c9871745096d947aa6adf97adb593e4c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/typeChoices.js",statementMap:{"0":{start:{line:104,column:32},end:{line:406,column:1}},"1":{start:{line:123,column:28},end:{line:129,column:5}},"2":{start:{line:130,column:24},end:{line:130,column:41}},"3":{start:{line:131,column:21},end:{line:131,column:52}},"4":{start:{line:136,column:20},end:{line:151,column:3}},"5":{start:{line:138,column:6},end:{line:138,column:41}},"6":{start:{line:140,column:4},end:{line:150,column:6}},"7":{start:{line:152,column:48},end:{line:313,column:4}},"8":{start:{line:163,column:8},end:{line:163,column:26}},"9":{start:{line:164,column:8},end:{line:164,column:26}},"10":{start:{line:165,column:8},end:{line:165,column:77}},"11":{start:{line:174,column:8},end:{line:179,column:9}},"12":{start:{line:175,column:22},end:{line:175,column:56}},"13":{start:{line:176,column:10},end:{line:176,column:39}},"14":{start:{line:178,column:10},end:{line:178,column:28}},"15":{start:{line:180,column:8},end:{line:180,column:26}},"16":{start:{line:185,column:30},end:{line:185,column:34}},"17":{start:{line:186,column:8},end:{line:186,column:33}},"18":{start:{line:187,column:25},end:{line:187,column:43}},"19":{start:{line:188,column:8},end:{line:191,column:9}},"20":{start:{line:190,column:10},end:{line:190,column:56}},"21":{start:{line:192,column:8},end:{line:197,column:9}},"22":{start:{line:193,column:10},end:{line:193,column:41}},"23":{start:{line:194,column:10},end:{line:196,column:13}},"24":{start:{line:195,column:12},end:{line:195,column:39}},"25":{start:{line:200,column:26},end:{line:200,column:46}},"26":{start:{line:202,column:8},end:{line:204,column:9}},"27":{start:{line:205,column:8},end:{line:205,column:47}},"28":{start:{line:212,column:30},end:{line:212,column:34}},"29":{start:{line:214,column:8},end:{line:216,column:9}},"30":{start:{line:215,column:10},end:{line:215,column:17}},"31":{start:{line:217,column:22},end:{line:217,column:40}},"32":{start:{line:223,column:8},end:{line:235,column:11}},"33":{start:{line:236,column:8},end:{line:236,column:34}},"34":{start:{line:237,column:8},end:{line:239,column:11}},"35":{start:{line:240,column:8},end:{line:240,column:37}},"36":{start:{line:242,column:8},end:{line:242,column:47}},"37":{start:{line:247,column:8},end:{line:247,column:54}},"38":{start:{line:248,column:8},end:{line:248,column:34}},"39":{start:{line:254,column:26},end:{line:254,column:46}},"40":{start:{line:255,column:8},end:{line:255,column:38}},"41":{start:{line:256,column:8},end:{line:256,column:31}},"42":{start:{line:259,column:8},end:{line:259,column:39}},"43":{start:{line:262,column:8},end:{line:262,column:46}},"44":{start:{line:269,column:30},end:{line:269,column:34}},"45":{start:{line:270,column:26},end:{line:270,column:46}},"46":{start:{line:271,column:8},end:{line:273,column:9}},"47":{start:{line:272,column:10},end:{line:272,column:23}},"48":{start:{line:274,column:23},end:{line:274,column:50}},"49":{start:{line:275,column:8},end:{line:278,column:11}},"50":{start:{line:284,column:6},end:{line:284,column:27}},"51":{start:{line:285,column:43},end:{line:292,column:9}},"52":{start:{line:293,column:43},end:{line:293,column:63}},"53":{start:{line:303,column:8},end:{line:310,column:10}},"54":{start:{line:314,column:2},end:{line:362,column:3}},"55":{start:{line:315,column:4},end:{line:318,column:7}},"56":{start:{line:316,column:6},end:{line:316,column:28}},"57":{start:{line:317,column:6},end:{line:317,column:45}},"58":{start:{line:319,column:9},end:{line:362,column:3}},"59":{start:{line:320,column:4},end:{line:361,column:7}},"60":{start:{line:321,column:6},end:{line:326,column:7}},"61":{start:{line:325,column:8},end:{line:325,column:19}},"62":{start:{line:327,column:6},end:{line:360,column:7}},"63":{start:{line:331,column:12},end:{line:343,column:9}},"64":{start:{line:345,column:10},end:{line:347,column:12}},"65":{start:{line:349,column:81},end:{line:351,column:72}},"66":{start:{line:364,column:24},end:{line:364,column:60}},"67":{start:{line:366,column:2},end:{line:405,column:4}},"68":{start:{line:378,column:8},end:{line:378,column:43}},"69":{start:{line:380,column:6},end:{line:380,column:40}},"70":{start:{line:386,column:8},end:{line:386,column:43}},"71":{start:{line:388,column:51},end:{line:388,column:71}},"72":{start:{line:389,column:6},end:{line:389,column:57}},"73":{start:{line:395,column:8},end:{line:398,column:17}},"74":{start:{line:400,column:19},end:{line:400,column:51}},"75":{start:{line:401,column:79},end:{line:403,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:104,column:32},end:{line:104,column:33}},loc:{start:{line:121,column:6},end:{line:406,column:1}},line:121},"1":{name:"(anonymous_1)",decl:{start:{line:136,column:20},end:{line:136,column:21}},loc:{start:{line:136,column:47},end:{line:151,column:3}},line:136},"2":{name:"(anonymous_2)",decl:{start:{line:162,column:6},end:{line:162,column:7}},loc:{start:{line:162,column:64},end:{line:166,column:7}},line:162},"3":{name:"(anonymous_3)",decl:{start:{line:173,column:6},end:{line:173,column:7}},loc:{start:{line:173,column:48},end:{line:181,column:7}},line:173},"4":{name:"(anonymous_4)",decl:{start:{line:184,column:6},end:{line:184,column:7}},loc:{start:{line:184,column:20},end:{line:198,column:7}},line:184},"5":{name:"(anonymous_5)",decl:{start:{line:194,column:64},end:{line:194,column:65}},loc:{start:{line:194,column:76},end:{line:196,column:11}},line:194},"6":{name:"(anonymous_6)",decl:{start:{line:199,column:6},end:{line:199,column:7}},loc:{start:{line:199,column:22},end:{line:206,column:7}},line:199},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:6},end:{line:209,column:7}},loc:{start:{line:211,column:14},end:{line:243,column:7}},line:211},"8":{name:"(anonymous_8)",decl:{start:{line:246,column:6},end:{line:246,column:7}},loc:{start:{line:246,column:57},end:{line:249,column:7}},line:246},"9":{name:"(anonymous_9)",decl:{start:{line:253,column:6},end:{line:253,column:7}},loc:{start:{line:253,column:28},end:{line:257,column:7}},line:253},"10":{name:"(anonymous_10)",decl:{start:{line:258,column:6},end:{line:258,column:7}},loc:{start:{line:258,column:23},end:{line:260,column:7}},line:258},"11":{name:"(anonymous_11)",decl:{start:{line:261,column:6},end:{line:261,column:7}},loc:{start:{line:261,column:21},end:{line:263,column:7}},line:261},"12":{name:"(anonymous_12)",decl:{start:{line:268,column:6},end:{line:268,column:7}},loc:{start:{line:268,column:37},end:{line:279,column:7}},line:268},"13":{name:"(anonymous_13)",decl:{start:{line:281,column:10},end:{line:281,column:11}},loc:{start:{line:281,column:21},end:{line:294,column:5}},line:281},"14":{name:"(anonymous_14)",decl:{start:{line:302,column:6},end:{line:302,column:7}},loc:{start:{line:302,column:35},end:{line:311,column:7}},line:302},"15":{name:"(anonymous_15)",decl:{start:{line:315,column:15},end:{line:315,column:16}},loc:{start:{line:315,column:21},end:{line:318,column:5}},line:315},"16":{name:"(anonymous_16)",decl:{start:{line:320,column:15},end:{line:320,column:16}},loc:{start:{line:320,column:27},end:{line:361,column:5}},line:320},"17":{name:"(anonymous_17)",decl:{start:{line:376,column:4},end:{line:376,column:5}},loc:{start:{line:376,column:15},end:{line:381,column:5}},line:376},"18":{name:"(anonymous_18)",decl:{start:{line:384,column:4},end:{line:384,column:5}},loc:{start:{line:384,column:22},end:{line:390,column:5}},line:384},"19":{name:"(anonymous_19)",decl:{start:{line:393,column:4},end:{line:393,column:5}},loc:{start:{line:393,column:37},end:{line:404,column:5}},line:393}},branchMap:{"0":{loc:{start:{line:105,column:2},end:{line:105,column:20}},type:"default-arg",locations:[{start:{line:105,column:16},end:{line:105,column:20}}],line:105},"1":{loc:{start:{line:109,column:2},end:{line:109,column:18}},type:"default-arg",locations:[{start:{line:109,column:13},end:{line:109,column:18}}],line:109},"2":{loc:{start:{line:116,column:2},end:{line:116,column:25}},type:"default-arg",locations:[{start:{line:116,column:12},end:{line:116,column:25}}],line:116},"3":{loc:{start:{line:117,column:2},end:{line:117,column:21}},type:"default-arg",locations:[{start:{line:117,column:10},end:{line:117,column:21}}],line:117},"4":{loc:{start:{line:123,column:28},end:{line:129,column:5}},type:"cond-expr",locations:[{start:{line:124,column:6},end:{line:126,column:5}},{start:{line:127,column:6},end:{line:129,column:5}}],line:123},"5":{loc:{start:{line:153,column:12},end:{line:153,column:53}},type:"binary-expr",locations:[{start:{line:153,column:12},end:{line:153,column:25}},{start:{line:153,column:29},end:{line:153,column:53}}],line:153},"6":{loc:{start:{line:154,column:42},end:{line:156,column:10}},type:"cond-expr",locations:[{start:{line:155,column:8},end:{line:155,column:28}},{start:{line:156,column:8},end:{line:156,column:10}}],line:154},"7":{loc:{start:{line:174,column:8},end:{line:179,column:9}},type:"if",locations:[{start:{line:174,column:8},end:{line:179,column:9}},{start:{line:177,column:15},end:{line:179,column:9}}],line:174},"8":{loc:{start:{line:174,column:12},end:{line:174,column:40}},type:"binary-expr",locations:[{start:{line:174,column:12},end:{line:174,column:22}},{start:{line:174,column:26},end:{line:174,column:40}}],line:174},"9":{loc:{start:{line:188,column:8},end:{line:191,column:9}},type:"if",locations:[{start:{line:188,column:8},end:{line:191,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:188},"10":{loc:{start:{line:192,column:8},end:{line:197,column:9}},type:"if",locations:[{start:{line:192,column:8},end:{line:197,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:192},"11":{loc:{start:{line:202,column:8},end:{line:204,column:9}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:202},"12":{loc:{start:{line:209,column:29},end:{line:211,column:12}},type:"default-arg",locations:[{start:{line:211,column:10},end:{line:211,column:12}}],line:209},"13":{loc:{start:{line:214,column:8},end:{line:216,column:9}},type:"if",locations:[{start:{line:214,column:8},end:{line:216,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:214},"14":{loc:{start:{line:228,column:20},end:{line:228,column:61}},type:"binary-expr",locations:[{start:{line:228,column:20},end:{line:228,column:48}},{start:{line:228,column:52},end:{line:228,column:61}}],line:228},"15":{loc:{start:{line:233,column:25},end:{line:233,column:56}},type:"binary-expr",locations:[{start:{line:233,column:25},end:{line:233,column:39}},{start:{line:233,column:43},end:{line:233,column:56}}],line:233},"16":{loc:{start:{line:262,column:15},end:{line:262,column:45}},type:"binary-expr",locations:[{start:{line:262,column:15},end:{line:262,column:22}},{start:{line:262,column:26},end:{line:262,column:45}}],line:262},"17":{loc:{start:{line:268,column:17},end:{line:268,column:35}},type:"default-arg",locations:[{start:{line:268,column:33},end:{line:268,column:35}}],line:268},"18":{loc:{start:{line:271,column:8},end:{line:273,column:9}},type:"if",locations:[{start:{line:271,column:8},end:{line:273,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:271},"19":{loc:{start:{line:286,column:22},end:{line:291,column:21}},type:"cond-expr",locations:[{start:{line:287,column:12},end:{line:290,column:12}},{start:{line:291,column:12},end:{line:291,column:21}}],line:286},"20":{loc:{start:{line:307,column:21},end:{line:307,column:44}},type:"cond-expr",locations:[{start:{line:307,column:34},end:{line:307,column:39}},{start:{line:307,column:42},end:{line:307,column:44}}],line:307},"21":{loc:{start:{line:314,column:2},end:{line:362,column:3}},type:"if",locations:[{start:{line:314,column:2},end:{line:362,column:3}},{start:{line:319,column:9},end:{line:362,column:3}}],line:314},"22":{loc:{start:{line:314,column:6},end:{line:314,column:58}},type:"binary-expr",locations:[{start:{line:314,column:6},end:{line:314,column:17}},{start:{line:314,column:21},end:{line:314,column:45}},{start:{line:314,column:49},end:{line:314,column:58}}],line:314},"23":{loc:{start:{line:319,column:9},end:{line:362,column:3}},type:"if",locations:[{start:{line:319,column:9},end:{line:362,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:319},"24":{loc:{start:{line:319,column:13},end:{line:319,column:59}},type:"binary-expr",locations:[{start:{line:319,column:13},end:{line:319,column:21}},{start:{line:319,column:26},end:{line:319,column:39}},{start:{line:319,column:43},end:{line:319,column:58}}],line:319},"25":{loc:{start:{line:321,column:6},end:{line:326,column:7}},type:"if",locations:[{start:{line:321,column:6},end:{line:326,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:321}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0,0],"25":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"da7498b6c9871745096d947aa6adf97adb593e4c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_46dnclk9m=function(){return actualCoverage;};}return actualCoverage;}cov_46dnclk9m();import{jml}from'./vendor-imports.js';import Formats from'./formats.js';import Types from'./types.js';import{$e,DOM}from'./utils/templateUtils.js';import dialogs from'./utils/dialogs.js';// This is technically just `import('./index.js').SetType`, but our
//   redirect file causes problems, so we redefine here
/**
 * @typedef {(cfg: {
 *   type: string,
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   avoidReport?: boolean
 * }) => void} SetType
 */ /**
 * @typedef {(info: {
 *   type: string,
 *   editUI: Element,
 *   specificSchema?: import('zodex').SzType
 * }) => void} AddTypeAndEditUI
 */ /**
 * @typedef {(info?: {
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   schemaObject?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   avoidReport?: boolean
 * }) => void} AddAndValidateEditUI
 */ /**
 * @typedef {() => void} SetStyles
 */ /**
 * @typedef {HTMLElement & {
 *   $addAndValidateEditUI: AddAndValidateEditUI,
 *   $setStyles: SetStyles
 * }} TypeChoicesElementAPI
 */ /**
 * @callback GetValue
 * @param {import('./types.js').StateObject} [stateObj] Will
 *   auto-set `typeNamespace` and `format`
 * @param {string} [currentPath]
 * @returns {import('./formats.js').StructuredCloneValue}
 */ /**
 * @callback GetType
 * @returns {string}
 */ /**
 * @callback ValidValuesSet
 * @returns {boolean}
 */ /**
 * @callback SetValue
 * @param {import('./formats.js').StructuredCloneValue} value
 * @param {import('./types.js').StateObject} stateObj
 * @returns {Promise<void>}
 */ /**
 * @callback BuildTypeChoices
 * @param {{
 *   autoTrigger?: boolean,
 *   format: import('./formats.js').AvailableFormat,
 *   typeNamespace?: string,
 *   value?: import('./formats.js').StructuredCloneValue,
 *   setValue?: boolean,
 *   state?: string,
 *   forcedState?: string,
 *   keySelectClass?: string,
 *   requireObject?: boolean,
 *   objectHasValue?: boolean,
 *   topRoot?: import('./types.js').RootElement,
 *   formats?: import('./formats.js').default
 *   types?: import('./types.js').default
 *   schema?: string,
 *   schemaOriginal?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   schemaContent?: import('./formatAndTypeChoices.js').ZodexSchema,
 * }} cfg
 * @returns {{
 *   domArray: [select: HTMLElement, typeContainer: HTMLElement],
 *   getValue: GetValue,
 *   getType: GetType,
 *   validValuesSet: ValidValuesSet,
 *   setValue: SetValue
 * }}
 */ /**
 * @type {BuildTypeChoices}
 */cov_46dnclk9m().s[0]++;export const buildTypeChoices=({autoTrigger=(cov_46dnclk9m().b[0][0]++,true),format,typeNamespace,value,setValue=(cov_46dnclk9m().b[1][0]++,false),state,// itemIndex = 0,
keySelectClass,requireObject,objectHasValue,topRoot,formats=(cov_46dnclk9m().b[2][0]++,new Formats()),types=(cov_46dnclk9m().b[3][0]++,new Types()),schema,schemaOriginal,schemaContent})=>{cov_46dnclk9m().f[0]++;// console.log('format', format, 'state', state, 'path', typeNamespace);
const typeAndSchemaInfo=(cov_46dnclk9m().s[1]++,requireObject?(cov_46dnclk9m().b[4][0]++,{typeOptions:[types.getOptionForType('object')],schemaObjects:undefined}):(cov_46dnclk9m().b[4][1]++,types.getTypeOptionsForFormatAndState(format,state,schemaContent,schemaOriginal)));const{typeOptions}=(cov_46dnclk9m().s[2]++,typeAndSchemaInfo);const schemaObjs=(cov_46dnclk9m().s[3]++,typeAndSchemaInfo.schemaObjects);let editUI;/** @type {GetValue} */cov_46dnclk9m().s[4]++;const $getValue=(stateObj,currentPath)=>{cov_46dnclk9m().f[1]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[5]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[6]++;return types.getValueForRoot(root,/** @type {import('./types.js').StateObject} */{typeNamespace,formats,format,types,...stateObj},currentPath);};const sel=(/** @type {HTMLSelectElement} */cov_46dnclk9m().s[7]++,jml('select',{hidden:(cov_46dnclk9m().b[5][0]++,requireObject)||(cov_46dnclk9m().b[5][1]++,typeOptions.length===1),class:`typeChoices-${typeNamespace}${keySelectClass?(cov_46dnclk9m().b[6][0]++,' '+keySelectClass):(cov_46dnclk9m().b[6][1]++,'')}`,// is: 'type-choices',
$custom:{$getValue,/** @type {SetType} */$setType({type,baseValue,bringIntoFocus,avoidReport}){cov_46dnclk9m().f[2]++;cov_46dnclk9m().s[8]++;this.value=type;cov_46dnclk9m().s[9]++;this.$setStyles();cov_46dnclk9m().s[10]++;this.$addAndValidateEditUI({baseValue,bringIntoFocus,avoidReport});},/**
       * @type {(info: {
       *   type: string,
       *   specificSchema?: import('zodex').SzType
       * }) => void} cfg
       */$setTypeNoEditUI({type,specificSchema}){cov_46dnclk9m().f[3]++;cov_46dnclk9m().s[11]++;if((cov_46dnclk9m().b[8][0]++,schemaObjs)&&(cov_46dnclk9m().b[8][1]++,specificSchema)){cov_46dnclk9m().b[7][0]++;const idx=(cov_46dnclk9m().s[12]++,schemaObjs.indexOf(specificSchema));cov_46dnclk9m().s[13]++;this.selectedIndex=idx+1;}else{cov_46dnclk9m().b[7][1]++;cov_46dnclk9m().s[14]++;this.value=type;}cov_46dnclk9m().s[15]++;this.$setStyles();},/** @type {SetStyles} */$setStyles(){cov_46dnclk9m().f[4]++;const{value:type}=(cov_46dnclk9m().s[16]++,this);cov_46dnclk9m().s[17]++;this.dataset.type=type;// Used for styling
let ancestorEl=(cov_46dnclk9m().s[18]++,this.parentElement);cov_46dnclk9m().s[19]++;if(ancestorEl.nodeName.toLowerCase()!=='fieldset'){cov_46dnclk9m().b[9][0]++;cov_46dnclk9m().s[20]++;// Grandparent check added for optional items placeholder
ancestorEl=this.parentElement.parentElement;}else{cov_46dnclk9m().b[9][1]++;}cov_46dnclk9m().s[21]++;if(ancestorEl.nodeName.toLowerCase()==='fieldset'){cov_46dnclk9m().b[10][0]++;cov_46dnclk9m().s[22]++;ancestorEl.dataset.type=type;cov_46dnclk9m().s[23]++;DOM.filterChildElements(ancestorEl,'legend').forEach(legend=>{cov_46dnclk9m().f[5]++;cov_46dnclk9m().s[24]++;legend.dataset.type=type;});}else{cov_46dnclk9m().b[10][1]++;}},$getTypeRoot(){cov_46dnclk9m().f[6]++;const container=(cov_46dnclk9m().s[25]++,this.$getContainer());/* istanbul ignore if -- How to replicate? */cov_46dnclk9m().s[26]++;if(!container){return false;}else{cov_46dnclk9m().b[11][0]++;}cov_46dnclk9m().s[27]++;return $e(container,'div[data-type]');},/** @type {AddAndValidateEditUI} */$addAndValidateEditUI({baseValue,bringIntoFocus,schemaObject,avoidReport}=(cov_46dnclk9m().b[12][0]++,{})){cov_46dnclk9m().f[7]++;const{value:type}=(cov_46dnclk9m().s[28]++,this);cov_46dnclk9m().s[29]++;if(!type){cov_46dnclk9m().b[13][0]++;cov_46dnclk9m().s[30]++;return;}else{cov_46dnclk9m().b[13][1]++;}let topRoot=(cov_46dnclk9m().s[31]++,this.$getTopRoot());// Todo (low): Try to avoid need for `baseValue`
//    (needed by arrayNonindexKeys for setting an array
//    length and avoiding errors); could set all
//    values through here?
cov_46dnclk9m().s[32]++;editUI=types.getUIForModeAndType({readonly:false,typeNamespace,type,bringIntoFocus,hasValue:(cov_46dnclk9m().b[14][0]++,type==='arrayNonindexKeys')&&(cov_46dnclk9m().b[14][1]++,baseValue),value:baseValue,buildTypeChoices,format,topRoot,schemaContent:(cov_46dnclk9m().b[15][0]++,schemaOriginal)??(cov_46dnclk9m().b[15][1]++,schemaContent),specificSchemaObject:schemaObject});cov_46dnclk9m().s[33]++;this.$addEditUI({editUI});cov_46dnclk9m().s[34]++;this.$validate({avoidReport});cov_46dnclk9m().s[35]++;topRoot=this.$getTopRoot();// May be existing now
// Needed; Array/object ref somewhere could now be valid or invalid
cov_46dnclk9m().s[36]++;types.validateAllReferences({topRoot});},/** @type {AddTypeAndEditUI} */$addTypeAndEditUI({type,editUI,specificSchema}){cov_46dnclk9m().f[8]++;cov_46dnclk9m().s[37]++;this.$setTypeNoEditUI({type,specificSchema});cov_46dnclk9m().s[38]++;this.$addEditUI({editUI});},/**
       * @type {(info: {editUI: HTMLElement}) => void}
       */$addEditUI({editUI}){cov_46dnclk9m().f[9]++;const container=(cov_46dnclk9m().s[39]++,this.$getContainer());cov_46dnclk9m().s[40]++;DOM.removeChildren(container);cov_46dnclk9m().s[41]++;jml(editUI,container);},$getContainer(){cov_46dnclk9m().f[10]++;cov_46dnclk9m().s[42]++;return this.nextElementSibling;},$getTopRoot(){cov_46dnclk9m().f[11]++;cov_46dnclk9m().s[43]++;return(cov_46dnclk9m().b[16][0]++,topRoot)||(cov_46dnclk9m().b[16][1]++,this.$getTypeRoot());},/**
       * @param {{avoidReport?: boolean}} cfg
       * @returns {boolean}
       */$validate({avoidReport}=(cov_46dnclk9m().b[17][0]++,{})){cov_46dnclk9m().f[12]++;const{value:type}=(cov_46dnclk9m().s[44]++,this);const container=(cov_46dnclk9m().s[45]++,this.$getContainer());cov_46dnclk9m().s[46]++;if(!container.firstElementChild){cov_46dnclk9m().b[18][0]++;cov_46dnclk9m().s[47]++;return false;}else{cov_46dnclk9m().b[18][1]++;}const editUI=(cov_46dnclk9m().s[48]++,container.firstElementChild);cov_46dnclk9m().s[49]++;return types.validate({type,root:editUI,topRoot:this.$getTopRoot(),avoidReport});}},$on:{change(e){cov_46dnclk9m().f[13]++;cov_46dnclk9m().s[50]++;// We don't want form `onchange` to run `$checkForKeyDuplicates`
//   again (through `addAndValidateEditUI`->`validateAllReferences`)
e?.stopPropagation();/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[51]++;this.$addAndValidateEditUI({schemaObject:schemaObjs?(cov_46dnclk9m().b[19][0]++,schemaObjs[Number(/** @type {HTMLSelectElement} */e.target.selectedOptions[0].dataset.idx)]):(cov_46dnclk9m().b[19][1]++,undefined)});/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[52]++;this.$setStyles();}}},[['option',{value:''},['(Choose a type)']],// @ts-expect-error Apparent TS bug
...typeOptions.map(([optText,optAtts],idx)=>{cov_46dnclk9m().f[14]++;cov_46dnclk9m().s[53]++;return['option',{...optAtts,dataset:schemaObjs?(cov_46dnclk9m().b[20][0]++,{idx}):(cov_46dnclk9m().b[20][1]++,{})},[optText]];})]));cov_46dnclk9m().s[54]++;if((cov_46dnclk9m().b[22][0]++,autoTrigger)&&(cov_46dnclk9m().b[22][1]++,typeOptions.length===1)&&(cov_46dnclk9m().b[22][2]++,!setValue)){cov_46dnclk9m().b[21][0]++;cov_46dnclk9m().s[55]++;setTimeout(()=>{cov_46dnclk9m().f[15]++;cov_46dnclk9m().s[56]++;sel.selectedIndex=1;cov_46dnclk9m().s[57]++;sel.dispatchEvent(new Event('change'));});}else{cov_46dnclk9m().b[21][1]++;cov_46dnclk9m().s[58]++;if((cov_46dnclk9m().b[24][0]++,setValue)||(cov_46dnclk9m().b[24][1]++,requireObject)&&(cov_46dnclk9m().b[24][2]++,!objectHasValue)){cov_46dnclk9m().b[23][0]++;cov_46dnclk9m().s[59]++;setTimeout(async()=>{cov_46dnclk9m().f[16]++;cov_46dnclk9m().s[60]++;if(!setValue){cov_46dnclk9m().b[25][0]++;cov_46dnclk9m().s[61]++;// if (requireObject && !objectHasValue) {
// Todo (low): We could auto-populate keypath if has
//   keypath (and we probably also only want if
//   not autoincrement)
value={};}else{cov_46dnclk9m().b[25][1]++;}cov_46dnclk9m().s[62]++;try{const{rootUI:rootEditUI,specificSchema}=(cov_46dnclk9m().s[63]++,await formats.getControlsForFormatAndValue(types,format,value,{readonly:false,typeNamespace,schema,schemaContent,formats,types}));const type=(cov_46dnclk9m().s[64]++,Types.getTypeForRoot(/** @type {HTMLDivElement} */rootEditUI));// eslint-disable-next-line @stylistic/max-len -- Long
/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[65]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI,specificSchema});}catch(err){/* istanbul ignore next -- At least some errors handled earlier */dialogs.alert({message:'The object to be added had types not supported '+'by the current format.'});/* istanbul ignore next -- How to trigger? */console.log('err',err);}});}else{cov_46dnclk9m().b[23][1]++;}}const typeContainer=(cov_46dnclk9m().s[66]++,jml('div',{class:'typeContainer'}));cov_46dnclk9m().s[67]++;return{domArray:[sel,typeContainer],/** @type {GetValue} */getValue:$getValue,/** @type {GetType} */getType(){cov_46dnclk9m().f[17]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[68]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[69]++;return Types.getTypeForRoot(root);},/** @type {ValidValuesSet} */validValuesSet(){cov_46dnclk9m().f[18]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[70]++,$e(typeContainer,'div[data-type]'));const form=(/** @type {HTMLFormElement} */cov_46dnclk9m().s[71]++,root.closest('form'));cov_46dnclk9m().s[72]++;return Types.validValuesSet({form,typeNamespace});},/** @type {SetValue} */async setValue(value,stateObj){cov_46dnclk9m().f[19]++;const rootEditUI=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[73]++,(await formats.getControlsForFormatAndValue(types,format,value,stateObj)).rootUI);const type=(cov_46dnclk9m().s[74]++,Types.getTypeForRoot(rootEditUI));/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[75]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}};};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,