function cov_46dnclk9m(){var path="/Users/brett/jsoe/src/typeChoices.js";var hash="12a777181e3074ecf53655bbaf6f359423740efd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/typeChoices.js",statementMap:{"0":{start:{line:106,column:32},end:{line:449,column:1}},"1":{start:{line:126,column:28},end:{line:132,column:5}},"2":{start:{line:133,column:24},end:{line:133,column:41}},"3":{start:{line:134,column:21},end:{line:134,column:52}},"4":{start:{line:139,column:20},end:{line:154,column:3}},"5":{start:{line:141,column:6},end:{line:141,column:41}},"6":{start:{line:143,column:4},end:{line:153,column:6}},"7":{start:{line:155,column:48},end:{line:352,column:4}},"8":{start:{line:168,column:8},end:{line:179,column:9}},"9":{start:{line:169,column:22},end:{line:171,column:52}},"10":{start:{line:170,column:12},end:{line:170,column:39}},"11":{start:{line:172,column:10},end:{line:176,column:11}},"12":{start:{line:173,column:12},end:{line:173,column:30}},"13":{start:{line:175,column:12},end:{line:175,column:41}},"14":{start:{line:178,column:10},end:{line:178,column:28}},"15":{start:{line:180,column:8},end:{line:180,column:26}},"16":{start:{line:181,column:8},end:{line:181,column:77}},"17":{start:{line:190,column:8},end:{line:197,column:9}},"18":{start:{line:191,column:22},end:{line:193,column:52}},"19":{start:{line:192,column:12},end:{line:192,column:39}},"20":{start:{line:194,column:10},end:{line:194,column:39}},"21":{start:{line:196,column:10},end:{line:196,column:28}},"22":{start:{line:198,column:8},end:{line:198,column:26}},"23":{start:{line:203,column:30},end:{line:203,column:34}},"24":{start:{line:204,column:8},end:{line:204,column:33}},"25":{start:{line:205,column:25},end:{line:205,column:43}},"26":{start:{line:206,column:8},end:{line:209,column:9}},"27":{start:{line:208,column:10},end:{line:208,column:56}},"28":{start:{line:210,column:8},end:{line:215,column:9}},"29":{start:{line:211,column:10},end:{line:211,column:41}},"30":{start:{line:212,column:10},end:{line:214,column:13}},"31":{start:{line:213,column:12},end:{line:213,column:39}},"32":{start:{line:218,column:26},end:{line:218,column:46}},"33":{start:{line:220,column:8},end:{line:222,column:9}},"34":{start:{line:223,column:8},end:{line:223,column:47}},"35":{start:{line:231,column:30},end:{line:231,column:34}},"36":{start:{line:233,column:8},end:{line:235,column:9}},"37":{start:{line:234,column:10},end:{line:234,column:17}},"38":{start:{line:236,column:22},end:{line:236,column:40}},"39":{start:{line:242,column:8},end:{line:274,column:11}},"40":{start:{line:275,column:8},end:{line:275,column:34}},"41":{start:{line:276,column:8},end:{line:278,column:11}},"42":{start:{line:279,column:8},end:{line:279,column:37}},"43":{start:{line:281,column:8},end:{line:281,column:47}},"44":{start:{line:286,column:8},end:{line:286,column:54}},"45":{start:{line:287,column:8},end:{line:287,column:34}},"46":{start:{line:293,column:26},end:{line:293,column:46}},"47":{start:{line:294,column:8},end:{line:294,column:38}},"48":{start:{line:295,column:8},end:{line:295,column:31}},"49":{start:{line:298,column:8},end:{line:298,column:39}},"50":{start:{line:301,column:8},end:{line:301,column:46}},"51":{start:{line:308,column:30},end:{line:308,column:34}},"52":{start:{line:309,column:26},end:{line:309,column:46}},"53":{start:{line:310,column:8},end:{line:312,column:9}},"54":{start:{line:311,column:10},end:{line:311,column:23}},"55":{start:{line:313,column:23},end:{line:313,column:50}},"56":{start:{line:314,column:8},end:{line:317,column:11}},"57":{start:{line:323,column:6},end:{line:323,column:27}},"58":{start:{line:324,column:43},end:{line:331,column:9}},"59":{start:{line:332,column:43},end:{line:332,column:63}},"60":{start:{line:342,column:8},end:{line:349,column:10}},"61":{start:{line:353,column:2},end:{line:405,column:3}},"62":{start:{line:354,column:4},end:{line:357,column:7}},"63":{start:{line:355,column:6},end:{line:355,column:28}},"64":{start:{line:356,column:6},end:{line:356,column:45}},"65":{start:{line:358,column:9},end:{line:405,column:3}},"66":{start:{line:359,column:4},end:{line:404,column:7}},"67":{start:{line:360,column:6},end:{line:365,column:7}},"68":{start:{line:364,column:8},end:{line:364,column:19}},"69":{start:{line:366,column:6},end:{line:403,column:7}},"70":{start:{line:370,column:12},end:{line:382,column:9}},"71":{start:{line:384,column:10},end:{line:386,column:12}},"72":{start:{line:388,column:81},end:{line:394,column:11}},"73":{start:{line:407,column:24},end:{line:407,column:60}},"74":{start:{line:409,column:2},end:{line:448,column:4}},"75":{start:{line:421,column:8},end:{line:421,column:43}},"76":{start:{line:423,column:6},end:{line:423,column:40}},"77":{start:{line:429,column:8},end:{line:429,column:43}},"78":{start:{line:431,column:51},end:{line:431,column:71}},"79":{start:{line:432,column:6},end:{line:432,column:57}},"80":{start:{line:438,column:8},end:{line:441,column:17}},"81":{start:{line:443,column:19},end:{line:443,column:51}},"82":{start:{line:444,column:79},end:{line:446,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:106,column:32},end:{line:106,column:33}},loc:{start:{line:124,column:6},end:{line:449,column:1}},line:124},"1":{name:"(anonymous_1)",decl:{start:{line:139,column:20},end:{line:139,column:21}},loc:{start:{line:139,column:47},end:{line:154,column:3}},line:139},"2":{name:"(anonymous_2)",decl:{start:{line:165,column:6},end:{line:165,column:7}},loc:{start:{line:167,column:9},end:{line:182,column:7}},line:167},"3":{name:"(anonymous_3)",decl:{start:{line:169,column:37},end:{line:169,column:38}},loc:{start:{line:169,column:46},end:{line:171,column:11}},line:169},"4":{name:"(anonymous_4)",decl:{start:{line:189,column:6},end:{line:189,column:7}},loc:{start:{line:189,column:48},end:{line:199,column:7}},line:189},"5":{name:"(anonymous_5)",decl:{start:{line:191,column:37},end:{line:191,column:38}},loc:{start:{line:191,column:46},end:{line:193,column:11}},line:191},"6":{name:"(anonymous_6)",decl:{start:{line:202,column:6},end:{line:202,column:7}},loc:{start:{line:202,column:20},end:{line:216,column:7}},line:202},"7":{name:"(anonymous_7)",decl:{start:{line:212,column:64},end:{line:212,column:65}},loc:{start:{line:212,column:76},end:{line:214,column:11}},line:212},"8":{name:"(anonymous_8)",decl:{start:{line:217,column:6},end:{line:217,column:7}},loc:{start:{line:217,column:22},end:{line:224,column:7}},line:217},"9":{name:"(anonymous_9)",decl:{start:{line:227,column:6},end:{line:227,column:7}},loc:{start:{line:230,column:14},end:{line:282,column:7}},line:230},"10":{name:"(anonymous_10)",decl:{start:{line:285,column:6},end:{line:285,column:7}},loc:{start:{line:285,column:57},end:{line:288,column:7}},line:285},"11":{name:"(anonymous_11)",decl:{start:{line:292,column:6},end:{line:292,column:7}},loc:{start:{line:292,column:28},end:{line:296,column:7}},line:292},"12":{name:"(anonymous_12)",decl:{start:{line:297,column:6},end:{line:297,column:7}},loc:{start:{line:297,column:23},end:{line:299,column:7}},line:297},"13":{name:"(anonymous_13)",decl:{start:{line:300,column:6},end:{line:300,column:7}},loc:{start:{line:300,column:21},end:{line:302,column:7}},line:300},"14":{name:"(anonymous_14)",decl:{start:{line:307,column:6},end:{line:307,column:7}},loc:{start:{line:307,column:37},end:{line:318,column:7}},line:307},"15":{name:"(anonymous_15)",decl:{start:{line:320,column:10},end:{line:320,column:11}},loc:{start:{line:320,column:21},end:{line:333,column:5}},line:320},"16":{name:"(anonymous_16)",decl:{start:{line:341,column:6},end:{line:341,column:7}},loc:{start:{line:341,column:35},end:{line:350,column:7}},line:341},"17":{name:"(anonymous_17)",decl:{start:{line:354,column:15},end:{line:354,column:16}},loc:{start:{line:354,column:21},end:{line:357,column:5}},line:354},"18":{name:"(anonymous_18)",decl:{start:{line:359,column:15},end:{line:359,column:16}},loc:{start:{line:359,column:27},end:{line:404,column:5}},line:359},"19":{name:"(anonymous_19)",decl:{start:{line:419,column:4},end:{line:419,column:5}},loc:{start:{line:419,column:15},end:{line:424,column:5}},line:419},"20":{name:"(anonymous_20)",decl:{start:{line:427,column:4},end:{line:427,column:5}},loc:{start:{line:427,column:22},end:{line:433,column:5}},line:427},"21":{name:"(anonymous_21)",decl:{start:{line:436,column:4},end:{line:436,column:5}},loc:{start:{line:436,column:37},end:{line:447,column:5}},line:436}},branchMap:{"0":{loc:{start:{line:107,column:2},end:{line:107,column:20}},type:"default-arg",locations:[{start:{line:107,column:16},end:{line:107,column:20}}],line:107},"1":{loc:{start:{line:111,column:2},end:{line:111,column:18}},type:"default-arg",locations:[{start:{line:111,column:13},end:{line:111,column:18}}],line:111},"2":{loc:{start:{line:118,column:2},end:{line:118,column:25}},type:"default-arg",locations:[{start:{line:118,column:12},end:{line:118,column:25}}],line:118},"3":{loc:{start:{line:119,column:2},end:{line:119,column:21}},type:"default-arg",locations:[{start:{line:119,column:10},end:{line:119,column:21}}],line:119},"4":{loc:{start:{line:126,column:28},end:{line:132,column:5}},type:"cond-expr",locations:[{start:{line:127,column:6},end:{line:129,column:5}},{start:{line:130,column:6},end:{line:132,column:5}}],line:126},"5":{loc:{start:{line:126,column:28},end:{line:126,column:59}},type:"binary-expr",locations:[{start:{line:126,column:28},end:{line:126,column:41}},{start:{line:126,column:45},end:{line:126,column:59}}],line:126},"6":{loc:{start:{line:156,column:12},end:{line:156,column:53}},type:"binary-expr",locations:[{start:{line:156,column:12},end:{line:156,column:25}},{start:{line:156,column:29},end:{line:156,column:53}}],line:156},"7":{loc:{start:{line:157,column:42},end:{line:159,column:10}},type:"cond-expr",locations:[{start:{line:158,column:8},end:{line:158,column:28}},{start:{line:159,column:8},end:{line:159,column:10}}],line:157},"8":{loc:{start:{line:168,column:8},end:{line:179,column:9}},type:"if",locations:[{start:{line:168,column:8},end:{line:179,column:9}},{start:{line:177,column:15},end:{line:179,column:9}}],line:168},"9":{loc:{start:{line:168,column:12},end:{line:168,column:40}},type:"binary-expr",locations:[{start:{line:168,column:12},end:{line:168,column:22}},{start:{line:168,column:26},end:{line:168,column:40}}],line:168},"10":{loc:{start:{line:172,column:10},end:{line:176,column:11}},type:"if",locations:[{start:{line:172,column:10},end:{line:176,column:11}},{start:{line:174,column:17},end:{line:176,column:11}}],line:172},"11":{loc:{start:{line:190,column:8},end:{line:197,column:9}},type:"if",locations:[{start:{line:190,column:8},end:{line:197,column:9}},{start:{line:195,column:15},end:{line:197,column:9}}],line:190},"12":{loc:{start:{line:190,column:12},end:{line:190,column:40}},type:"binary-expr",locations:[{start:{line:190,column:12},end:{line:190,column:22}},{start:{line:190,column:26},end:{line:190,column:40}}],line:190},"13":{loc:{start:{line:206,column:8},end:{line:209,column:9}},type:"if",locations:[{start:{line:206,column:8},end:{line:209,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:206},"14":{loc:{start:{line:210,column:8},end:{line:215,column:9}},type:"if",locations:[{start:{line:210,column:8},end:{line:215,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:210},"15":{loc:{start:{line:220,column:8},end:{line:222,column:9}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:220},"16":{loc:{start:{line:227,column:29},end:{line:230,column:12}},type:"default-arg",locations:[{start:{line:230,column:10},end:{line:230,column:12}}],line:227},"17":{loc:{start:{line:233,column:8},end:{line:235,column:9}},type:"if",locations:[{start:{line:233,column:8},end:{line:235,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:233},"18":{loc:{start:{line:247,column:20},end:{line:247,column:61}},type:"binary-expr",locations:[{start:{line:247,column:20},end:{line:247,column:48}},{start:{line:247,column:52},end:{line:247,column:61}}],line:247},"19":{loc:{start:{line:252,column:25},end:{line:255,column:30}},type:"binary-expr",locations:[{start:{line:252,column:25},end:{line:252,column:39}},{start:{line:253,column:13},end:{line:255,column:29}}],line:252},"20":{loc:{start:{line:253,column:13},end:{line:255,column:29}},type:"cond-expr",locations:[{start:{line:254,column:16},end:{line:254,column:48}},{start:{line:255,column:16},end:{line:255,column:29}}],line:253},"21":{loc:{start:{line:253,column:13},end:{line:253,column:71}},type:"binary-expr",locations:[{start:{line:253,column:13},end:{line:253,column:44}},{start:{line:253,column:48},end:{line:253,column:71}}],line:253},"22":{loc:{start:{line:261,column:32},end:{line:272,column:30}},type:"binary-expr",locations:[{start:{line:261,column:32},end:{line:261,column:44}},{start:{line:264,column:13},end:{line:264,column:48}}],line:261},"23":{loc:{start:{line:273,column:37},end:{line:273,column:67}},type:"binary-expr",locations:[{start:{line:273,column:37},end:{line:273,column:50}},{start:{line:273,column:54},end:{line:273,column:67}}],line:273},"24":{loc:{start:{line:301,column:15},end:{line:301,column:45}},type:"binary-expr",locations:[{start:{line:301,column:15},end:{line:301,column:22}},{start:{line:301,column:26},end:{line:301,column:45}}],line:301},"25":{loc:{start:{line:307,column:17},end:{line:307,column:35}},type:"default-arg",locations:[{start:{line:307,column:33},end:{line:307,column:35}}],line:307},"26":{loc:{start:{line:310,column:8},end:{line:312,column:9}},type:"if",locations:[{start:{line:310,column:8},end:{line:312,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:310},"27":{loc:{start:{line:325,column:22},end:{line:330,column:21}},type:"cond-expr",locations:[{start:{line:326,column:12},end:{line:329,column:12}},{start:{line:330,column:12},end:{line:330,column:21}}],line:325},"28":{loc:{start:{line:346,column:21},end:{line:346,column:44}},type:"cond-expr",locations:[{start:{line:346,column:34},end:{line:346,column:39}},{start:{line:346,column:42},end:{line:346,column:44}}],line:346},"29":{loc:{start:{line:353,column:2},end:{line:405,column:3}},type:"if",locations:[{start:{line:353,column:2},end:{line:405,column:3}},{start:{line:358,column:9},end:{line:405,column:3}}],line:353},"30":{loc:{start:{line:353,column:6},end:{line:353,column:58}},type:"binary-expr",locations:[{start:{line:353,column:6},end:{line:353,column:17}},{start:{line:353,column:21},end:{line:353,column:45}},{start:{line:353,column:49},end:{line:353,column:58}}],line:353},"31":{loc:{start:{line:358,column:9},end:{line:405,column:3}},type:"if",locations:[{start:{line:358,column:9},end:{line:405,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:358},"32":{loc:{start:{line:358,column:13},end:{line:358,column:59}},type:"binary-expr",locations:[{start:{line:358,column:13},end:{line:358,column:21}},{start:{line:358,column:26},end:{line:358,column:39}},{start:{line:358,column:43},end:{line:358,column:58}}],line:358},"33":{loc:{start:{line:360,column:6},end:{line:365,column:7}},type:"if",locations:[{start:{line:360,column:6},end:{line:365,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:360}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0],"16":[0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0,0],"33":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"12a777181e3074ecf53655bbaf6f359423740efd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_46dnclk9m=function(){return actualCoverage;};}return actualCoverage;}cov_46dnclk9m();import{jml}from'./vendor-imports.js';import Formats from'./formats.js';import Types from'./types.js';import{$e,DOM}from'./utils/templateUtils.js';import dialogs from'./utils/dialogs.js';// This is technically just `import('./index.js').SetType`, but our
//   redirect file causes problems, so we redefine here
/**
 * @typedef {(cfg: {
 *   type: string,
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   avoidReport?: boolean,
 *   specificSchema?: import('zodex').SzType
 * }) => void} SetType
 */ /**
 * @typedef {(info: {
 *   type: string,
 *   editUI: Element,
 *   specificSchema?: import('zodex').SzType
 * }) => void} AddTypeAndEditUI
 */ /**
 * @typedef {(info?: {
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   schemaObject?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   avoidReport?: boolean
 * }) => void} AddAndValidateEditUI
 */ /**
 * @typedef {() => void} SetStyles
 */ /**
 * @typedef {HTMLElement & {
 *   $addAndValidateEditUI: AddAndValidateEditUI,
 *   $setStyles: SetStyles
 * }} TypeChoicesElementAPI
 */ /**
 * @callback GetValue
 * @param {import('./types.js').StateObject} [stateObj] Will
 *   auto-set `typeNamespace` and `format`
 * @param {string} [currentPath]
 * @returns {import('./formats.js').StructuredCloneValue}
 */ /**
 * @callback GetType
 * @returns {string}
 */ /**
 * @callback ValidValuesSet
 * @returns {boolean}
 */ /**
 * @callback SetValue
 * @param {import('./formats.js').StructuredCloneValue} value
 * @param {import('./types.js').StateObject} stateObj
 * @returns {Promise<void>}
 */ /**
 * @callback BuildTypeChoices
 * @param {{
 *   autoTrigger?: boolean,
 *   format: import('./formats.js').AvailableFormat,
 *   typeNamespace?: string,
 *   value?: import('./formats.js').StructuredCloneValue,
 *   setValue?: boolean,
 *   state?: string,
 *   forcedState?: string,
 *   keySelectClass?: string,
 *   requireObject?: boolean,
 *   objectHasValue?: boolean,
 *   topRoot?: import('./types.js').RootElement,
 *   formats?: import('./formats.js').default
 *   types?: import('./types.js').default
 *   schema?: string,
 *   schemaIdx?: number,
 *   schemaOriginal?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   schemaContent?: import('./formatAndTypeChoices.js').ZodexSchema,
 * }} cfg
 * @returns {{
 *   domArray: [select: HTMLElement, typeContainer: HTMLElement],
 *   getValue: GetValue,
 *   getType: GetType,
 *   validValuesSet: ValidValuesSet,
 *   setValue: SetValue
 * }}
 */ /**
 * @type {BuildTypeChoices}
 */cov_46dnclk9m().s[0]++;export const buildTypeChoices=({autoTrigger=(cov_46dnclk9m().b[0][0]++,true),format,typeNamespace,value,setValue=(cov_46dnclk9m().b[1][0]++,false),state,// itemIndex = 0,
keySelectClass,requireObject,objectHasValue,topRoot,formats=(cov_46dnclk9m().b[2][0]++,new Formats()),types=(cov_46dnclk9m().b[3][0]++,new Types()),schema,schemaIdx,schemaOriginal,schemaContent})=>{cov_46dnclk9m().f[0]++;// console.log('format', format, 'state', state, 'path', typeNamespace);
const typeAndSchemaInfo=(cov_46dnclk9m().s[1]++,(cov_46dnclk9m().b[5][0]++,requireObject)&&(cov_46dnclk9m().b[5][1]++,!schemaContent)?(cov_46dnclk9m().b[4][0]++,{typeOptions:[types.getOptionForType('object')],schemaObjects:undefined}):(cov_46dnclk9m().b[4][1]++,types.getTypeOptionsForFormatAndState(format,state,schemaContent,schemaOriginal)));const{typeOptions}=(cov_46dnclk9m().s[2]++,typeAndSchemaInfo);const schemaObjs=(cov_46dnclk9m().s[3]++,typeAndSchemaInfo.schemaObjects);let editUI;/** @type {GetValue} */cov_46dnclk9m().s[4]++;const $getValue=(stateObj,currentPath)=>{cov_46dnclk9m().f[1]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[5]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[6]++;return types.getValueForRoot(root,/** @type {import('./types.js').StateObject} */{typeNamespace,formats,format,types,...stateObj},currentPath);};const sel=(/** @type {HTMLSelectElement} */cov_46dnclk9m().s[7]++,jml('select',{hidden:(cov_46dnclk9m().b[6][0]++,requireObject)||(cov_46dnclk9m().b[6][1]++,typeOptions.length===1),class:`typeChoices-${typeNamespace}${keySelectClass?(cov_46dnclk9m().b[7][0]++,' '+keySelectClass):(cov_46dnclk9m().b[7][1]++,'')}`,// is: 'type-choices',
$custom:{$getValue,/** @type {SetType} */$setType({type,baseValue,bringIntoFocus,avoidReport,specificSchema}){cov_46dnclk9m().f[2]++;cov_46dnclk9m().s[8]++;if((cov_46dnclk9m().b[9][0]++,schemaObjs)&&(cov_46dnclk9m().b[9][1]++,specificSchema)){cov_46dnclk9m().b[8][0]++;const idx=(cov_46dnclk9m().s[9]++,schemaObjs.map(obj=>{cov_46dnclk9m().f[3]++;cov_46dnclk9m().s[10]++;return JSON.stringify(obj);}).indexOf(JSON.stringify(specificSchema)));cov_46dnclk9m().s[11]++;if(idx===-1){cov_46dnclk9m().b[10][0]++;cov_46dnclk9m().s[12]++;this.value=type;}else{cov_46dnclk9m().b[10][1]++;cov_46dnclk9m().s[13]++;this.selectedIndex=idx+1;}}else{cov_46dnclk9m().b[8][1]++;cov_46dnclk9m().s[14]++;this.value=type;}cov_46dnclk9m().s[15]++;this.$setStyles();cov_46dnclk9m().s[16]++;this.$addAndValidateEditUI({baseValue,bringIntoFocus,avoidReport});},/**
       * @type {(info: {
       *   type: string,
       *   specificSchema?: import('zodex').SzType
       * }) => void} cfg
       */$setTypeNoEditUI({type,specificSchema}){cov_46dnclk9m().f[4]++;cov_46dnclk9m().s[17]++;if((cov_46dnclk9m().b[12][0]++,schemaObjs)&&(cov_46dnclk9m().b[12][1]++,specificSchema)){cov_46dnclk9m().b[11][0]++;const idx=(cov_46dnclk9m().s[18]++,schemaObjs.map(obj=>{cov_46dnclk9m().f[5]++;cov_46dnclk9m().s[19]++;return JSON.stringify(obj);}).indexOf(JSON.stringify(specificSchema)));cov_46dnclk9m().s[20]++;this.selectedIndex=idx+1;}else{cov_46dnclk9m().b[11][1]++;cov_46dnclk9m().s[21]++;this.value=type;}cov_46dnclk9m().s[22]++;this.$setStyles();},/** @type {SetStyles} */$setStyles(){cov_46dnclk9m().f[6]++;const{value:type}=(cov_46dnclk9m().s[23]++,this);cov_46dnclk9m().s[24]++;this.dataset.type=type;// Used for styling
let ancestorEl=(cov_46dnclk9m().s[25]++,this.parentElement);cov_46dnclk9m().s[26]++;if(ancestorEl.nodeName.toLowerCase()!=='fieldset'){cov_46dnclk9m().b[13][0]++;cov_46dnclk9m().s[27]++;// Grandparent check added for optional items placeholder
ancestorEl=this.parentElement.parentElement;}else{cov_46dnclk9m().b[13][1]++;}cov_46dnclk9m().s[28]++;if(ancestorEl.nodeName.toLowerCase()==='fieldset'){cov_46dnclk9m().b[14][0]++;cov_46dnclk9m().s[29]++;ancestorEl.dataset.type=type;cov_46dnclk9m().s[30]++;DOM.filterChildElements(ancestorEl,'legend').forEach(legend=>{cov_46dnclk9m().f[7]++;cov_46dnclk9m().s[31]++;legend.dataset.type=type;});}else{cov_46dnclk9m().b[14][1]++;}},$getTypeRoot(){cov_46dnclk9m().f[8]++;const container=(cov_46dnclk9m().s[32]++,this.$getContainer());/* istanbul ignore if -- How to replicate? */cov_46dnclk9m().s[33]++;if(!container){return false;}else{cov_46dnclk9m().b[15][0]++;}cov_46dnclk9m().s[34]++;return $e(container,'div[data-type]');},/** @type {AddAndValidateEditUI} */$addAndValidateEditUI({baseValue,bringIntoFocus,schemaObject,avoidReport/* istanbul ignore next -- Backup */}=(cov_46dnclk9m().b[16][0]++,{})){cov_46dnclk9m().f[9]++;const{value:type}=(cov_46dnclk9m().s[35]++,this);cov_46dnclk9m().s[36]++;if(!type){cov_46dnclk9m().b[17][0]++;cov_46dnclk9m().s[37]++;return;}else{cov_46dnclk9m().b[17][1]++;}let topRoot=(cov_46dnclk9m().s[38]++,this.$getTopRoot());// Todo (low): Try to avoid need for `baseValue`
//    (needed by arrayNonindexKeys for setting an array
//    length and avoiding errors); could set all
//    values through here?
cov_46dnclk9m().s[39]++;editUI=types.getUIForModeAndType({readonly:false,typeNamespace,type,bringIntoFocus,hasValue:(cov_46dnclk9m().b[18][0]++,type==='arrayNonindexKeys')&&(cov_46dnclk9m().b[18][1]++,baseValue),value:baseValue,buildTypeChoices,format,topRoot,schemaContent:(cov_46dnclk9m().b[19][0]++,schemaOriginal)??(cov_46dnclk9m().b[19][1]++,(cov_46dnclk9m().b[21][0]++,schemaContent?.type==='union')&&(cov_46dnclk9m().b[21][1]++,schemaIdx!==undefined)?(cov_46dnclk9m().b[20][0]++,schemaContent.options[schemaIdx]):(cov_46dnclk9m().b[20][1]++,schemaContent)),// Added `schemaContent` as inner arrays were not getting their
//   schema info; this apparently allows (actually requires)
//   commenting out the auto-adding of object content at end of
//   editUI in arrayType.js; we add `schemaFallingBack` to
//   distinguish
specificSchemaObject:(cov_46dnclk9m().b[22][0]++,schemaObject)??(cov_46dnclk9m().b[22][1]++,// Avoid JSON references by using this by default (or only?)
schemaObjs?.[sel.selectedIndex-1])??(// eslint-disable-next-line @stylistic/max-len -- Long
/* istanbul ignore next -- Can probably remove as `schemaObjs` will be set */schemaContent?.type==='union'&&schemaIdx!==undefined/* istanbul ignore next -- Can probably remove */?schemaContent.options[schemaIdx]// This is probably just `undefined` by here
:schemaContent),schemaFallingBack:Boolean((cov_46dnclk9m().b[23][0]++,!schemaObject)&&(cov_46dnclk9m().b[23][1]++,schemaContent))});cov_46dnclk9m().s[40]++;this.$addEditUI({editUI});cov_46dnclk9m().s[41]++;this.$validate({avoidReport});cov_46dnclk9m().s[42]++;topRoot=this.$getTopRoot();// May be existing now
// Needed; Array/object ref somewhere could now be valid or invalid
cov_46dnclk9m().s[43]++;types.validateAllReferences({topRoot});},/** @type {AddTypeAndEditUI} */$addTypeAndEditUI({type,editUI,specificSchema}){cov_46dnclk9m().f[10]++;cov_46dnclk9m().s[44]++;this.$setTypeNoEditUI({type,specificSchema});cov_46dnclk9m().s[45]++;this.$addEditUI({editUI});},/**
       * @type {(info: {editUI: HTMLElement}) => void}
       */$addEditUI({editUI}){cov_46dnclk9m().f[11]++;const container=(cov_46dnclk9m().s[46]++,this.$getContainer());cov_46dnclk9m().s[47]++;DOM.removeChildren(container);cov_46dnclk9m().s[48]++;jml(editUI,container);},$getContainer(){cov_46dnclk9m().f[12]++;cov_46dnclk9m().s[49]++;return this.nextElementSibling;},$getTopRoot(){cov_46dnclk9m().f[13]++;cov_46dnclk9m().s[50]++;return(cov_46dnclk9m().b[24][0]++,topRoot)||(cov_46dnclk9m().b[24][1]++,this.$getTypeRoot());},/**
       * @param {{avoidReport?: boolean}} cfg
       * @returns {boolean}
       */$validate({avoidReport}=(cov_46dnclk9m().b[25][0]++,{})){cov_46dnclk9m().f[14]++;const{value:type}=(cov_46dnclk9m().s[51]++,this);const container=(cov_46dnclk9m().s[52]++,this.$getContainer());cov_46dnclk9m().s[53]++;if(!container.firstElementChild){cov_46dnclk9m().b[26][0]++;cov_46dnclk9m().s[54]++;return false;}else{cov_46dnclk9m().b[26][1]++;}const editUI=(cov_46dnclk9m().s[55]++,container.firstElementChild);cov_46dnclk9m().s[56]++;return types.validate({type,root:editUI,topRoot:this.$getTopRoot(),avoidReport});}},$on:{change(e){cov_46dnclk9m().f[15]++;cov_46dnclk9m().s[57]++;// We don't want form `onchange` to run `$checkForKeyDuplicates`
//   again (through `addAndValidateEditUI`->`validateAllReferences`)
e?.stopPropagation();/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[58]++;this.$addAndValidateEditUI({schemaObject:schemaObjs?(cov_46dnclk9m().b[27][0]++,schemaObjs[Number(/** @type {HTMLSelectElement} */e.target.selectedOptions[0].dataset.idx)]):(cov_46dnclk9m().b[27][1]++,undefined)});/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[59]++;this.$setStyles();}}},[['option',{value:''},['(Choose a type)']],// @ts-expect-error Apparent TS bug
...typeOptions.map(([optText,optAtts],idx)=>{cov_46dnclk9m().f[16]++;cov_46dnclk9m().s[60]++;return['option',{...optAtts,dataset:schemaObjs?(cov_46dnclk9m().b[28][0]++,{idx}):(cov_46dnclk9m().b[28][1]++,{})},[optText]];})]));cov_46dnclk9m().s[61]++;if((cov_46dnclk9m().b[30][0]++,autoTrigger)&&(cov_46dnclk9m().b[30][1]++,typeOptions.length===1)&&(cov_46dnclk9m().b[30][2]++,!setValue)){cov_46dnclk9m().b[29][0]++;cov_46dnclk9m().s[62]++;setTimeout(()=>{cov_46dnclk9m().f[17]++;cov_46dnclk9m().s[63]++;sel.selectedIndex=1;cov_46dnclk9m().s[64]++;sel.dispatchEvent(new Event('change'));});}else{cov_46dnclk9m().b[29][1]++;cov_46dnclk9m().s[65]++;if((cov_46dnclk9m().b[32][0]++,setValue)||(cov_46dnclk9m().b[32][1]++,requireObject)&&(cov_46dnclk9m().b[32][2]++,!objectHasValue)){cov_46dnclk9m().b[31][0]++;cov_46dnclk9m().s[66]++;setTimeout(async()=>{cov_46dnclk9m().f[18]++;cov_46dnclk9m().s[67]++;if(!setValue){cov_46dnclk9m().b[33][0]++;cov_46dnclk9m().s[68]++;// if (requireObject && !objectHasValue) {
// Todo (low): We could auto-populate keypath if has
//   keypath (and we probably also only want if
//   not autoincrement)
value={};}else{cov_46dnclk9m().b[33][1]++;}cov_46dnclk9m().s[69]++;try{const{rootUI:rootEditUI,specificSchemas}=(cov_46dnclk9m().s[70]++,await formats.getControlsForFormatAndValue(types,format,value,{readonly:false,typeNamespace,schema,schemaContent,formats,types}));const type=(cov_46dnclk9m().s[71]++,Types.getTypeForRoot(/** @type {HTMLDivElement} */rootEditUI));// eslint-disable-next-line @stylistic/max-len -- Long
/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[72]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI,// We do actually want the first one
specificSchema:specificSchemas?.[0]});}catch(err){/* istanbul ignore next -- At least some errors handled earlier */dialogs.alert({message:'The object to be added had types not supported '+'by the current format.'});/* istanbul ignore next -- How to trigger? */console.log('err',err);}});}else{cov_46dnclk9m().b[31][1]++;}}const typeContainer=(cov_46dnclk9m().s[73]++,jml('div',{class:'typeContainer'}));cov_46dnclk9m().s[74]++;return{domArray:[sel,typeContainer],/** @type {GetValue} */getValue:$getValue,/** @type {GetType} */getType(){cov_46dnclk9m().f[19]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[75]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[76]++;return Types.getTypeForRoot(root);},/** @type {ValidValuesSet} */validValuesSet(){cov_46dnclk9m().f[20]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[77]++,$e(typeContainer,'div[data-type]'));const form=(/** @type {HTMLFormElement} */cov_46dnclk9m().s[78]++,root.closest('form'));cov_46dnclk9m().s[79]++;return Types.validValuesSet({form,typeNamespace});},/** @type {SetValue} */async setValue(value,stateObj){cov_46dnclk9m().f[21]++;const rootEditUI=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[80]++,(await formats.getControlsForFormatAndValue(types,format,value,stateObj)).rootUI);const type=(cov_46dnclk9m().s[81]++,Types.getTypeForRoot(rootEditUI));/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[82]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}};};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,