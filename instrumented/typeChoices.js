function cov_46dnclk9m(){var path="/Users/brett/jsoe/src/typeChoices.js";var hash="6df145358a1c107347ce2e69548df224c70eada4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/typeChoices.js",statementMap:{"0":{start:{line:105,column:32},end:{line:426,column:1}},"1":{start:{line:125,column:28},end:{line:131,column:5}},"2":{start:{line:132,column:24},end:{line:132,column:41}},"3":{start:{line:133,column:21},end:{line:133,column:52}},"4":{start:{line:138,column:20},end:{line:153,column:3}},"5":{start:{line:140,column:6},end:{line:140,column:41}},"6":{start:{line:142,column:4},end:{line:152,column:6}},"7":{start:{line:154,column:48},end:{line:329,column:4}},"8":{start:{line:165,column:8},end:{line:165,column:26}},"9":{start:{line:166,column:8},end:{line:166,column:26}},"10":{start:{line:167,column:8},end:{line:167,column:77}},"11":{start:{line:176,column:8},end:{line:183,column:9}},"12":{start:{line:177,column:22},end:{line:179,column:52}},"13":{start:{line:178,column:12},end:{line:178,column:39}},"14":{start:{line:180,column:10},end:{line:180,column:39}},"15":{start:{line:182,column:10},end:{line:182,column:28}},"16":{start:{line:184,column:8},end:{line:184,column:26}},"17":{start:{line:189,column:30},end:{line:189,column:34}},"18":{start:{line:190,column:8},end:{line:190,column:33}},"19":{start:{line:191,column:25},end:{line:191,column:43}},"20":{start:{line:192,column:8},end:{line:195,column:9}},"21":{start:{line:194,column:10},end:{line:194,column:56}},"22":{start:{line:196,column:8},end:{line:201,column:9}},"23":{start:{line:197,column:10},end:{line:197,column:41}},"24":{start:{line:198,column:10},end:{line:200,column:13}},"25":{start:{line:199,column:12},end:{line:199,column:39}},"26":{start:{line:204,column:26},end:{line:204,column:46}},"27":{start:{line:206,column:8},end:{line:208,column:9}},"28":{start:{line:209,column:8},end:{line:209,column:47}},"29":{start:{line:216,column:30},end:{line:216,column:34}},"30":{start:{line:218,column:8},end:{line:220,column:9}},"31":{start:{line:219,column:10},end:{line:219,column:17}},"32":{start:{line:221,column:22},end:{line:221,column:40}},"33":{start:{line:227,column:8},end:{line:251,column:11}},"34":{start:{line:252,column:8},end:{line:252,column:34}},"35":{start:{line:253,column:8},end:{line:255,column:11}},"36":{start:{line:256,column:8},end:{line:256,column:37}},"37":{start:{line:258,column:8},end:{line:258,column:47}},"38":{start:{line:263,column:8},end:{line:263,column:54}},"39":{start:{line:264,column:8},end:{line:264,column:34}},"40":{start:{line:270,column:26},end:{line:270,column:46}},"41":{start:{line:271,column:8},end:{line:271,column:38}},"42":{start:{line:272,column:8},end:{line:272,column:31}},"43":{start:{line:275,column:8},end:{line:275,column:39}},"44":{start:{line:278,column:8},end:{line:278,column:46}},"45":{start:{line:285,column:30},end:{line:285,column:34}},"46":{start:{line:286,column:26},end:{line:286,column:46}},"47":{start:{line:287,column:8},end:{line:289,column:9}},"48":{start:{line:288,column:10},end:{line:288,column:23}},"49":{start:{line:290,column:23},end:{line:290,column:50}},"50":{start:{line:291,column:8},end:{line:294,column:11}},"51":{start:{line:300,column:6},end:{line:300,column:27}},"52":{start:{line:301,column:43},end:{line:308,column:9}},"53":{start:{line:309,column:43},end:{line:309,column:63}},"54":{start:{line:319,column:8},end:{line:326,column:10}},"55":{start:{line:330,column:2},end:{line:382,column:3}},"56":{start:{line:331,column:4},end:{line:334,column:7}},"57":{start:{line:332,column:6},end:{line:332,column:28}},"58":{start:{line:333,column:6},end:{line:333,column:45}},"59":{start:{line:335,column:9},end:{line:382,column:3}},"60":{start:{line:336,column:4},end:{line:381,column:7}},"61":{start:{line:337,column:6},end:{line:342,column:7}},"62":{start:{line:341,column:8},end:{line:341,column:19}},"63":{start:{line:343,column:6},end:{line:380,column:7}},"64":{start:{line:347,column:12},end:{line:359,column:9}},"65":{start:{line:361,column:10},end:{line:363,column:12}},"66":{start:{line:365,column:81},end:{line:371,column:11}},"67":{start:{line:384,column:24},end:{line:384,column:60}},"68":{start:{line:386,column:2},end:{line:425,column:4}},"69":{start:{line:398,column:8},end:{line:398,column:43}},"70":{start:{line:400,column:6},end:{line:400,column:40}},"71":{start:{line:406,column:8},end:{line:406,column:43}},"72":{start:{line:408,column:51},end:{line:408,column:71}},"73":{start:{line:409,column:6},end:{line:409,column:57}},"74":{start:{line:415,column:8},end:{line:418,column:17}},"75":{start:{line:420,column:19},end:{line:420,column:51}},"76":{start:{line:421,column:79},end:{line:423,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:105,column:32},end:{line:105,column:33}},loc:{start:{line:123,column:6},end:{line:426,column:1}},line:123},"1":{name:"(anonymous_1)",decl:{start:{line:138,column:20},end:{line:138,column:21}},loc:{start:{line:138,column:47},end:{line:153,column:3}},line:138},"2":{name:"(anonymous_2)",decl:{start:{line:164,column:6},end:{line:164,column:7}},loc:{start:{line:164,column:64},end:{line:168,column:7}},line:164},"3":{name:"(anonymous_3)",decl:{start:{line:175,column:6},end:{line:175,column:7}},loc:{start:{line:175,column:48},end:{line:185,column:7}},line:175},"4":{name:"(anonymous_4)",decl:{start:{line:177,column:37},end:{line:177,column:38}},loc:{start:{line:177,column:46},end:{line:179,column:11}},line:177},"5":{name:"(anonymous_5)",decl:{start:{line:188,column:6},end:{line:188,column:7}},loc:{start:{line:188,column:20},end:{line:202,column:7}},line:188},"6":{name:"(anonymous_6)",decl:{start:{line:198,column:64},end:{line:198,column:65}},loc:{start:{line:198,column:76},end:{line:200,column:11}},line:198},"7":{name:"(anonymous_7)",decl:{start:{line:203,column:6},end:{line:203,column:7}},loc:{start:{line:203,column:22},end:{line:210,column:7}},line:203},"8":{name:"(anonymous_8)",decl:{start:{line:213,column:6},end:{line:213,column:7}},loc:{start:{line:215,column:14},end:{line:259,column:7}},line:215},"9":{name:"(anonymous_9)",decl:{start:{line:262,column:6},end:{line:262,column:7}},loc:{start:{line:262,column:57},end:{line:265,column:7}},line:262},"10":{name:"(anonymous_10)",decl:{start:{line:269,column:6},end:{line:269,column:7}},loc:{start:{line:269,column:28},end:{line:273,column:7}},line:269},"11":{name:"(anonymous_11)",decl:{start:{line:274,column:6},end:{line:274,column:7}},loc:{start:{line:274,column:23},end:{line:276,column:7}},line:274},"12":{name:"(anonymous_12)",decl:{start:{line:277,column:6},end:{line:277,column:7}},loc:{start:{line:277,column:21},end:{line:279,column:7}},line:277},"13":{name:"(anonymous_13)",decl:{start:{line:284,column:6},end:{line:284,column:7}},loc:{start:{line:284,column:37},end:{line:295,column:7}},line:284},"14":{name:"(anonymous_14)",decl:{start:{line:297,column:10},end:{line:297,column:11}},loc:{start:{line:297,column:21},end:{line:310,column:5}},line:297},"15":{name:"(anonymous_15)",decl:{start:{line:318,column:6},end:{line:318,column:7}},loc:{start:{line:318,column:35},end:{line:327,column:7}},line:318},"16":{name:"(anonymous_16)",decl:{start:{line:331,column:15},end:{line:331,column:16}},loc:{start:{line:331,column:21},end:{line:334,column:5}},line:331},"17":{name:"(anonymous_17)",decl:{start:{line:336,column:15},end:{line:336,column:16}},loc:{start:{line:336,column:27},end:{line:381,column:5}},line:336},"18":{name:"(anonymous_18)",decl:{start:{line:396,column:4},end:{line:396,column:5}},loc:{start:{line:396,column:15},end:{line:401,column:5}},line:396},"19":{name:"(anonymous_19)",decl:{start:{line:404,column:4},end:{line:404,column:5}},loc:{start:{line:404,column:22},end:{line:410,column:5}},line:404},"20":{name:"(anonymous_20)",decl:{start:{line:413,column:4},end:{line:413,column:5}},loc:{start:{line:413,column:37},end:{line:424,column:5}},line:413}},branchMap:{"0":{loc:{start:{line:106,column:2},end:{line:106,column:20}},type:"default-arg",locations:[{start:{line:106,column:16},end:{line:106,column:20}}],line:106},"1":{loc:{start:{line:110,column:2},end:{line:110,column:18}},type:"default-arg",locations:[{start:{line:110,column:13},end:{line:110,column:18}}],line:110},"2":{loc:{start:{line:117,column:2},end:{line:117,column:25}},type:"default-arg",locations:[{start:{line:117,column:12},end:{line:117,column:25}}],line:117},"3":{loc:{start:{line:118,column:2},end:{line:118,column:21}},type:"default-arg",locations:[{start:{line:118,column:10},end:{line:118,column:21}}],line:118},"4":{loc:{start:{line:125,column:28},end:{line:131,column:5}},type:"cond-expr",locations:[{start:{line:126,column:6},end:{line:128,column:5}},{start:{line:129,column:6},end:{line:131,column:5}}],line:125},"5":{loc:{start:{line:155,column:12},end:{line:155,column:53}},type:"binary-expr",locations:[{start:{line:155,column:12},end:{line:155,column:25}},{start:{line:155,column:29},end:{line:155,column:53}}],line:155},"6":{loc:{start:{line:156,column:42},end:{line:158,column:10}},type:"cond-expr",locations:[{start:{line:157,column:8},end:{line:157,column:28}},{start:{line:158,column:8},end:{line:158,column:10}}],line:156},"7":{loc:{start:{line:176,column:8},end:{line:183,column:9}},type:"if",locations:[{start:{line:176,column:8},end:{line:183,column:9}},{start:{line:181,column:15},end:{line:183,column:9}}],line:176},"8":{loc:{start:{line:176,column:12},end:{line:176,column:40}},type:"binary-expr",locations:[{start:{line:176,column:12},end:{line:176,column:22}},{start:{line:176,column:26},end:{line:176,column:40}}],line:176},"9":{loc:{start:{line:192,column:8},end:{line:195,column:9}},type:"if",locations:[{start:{line:192,column:8},end:{line:195,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:192},"10":{loc:{start:{line:196,column:8},end:{line:201,column:9}},type:"if",locations:[{start:{line:196,column:8},end:{line:201,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:196},"11":{loc:{start:{line:206,column:8},end:{line:208,column:9}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:206},"12":{loc:{start:{line:213,column:29},end:{line:215,column:12}},type:"default-arg",locations:[{start:{line:215,column:10},end:{line:215,column:12}}],line:213},"13":{loc:{start:{line:218,column:8},end:{line:220,column:9}},type:"if",locations:[{start:{line:218,column:8},end:{line:220,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:218},"14":{loc:{start:{line:232,column:20},end:{line:232,column:61}},type:"binary-expr",locations:[{start:{line:232,column:20},end:{line:232,column:48}},{start:{line:232,column:52},end:{line:232,column:61}}],line:232},"15":{loc:{start:{line:237,column:25},end:{line:240,column:30}},type:"binary-expr",locations:[{start:{line:237,column:25},end:{line:237,column:39}},{start:{line:238,column:13},end:{line:240,column:29}}],line:237},"16":{loc:{start:{line:238,column:13},end:{line:240,column:29}},type:"cond-expr",locations:[{start:{line:239,column:16},end:{line:239,column:48}},{start:{line:240,column:16},end:{line:240,column:29}}],line:238},"17":{loc:{start:{line:238,column:13},end:{line:238,column:71}},type:"binary-expr",locations:[{start:{line:238,column:13},end:{line:238,column:44}},{start:{line:238,column:48},end:{line:238,column:71}}],line:238},"18":{loc:{start:{line:246,column:32},end:{line:249,column:30}},type:"binary-expr",locations:[{start:{line:246,column:32},end:{line:246,column:44}},{start:{line:247,column:13},end:{line:249,column:29}}],line:246},"19":{loc:{start:{line:247,column:13},end:{line:249,column:29}},type:"cond-expr",locations:[{start:{line:248,column:16},end:{line:248,column:48}},{start:{line:249,column:16},end:{line:249,column:29}}],line:247},"20":{loc:{start:{line:247,column:13},end:{line:247,column:71}},type:"binary-expr",locations:[{start:{line:247,column:13},end:{line:247,column:44}},{start:{line:247,column:48},end:{line:247,column:71}}],line:247},"21":{loc:{start:{line:250,column:37},end:{line:250,column:67}},type:"binary-expr",locations:[{start:{line:250,column:37},end:{line:250,column:50}},{start:{line:250,column:54},end:{line:250,column:67}}],line:250},"22":{loc:{start:{line:278,column:15},end:{line:278,column:45}},type:"binary-expr",locations:[{start:{line:278,column:15},end:{line:278,column:22}},{start:{line:278,column:26},end:{line:278,column:45}}],line:278},"23":{loc:{start:{line:284,column:17},end:{line:284,column:35}},type:"default-arg",locations:[{start:{line:284,column:33},end:{line:284,column:35}}],line:284},"24":{loc:{start:{line:287,column:8},end:{line:289,column:9}},type:"if",locations:[{start:{line:287,column:8},end:{line:289,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:287},"25":{loc:{start:{line:302,column:22},end:{line:307,column:21}},type:"cond-expr",locations:[{start:{line:303,column:12},end:{line:306,column:12}},{start:{line:307,column:12},end:{line:307,column:21}}],line:302},"26":{loc:{start:{line:323,column:21},end:{line:323,column:44}},type:"cond-expr",locations:[{start:{line:323,column:34},end:{line:323,column:39}},{start:{line:323,column:42},end:{line:323,column:44}}],line:323},"27":{loc:{start:{line:330,column:2},end:{line:382,column:3}},type:"if",locations:[{start:{line:330,column:2},end:{line:382,column:3}},{start:{line:335,column:9},end:{line:382,column:3}}],line:330},"28":{loc:{start:{line:330,column:6},end:{line:330,column:58}},type:"binary-expr",locations:[{start:{line:330,column:6},end:{line:330,column:17}},{start:{line:330,column:21},end:{line:330,column:45}},{start:{line:330,column:49},end:{line:330,column:58}}],line:330},"29":{loc:{start:{line:335,column:9},end:{line:382,column:3}},type:"if",locations:[{start:{line:335,column:9},end:{line:382,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:335},"30":{loc:{start:{line:335,column:13},end:{line:335,column:59}},type:"binary-expr",locations:[{start:{line:335,column:13},end:{line:335,column:21}},{start:{line:335,column:26},end:{line:335,column:39}},{start:{line:335,column:43},end:{line:335,column:58}}],line:335},"31":{loc:{start:{line:337,column:6},end:{line:342,column:7}},type:"if",locations:[{start:{line:337,column:6},end:{line:342,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:337}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0,0],"31":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6df145358a1c107347ce2e69548df224c70eada4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_46dnclk9m=function(){return actualCoverage;};}return actualCoverage;}cov_46dnclk9m();import{jml}from'./vendor-imports.js';import Formats from'./formats.js';import Types from'./types.js';import{$e,DOM}from'./utils/templateUtils.js';import dialogs from'./utils/dialogs.js';// This is technically just `import('./index.js').SetType`, but our
//   redirect file causes problems, so we redefine here
/**
 * @typedef {(cfg: {
 *   type: string,
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   avoidReport?: boolean
 * }) => void} SetType
 */ /**
 * @typedef {(info: {
 *   type: string,
 *   editUI: Element,
 *   specificSchema?: import('zodex').SzType
 * }) => void} AddTypeAndEditUI
 */ /**
 * @typedef {(info?: {
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   schemaObject?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   avoidReport?: boolean
 * }) => void} AddAndValidateEditUI
 */ /**
 * @typedef {() => void} SetStyles
 */ /**
 * @typedef {HTMLElement & {
 *   $addAndValidateEditUI: AddAndValidateEditUI,
 *   $setStyles: SetStyles
 * }} TypeChoicesElementAPI
 */ /**
 * @callback GetValue
 * @param {import('./types.js').StateObject} [stateObj] Will
 *   auto-set `typeNamespace` and `format`
 * @param {string} [currentPath]
 * @returns {import('./formats.js').StructuredCloneValue}
 */ /**
 * @callback GetType
 * @returns {string}
 */ /**
 * @callback ValidValuesSet
 * @returns {boolean}
 */ /**
 * @callback SetValue
 * @param {import('./formats.js').StructuredCloneValue} value
 * @param {import('./types.js').StateObject} stateObj
 * @returns {Promise<void>}
 */ /**
 * @callback BuildTypeChoices
 * @param {{
 *   autoTrigger?: boolean,
 *   format: import('./formats.js').AvailableFormat,
 *   typeNamespace?: string,
 *   value?: import('./formats.js').StructuredCloneValue,
 *   setValue?: boolean,
 *   state?: string,
 *   forcedState?: string,
 *   keySelectClass?: string,
 *   requireObject?: boolean,
 *   objectHasValue?: boolean,
 *   topRoot?: import('./types.js').RootElement,
 *   formats?: import('./formats.js').default
 *   types?: import('./types.js').default
 *   schema?: string,
 *   schemaIdx?: number,
 *   schemaOriginal?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   schemaContent?: import('./formatAndTypeChoices.js').ZodexSchema,
 * }} cfg
 * @returns {{
 *   domArray: [select: HTMLElement, typeContainer: HTMLElement],
 *   getValue: GetValue,
 *   getType: GetType,
 *   validValuesSet: ValidValuesSet,
 *   setValue: SetValue
 * }}
 */ /**
 * @type {BuildTypeChoices}
 */cov_46dnclk9m().s[0]++;export const buildTypeChoices=({autoTrigger=(cov_46dnclk9m().b[0][0]++,true),format,typeNamespace,value,setValue=(cov_46dnclk9m().b[1][0]++,false),state,// itemIndex = 0,
keySelectClass,requireObject,objectHasValue,topRoot,formats=(cov_46dnclk9m().b[2][0]++,new Formats()),types=(cov_46dnclk9m().b[3][0]++,new Types()),schema,schemaIdx,schemaOriginal,schemaContent})=>{cov_46dnclk9m().f[0]++;// console.log('format', format, 'state', state, 'path', typeNamespace);
const typeAndSchemaInfo=(cov_46dnclk9m().s[1]++,requireObject?(cov_46dnclk9m().b[4][0]++,{typeOptions:[types.getOptionForType('object')],schemaObjects:undefined}):(cov_46dnclk9m().b[4][1]++,types.getTypeOptionsForFormatAndState(format,state,schemaContent,schemaOriginal)));const{typeOptions}=(cov_46dnclk9m().s[2]++,typeAndSchemaInfo);const schemaObjs=(cov_46dnclk9m().s[3]++,typeAndSchemaInfo.schemaObjects);let editUI;/** @type {GetValue} */cov_46dnclk9m().s[4]++;const $getValue=(stateObj,currentPath)=>{cov_46dnclk9m().f[1]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[5]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[6]++;return types.getValueForRoot(root,/** @type {import('./types.js').StateObject} */{typeNamespace,formats,format,types,...stateObj},currentPath);};const sel=(/** @type {HTMLSelectElement} */cov_46dnclk9m().s[7]++,jml('select',{hidden:(cov_46dnclk9m().b[5][0]++,requireObject)||(cov_46dnclk9m().b[5][1]++,typeOptions.length===1),class:`typeChoices-${typeNamespace}${keySelectClass?(cov_46dnclk9m().b[6][0]++,' '+keySelectClass):(cov_46dnclk9m().b[6][1]++,'')}`,// is: 'type-choices',
$custom:{$getValue,/** @type {SetType} */$setType({type,baseValue,bringIntoFocus,avoidReport}){cov_46dnclk9m().f[2]++;cov_46dnclk9m().s[8]++;this.value=type;cov_46dnclk9m().s[9]++;this.$setStyles();cov_46dnclk9m().s[10]++;this.$addAndValidateEditUI({baseValue,bringIntoFocus,avoidReport});},/**
       * @type {(info: {
       *   type: string,
       *   specificSchema?: import('zodex').SzType
       * }) => void} cfg
       */$setTypeNoEditUI({type,specificSchema}){cov_46dnclk9m().f[3]++;cov_46dnclk9m().s[11]++;if((cov_46dnclk9m().b[8][0]++,schemaObjs)&&(cov_46dnclk9m().b[8][1]++,specificSchema)){cov_46dnclk9m().b[7][0]++;const idx=(cov_46dnclk9m().s[12]++,schemaObjs.map(obj=>{cov_46dnclk9m().f[4]++;cov_46dnclk9m().s[13]++;return JSON.stringify(obj);}).indexOf(JSON.stringify(specificSchema)));cov_46dnclk9m().s[14]++;this.selectedIndex=idx+1;}else{cov_46dnclk9m().b[7][1]++;cov_46dnclk9m().s[15]++;this.value=type;}cov_46dnclk9m().s[16]++;this.$setStyles();},/** @type {SetStyles} */$setStyles(){cov_46dnclk9m().f[5]++;const{value:type}=(cov_46dnclk9m().s[17]++,this);cov_46dnclk9m().s[18]++;this.dataset.type=type;// Used for styling
let ancestorEl=(cov_46dnclk9m().s[19]++,this.parentElement);cov_46dnclk9m().s[20]++;if(ancestorEl.nodeName.toLowerCase()!=='fieldset'){cov_46dnclk9m().b[9][0]++;cov_46dnclk9m().s[21]++;// Grandparent check added for optional items placeholder
ancestorEl=this.parentElement.parentElement;}else{cov_46dnclk9m().b[9][1]++;}cov_46dnclk9m().s[22]++;if(ancestorEl.nodeName.toLowerCase()==='fieldset'){cov_46dnclk9m().b[10][0]++;cov_46dnclk9m().s[23]++;ancestorEl.dataset.type=type;cov_46dnclk9m().s[24]++;DOM.filterChildElements(ancestorEl,'legend').forEach(legend=>{cov_46dnclk9m().f[6]++;cov_46dnclk9m().s[25]++;legend.dataset.type=type;});}else{cov_46dnclk9m().b[10][1]++;}},$getTypeRoot(){cov_46dnclk9m().f[7]++;const container=(cov_46dnclk9m().s[26]++,this.$getContainer());/* istanbul ignore if -- How to replicate? */cov_46dnclk9m().s[27]++;if(!container){return false;}else{cov_46dnclk9m().b[11][0]++;}cov_46dnclk9m().s[28]++;return $e(container,'div[data-type]');},/** @type {AddAndValidateEditUI} */$addAndValidateEditUI({baseValue,bringIntoFocus,schemaObject,avoidReport}=(cov_46dnclk9m().b[12][0]++,{})){cov_46dnclk9m().f[8]++;const{value:type}=(cov_46dnclk9m().s[29]++,this);cov_46dnclk9m().s[30]++;if(!type){cov_46dnclk9m().b[13][0]++;cov_46dnclk9m().s[31]++;return;}else{cov_46dnclk9m().b[13][1]++;}let topRoot=(cov_46dnclk9m().s[32]++,this.$getTopRoot());// Todo (low): Try to avoid need for `baseValue`
//    (needed by arrayNonindexKeys for setting an array
//    length and avoiding errors); could set all
//    values through here?
cov_46dnclk9m().s[33]++;editUI=types.getUIForModeAndType({readonly:false,typeNamespace,type,bringIntoFocus,hasValue:(cov_46dnclk9m().b[14][0]++,type==='arrayNonindexKeys')&&(cov_46dnclk9m().b[14][1]++,baseValue),value:baseValue,buildTypeChoices,format,topRoot,schemaContent:(cov_46dnclk9m().b[15][0]++,schemaOriginal)??(cov_46dnclk9m().b[15][1]++,(cov_46dnclk9m().b[17][0]++,schemaContent?.type==='union')&&(cov_46dnclk9m().b[17][1]++,schemaIdx!==undefined)?(cov_46dnclk9m().b[16][0]++,schemaContent.options[schemaIdx]):(cov_46dnclk9m().b[16][1]++,schemaContent)),// Added `schemaContent` as inner arrays were not getting their
//   schema info; this apparently allows (actually requires)
//   commenting out the auto-adding of object content at end of
//   editUI in arrayType.js; we add `schemaFallingBack` to
//   distinguish
specificSchemaObject:(cov_46dnclk9m().b[18][0]++,schemaObject)??(cov_46dnclk9m().b[18][1]++,(cov_46dnclk9m().b[20][0]++,schemaContent?.type==='union')&&(cov_46dnclk9m().b[20][1]++,schemaIdx!==undefined)?(cov_46dnclk9m().b[19][0]++,schemaContent.options[schemaIdx]):(cov_46dnclk9m().b[19][1]++,schemaContent)),schemaFallingBack:Boolean((cov_46dnclk9m().b[21][0]++,!schemaObject)&&(cov_46dnclk9m().b[21][1]++,schemaContent))});cov_46dnclk9m().s[34]++;this.$addEditUI({editUI});cov_46dnclk9m().s[35]++;this.$validate({avoidReport});cov_46dnclk9m().s[36]++;topRoot=this.$getTopRoot();// May be existing now
// Needed; Array/object ref somewhere could now be valid or invalid
cov_46dnclk9m().s[37]++;types.validateAllReferences({topRoot});},/** @type {AddTypeAndEditUI} */$addTypeAndEditUI({type,editUI,specificSchema}){cov_46dnclk9m().f[9]++;cov_46dnclk9m().s[38]++;this.$setTypeNoEditUI({type,specificSchema});cov_46dnclk9m().s[39]++;this.$addEditUI({editUI});},/**
       * @type {(info: {editUI: HTMLElement}) => void}
       */$addEditUI({editUI}){cov_46dnclk9m().f[10]++;const container=(cov_46dnclk9m().s[40]++,this.$getContainer());cov_46dnclk9m().s[41]++;DOM.removeChildren(container);cov_46dnclk9m().s[42]++;jml(editUI,container);},$getContainer(){cov_46dnclk9m().f[11]++;cov_46dnclk9m().s[43]++;return this.nextElementSibling;},$getTopRoot(){cov_46dnclk9m().f[12]++;cov_46dnclk9m().s[44]++;return(cov_46dnclk9m().b[22][0]++,topRoot)||(cov_46dnclk9m().b[22][1]++,this.$getTypeRoot());},/**
       * @param {{avoidReport?: boolean}} cfg
       * @returns {boolean}
       */$validate({avoidReport}=(cov_46dnclk9m().b[23][0]++,{})){cov_46dnclk9m().f[13]++;const{value:type}=(cov_46dnclk9m().s[45]++,this);const container=(cov_46dnclk9m().s[46]++,this.$getContainer());cov_46dnclk9m().s[47]++;if(!container.firstElementChild){cov_46dnclk9m().b[24][0]++;cov_46dnclk9m().s[48]++;return false;}else{cov_46dnclk9m().b[24][1]++;}const editUI=(cov_46dnclk9m().s[49]++,container.firstElementChild);cov_46dnclk9m().s[50]++;return types.validate({type,root:editUI,topRoot:this.$getTopRoot(),avoidReport});}},$on:{change(e){cov_46dnclk9m().f[14]++;cov_46dnclk9m().s[51]++;// We don't want form `onchange` to run `$checkForKeyDuplicates`
//   again (through `addAndValidateEditUI`->`validateAllReferences`)
e?.stopPropagation();/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[52]++;this.$addAndValidateEditUI({schemaObject:schemaObjs?(cov_46dnclk9m().b[25][0]++,schemaObjs[Number(/** @type {HTMLSelectElement} */e.target.selectedOptions[0].dataset.idx)]):(cov_46dnclk9m().b[25][1]++,undefined)});/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[53]++;this.$setStyles();}}},[['option',{value:''},['(Choose a type)']],// @ts-expect-error Apparent TS bug
...typeOptions.map(([optText,optAtts],idx)=>{cov_46dnclk9m().f[15]++;cov_46dnclk9m().s[54]++;return['option',{...optAtts,dataset:schemaObjs?(cov_46dnclk9m().b[26][0]++,{idx}):(cov_46dnclk9m().b[26][1]++,{})},[optText]];})]));cov_46dnclk9m().s[55]++;if((cov_46dnclk9m().b[28][0]++,autoTrigger)&&(cov_46dnclk9m().b[28][1]++,typeOptions.length===1)&&(cov_46dnclk9m().b[28][2]++,!setValue)){cov_46dnclk9m().b[27][0]++;cov_46dnclk9m().s[56]++;setTimeout(()=>{cov_46dnclk9m().f[16]++;cov_46dnclk9m().s[57]++;sel.selectedIndex=1;cov_46dnclk9m().s[58]++;sel.dispatchEvent(new Event('change'));});}else{cov_46dnclk9m().b[27][1]++;cov_46dnclk9m().s[59]++;if((cov_46dnclk9m().b[30][0]++,setValue)||(cov_46dnclk9m().b[30][1]++,requireObject)&&(cov_46dnclk9m().b[30][2]++,!objectHasValue)){cov_46dnclk9m().b[29][0]++;cov_46dnclk9m().s[60]++;setTimeout(async()=>{cov_46dnclk9m().f[17]++;cov_46dnclk9m().s[61]++;if(!setValue){cov_46dnclk9m().b[31][0]++;cov_46dnclk9m().s[62]++;// if (requireObject && !objectHasValue) {
// Todo (low): We could auto-populate keypath if has
//   keypath (and we probably also only want if
//   not autoincrement)
value={};}else{cov_46dnclk9m().b[31][1]++;}cov_46dnclk9m().s[63]++;try{const{rootUI:rootEditUI,specificSchemas}=(cov_46dnclk9m().s[64]++,await formats.getControlsForFormatAndValue(types,format,value,{readonly:false,typeNamespace,schema,schemaContent,formats,types}));const type=(cov_46dnclk9m().s[65]++,Types.getTypeForRoot(/** @type {HTMLDivElement} */rootEditUI));// eslint-disable-next-line @stylistic/max-len -- Long
/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[66]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI,// We do actually want the first one
specificSchema:specificSchemas?.[0]});}catch(err){/* istanbul ignore next -- At least some errors handled earlier */dialogs.alert({message:'The object to be added had types not supported '+'by the current format.'});/* istanbul ignore next -- How to trigger? */console.log('err',err);}});}else{cov_46dnclk9m().b[29][1]++;}}const typeContainer=(cov_46dnclk9m().s[67]++,jml('div',{class:'typeContainer'}));cov_46dnclk9m().s[68]++;return{domArray:[sel,typeContainer],/** @type {GetValue} */getValue:$getValue,/** @type {GetType} */getType(){cov_46dnclk9m().f[18]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[69]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[70]++;return Types.getTypeForRoot(root);},/** @type {ValidValuesSet} */validValuesSet(){cov_46dnclk9m().f[19]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[71]++,$e(typeContainer,'div[data-type]'));const form=(/** @type {HTMLFormElement} */cov_46dnclk9m().s[72]++,root.closest('form'));cov_46dnclk9m().s[73]++;return Types.validValuesSet({form,typeNamespace});},/** @type {SetValue} */async setValue(value,stateObj){cov_46dnclk9m().f[20]++;const rootEditUI=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[74]++,(await formats.getControlsForFormatAndValue(types,format,value,stateObj)).rootUI);const type=(cov_46dnclk9m().s[75]++,Types.getTypeForRoot(rootEditUI));/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[76]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}};};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,