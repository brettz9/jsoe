function cov_46dnclk9m(){var path="/Users/brett/jsoe/src/typeChoices.js";var hash="eaf2ace2ea9802872c47255182aa0b52e59437ea";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/brett/jsoe/src/typeChoices.js",statementMap:{"0":{start:{line:97,column:32},end:{line:379,column:1}},"1":{start:{line:115,column:28},end:{line:121,column:5}},"2":{start:{line:122,column:24},end:{line:122,column:41}},"3":{start:{line:123,column:21},end:{line:123,column:52}},"4":{start:{line:128,column:20},end:{line:143,column:3}},"5":{start:{line:130,column:6},end:{line:130,column:41}},"6":{start:{line:132,column:4},end:{line:142,column:6}},"7":{start:{line:144,column:48},end:{line:289,column:4}},"8":{start:{line:155,column:8},end:{line:155,column:26}},"9":{start:{line:156,column:8},end:{line:156,column:26}},"10":{start:{line:157,column:8},end:{line:157,column:64}},"11":{start:{line:163,column:8},end:{line:163,column:26}},"12":{start:{line:164,column:8},end:{line:164,column:26}},"13":{start:{line:169,column:30},end:{line:169,column:34}},"14":{start:{line:170,column:8},end:{line:170,column:33}},"15":{start:{line:171,column:22},end:{line:171,column:40}},"16":{start:{line:172,column:8},end:{line:177,column:9}},"17":{start:{line:173,column:10},end:{line:173,column:36}},"18":{start:{line:174,column:10},end:{line:176,column:13}},"19":{start:{line:175,column:12},end:{line:175,column:39}},"20":{start:{line:180,column:26},end:{line:180,column:46}},"21":{start:{line:182,column:8},end:{line:184,column:9}},"22":{start:{line:185,column:8},end:{line:185,column:47}},"23":{start:{line:192,column:30},end:{line:192,column:34}},"24":{start:{line:194,column:8},end:{line:196,column:9}},"25":{start:{line:195,column:10},end:{line:195,column:17}},"26":{start:{line:197,column:22},end:{line:197,column:40}},"27":{start:{line:203,column:8},end:{line:215,column:11}},"28":{start:{line:216,column:8},end:{line:216,column:34}},"29":{start:{line:217,column:8},end:{line:217,column:25}},"30":{start:{line:218,column:8},end:{line:218,column:37}},"31":{start:{line:220,column:8},end:{line:220,column:47}},"32":{start:{line:225,column:8},end:{line:225,column:38}},"33":{start:{line:226,column:8},end:{line:226,column:34}},"34":{start:{line:232,column:26},end:{line:232,column:46}},"35":{start:{line:233,column:8},end:{line:233,column:38}},"36":{start:{line:234,column:8},end:{line:234,column:31}},"37":{start:{line:237,column:8},end:{line:237,column:39}},"38":{start:{line:240,column:8},end:{line:240,column:46}},"39":{start:{line:246,column:30},end:{line:246,column:34}},"40":{start:{line:247,column:26},end:{line:247,column:46}},"41":{start:{line:248,column:8},end:{line:250,column:9}},"42":{start:{line:249,column:10},end:{line:249,column:23}},"43":{start:{line:251,column:23},end:{line:251,column:50}},"44":{start:{line:252,column:8},end:{line:254,column:11}},"45":{start:{line:260,column:6},end:{line:260,column:27}},"46":{start:{line:261,column:43},end:{line:268,column:9}},"47":{start:{line:269,column:43},end:{line:269,column:63}},"48":{start:{line:279,column:8},end:{line:286,column:10}},"49":{start:{line:290,column:2},end:{line:335,column:3}},"50":{start:{line:291,column:4},end:{line:294,column:7}},"51":{start:{line:292,column:6},end:{line:292,column:28}},"52":{start:{line:293,column:6},end:{line:293,column:45}},"53":{start:{line:295,column:9},end:{line:335,column:3}},"54":{start:{line:296,column:4},end:{line:334,column:7}},"55":{start:{line:297,column:6},end:{line:302,column:7}},"56":{start:{line:301,column:8},end:{line:301,column:19}},"57":{start:{line:303,column:6},end:{line:333,column:7}},"58":{start:{line:304,column:27},end:{line:316,column:9}},"59":{start:{line:318,column:10},end:{line:320,column:12}},"60":{start:{line:322,column:81},end:{line:324,column:56}},"61":{start:{line:337,column:24},end:{line:337,column:60}},"62":{start:{line:339,column:2},end:{line:378,column:4}},"63":{start:{line:351,column:8},end:{line:351,column:43}},"64":{start:{line:353,column:6},end:{line:353,column:40}},"65":{start:{line:359,column:8},end:{line:359,column:43}},"66":{start:{line:361,column:51},end:{line:361,column:71}},"67":{start:{line:362,column:6},end:{line:362,column:57}},"68":{start:{line:368,column:8},end:{line:371,column:9}},"69":{start:{line:373,column:19},end:{line:373,column:51}},"70":{start:{line:374,column:79},end:{line:376,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:97,column:32},end:{line:97,column:33}},loc:{start:{line:113,column:6},end:{line:379,column:1}},line:113},"1":{name:"(anonymous_1)",decl:{start:{line:128,column:20},end:{line:128,column:21}},loc:{start:{line:128,column:47},end:{line:143,column:3}},line:128},"2":{name:"(anonymous_2)",decl:{start:{line:154,column:6},end:{line:154,column:7}},loc:{start:{line:154,column:51},end:{line:158,column:7}},line:154},"3":{name:"(anonymous_3)",decl:{start:{line:162,column:6},end:{line:162,column:7}},loc:{start:{line:162,column:32},end:{line:165,column:7}},line:162},"4":{name:"(anonymous_4)",decl:{start:{line:168,column:6},end:{line:168,column:7}},loc:{start:{line:168,column:20},end:{line:178,column:7}},line:168},"5":{name:"(anonymous_5)",decl:{start:{line:174,column:59},end:{line:174,column:60}},loc:{start:{line:174,column:71},end:{line:176,column:11}},line:174},"6":{name:"(anonymous_6)",decl:{start:{line:179,column:6},end:{line:179,column:7}},loc:{start:{line:179,column:22},end:{line:186,column:7}},line:179},"7":{name:"(anonymous_7)",decl:{start:{line:189,column:6},end:{line:189,column:7}},loc:{start:{line:191,column:14},end:{line:221,column:7}},line:191},"8":{name:"(anonymous_8)",decl:{start:{line:224,column:6},end:{line:224,column:7}},loc:{start:{line:224,column:41},end:{line:227,column:7}},line:224},"9":{name:"(anonymous_9)",decl:{start:{line:231,column:6},end:{line:231,column:7}},loc:{start:{line:231,column:28},end:{line:235,column:7}},line:231},"10":{name:"(anonymous_10)",decl:{start:{line:236,column:6},end:{line:236,column:7}},loc:{start:{line:236,column:23},end:{line:238,column:7}},line:236},"11":{name:"(anonymous_11)",decl:{start:{line:239,column:6},end:{line:239,column:7}},loc:{start:{line:239,column:21},end:{line:241,column:7}},line:239},"12":{name:"(anonymous_12)",decl:{start:{line:245,column:6},end:{line:245,column:7}},loc:{start:{line:245,column:19},end:{line:255,column:7}},line:245},"13":{name:"(anonymous_13)",decl:{start:{line:257,column:10},end:{line:257,column:11}},loc:{start:{line:257,column:21},end:{line:270,column:5}},line:257},"14":{name:"(anonymous_14)",decl:{start:{line:278,column:6},end:{line:278,column:7}},loc:{start:{line:278,column:35},end:{line:287,column:7}},line:278},"15":{name:"(anonymous_15)",decl:{start:{line:291,column:15},end:{line:291,column:16}},loc:{start:{line:291,column:21},end:{line:294,column:5}},line:291},"16":{name:"(anonymous_16)",decl:{start:{line:296,column:15},end:{line:296,column:16}},loc:{start:{line:296,column:27},end:{line:334,column:5}},line:296},"17":{name:"(anonymous_17)",decl:{start:{line:349,column:4},end:{line:349,column:5}},loc:{start:{line:349,column:15},end:{line:354,column:5}},line:349},"18":{name:"(anonymous_18)",decl:{start:{line:357,column:4},end:{line:357,column:5}},loc:{start:{line:357,column:22},end:{line:363,column:5}},line:357},"19":{name:"(anonymous_19)",decl:{start:{line:366,column:4},end:{line:366,column:5}},loc:{start:{line:366,column:37},end:{line:377,column:5}},line:366}},branchMap:{"0":{loc:{start:{line:101,column:2},end:{line:101,column:18}},type:"default-arg",locations:[{start:{line:101,column:13},end:{line:101,column:18}}],line:101},"1":{loc:{start:{line:108,column:2},end:{line:108,column:25}},type:"default-arg",locations:[{start:{line:108,column:12},end:{line:108,column:25}}],line:108},"2":{loc:{start:{line:109,column:2},end:{line:109,column:21}},type:"default-arg",locations:[{start:{line:109,column:10},end:{line:109,column:21}}],line:109},"3":{loc:{start:{line:115,column:28},end:{line:121,column:5}},type:"cond-expr",locations:[{start:{line:116,column:6},end:{line:118,column:5}},{start:{line:119,column:6},end:{line:121,column:5}}],line:115},"4":{loc:{start:{line:145,column:12},end:{line:145,column:53}},type:"binary-expr",locations:[{start:{line:145,column:12},end:{line:145,column:25}},{start:{line:145,column:29},end:{line:145,column:53}}],line:145},"5":{loc:{start:{line:146,column:42},end:{line:148,column:10}},type:"cond-expr",locations:[{start:{line:147,column:8},end:{line:147,column:28}},{start:{line:148,column:8},end:{line:148,column:10}}],line:146},"6":{loc:{start:{line:172,column:8},end:{line:177,column:9}},type:"if",locations:[{start:{line:172,column:8},end:{line:177,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:172},"7":{loc:{start:{line:182,column:8},end:{line:184,column:9}},type:"if",locations:[{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:182},"8":{loc:{start:{line:189,column:29},end:{line:191,column:12}},type:"default-arg",locations:[{start:{line:191,column:10},end:{line:191,column:12}}],line:189},"9":{loc:{start:{line:194,column:8},end:{line:196,column:9}},type:"if",locations:[{start:{line:194,column:8},end:{line:196,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:194},"10":{loc:{start:{line:208,column:20},end:{line:208,column:61}},type:"binary-expr",locations:[{start:{line:208,column:20},end:{line:208,column:48}},{start:{line:208,column:52},end:{line:208,column:61}}],line:208},"11":{loc:{start:{line:213,column:25},end:{line:213,column:56}},type:"binary-expr",locations:[{start:{line:213,column:25},end:{line:213,column:39}},{start:{line:213,column:43},end:{line:213,column:56}}],line:213},"12":{loc:{start:{line:240,column:15},end:{line:240,column:45}},type:"binary-expr",locations:[{start:{line:240,column:15},end:{line:240,column:22}},{start:{line:240,column:26},end:{line:240,column:45}}],line:240},"13":{loc:{start:{line:248,column:8},end:{line:250,column:9}},type:"if",locations:[{start:{line:248,column:8},end:{line:250,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:248},"14":{loc:{start:{line:262,column:22},end:{line:267,column:21}},type:"cond-expr",locations:[{start:{line:263,column:12},end:{line:266,column:12}},{start:{line:267,column:12},end:{line:267,column:21}}],line:262},"15":{loc:{start:{line:283,column:21},end:{line:283,column:44}},type:"cond-expr",locations:[{start:{line:283,column:34},end:{line:283,column:39}},{start:{line:283,column:42},end:{line:283,column:44}}],line:283},"16":{loc:{start:{line:290,column:2},end:{line:335,column:3}},type:"if",locations:[{start:{line:290,column:2},end:{line:335,column:3}},{start:{line:295,column:9},end:{line:335,column:3}}],line:290},"17":{loc:{start:{line:295,column:9},end:{line:335,column:3}},type:"if",locations:[{start:{line:295,column:9},end:{line:335,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:295},"18":{loc:{start:{line:295,column:13},end:{line:295,column:59}},type:"binary-expr",locations:[{start:{line:295,column:13},end:{line:295,column:21}},{start:{line:295,column:26},end:{line:295,column:39}},{start:{line:295,column:43},end:{line:295,column:58}}],line:295},"19":{loc:{start:{line:297,column:6},end:{line:302,column:7}},type:"if",locations:[{start:{line:297,column:6},end:{line:302,column:7}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:297}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0],"1":[0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"eaf2ace2ea9802872c47255182aa0b52e59437ea"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_46dnclk9m=function(){return actualCoverage;};}return actualCoverage;}cov_46dnclk9m();import{jml}from'./vendor-imports.js';import Formats from'./formats.js';import Types from'./types.js';import{$e,DOM}from'./utils/templateUtils.js';import dialogs from'./utils/dialogs.js';// This is technically just `import('./index.js').SetType`, but our
//   redirect file causes problems, so we redefine here
/**
 * @typedef {(cfg: {
 *   type: string,
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean
 * }) => void} SetType
 */ /**
 * @typedef {(info: {type: string, editUI: Element}) => void} AddTypeAndEditUI
 */ /**
 * @typedef {(info?: {
 *   baseValue?: import('./formats.js').StructuredCloneValue,
 *   bringIntoFocus?: boolean,
 *   schemaObject?: import('./formatAndTypeChoices.js').ZodexSchema
 * }) => void} AddAndValidateEditUI
 */ /**
 * @typedef {() => void} SetStyles
 */ /**
 * @typedef {HTMLElement & {
 *   $addAndValidateEditUI: AddAndValidateEditUI,
 *   $setStyles: SetStyles
 * }} TypeChoicesElementAPI
 */ /**
 * @callback GetValue
 * @param {import('./types.js').StateObject} [stateObj] Will
 *   auto-set `typeNamespace` and `format`
 * @param {string} [currentPath]
 * @returns {import('./formats.js').StructuredCloneValue}
 */ /**
 * @callback GetType
 * @returns {string}
 */ /**
 * @callback ValidValuesSet
 * @returns {boolean}
 */ /**
 * @callback SetValue
 * @param {import('./formats.js').StructuredCloneValue} value
 * @param {import('./types.js').StateObject} stateObj
 * @returns {Promise<void>}
 */ /**
 * @callback BuildTypeChoices
 * @param {{
 *   format: import('./formats.js').AvailableFormat,
 *   typeNamespace?: string,
 *   value?: import('./formats.js').StructuredCloneValue,
 *   setValue?: boolean,
 *   state?: string,
 *   arrayState?: string,
 *   keySelectClass?: string,
 *   requireObject?: boolean,
 *   objectHasValue?: boolean,
 *   topRoot?: import('./types.js').RootElement,
 *   formats?: import('./formats.js').default
 *   types?: import('./types.js').default
 *   schema?: string,
 *   schemaOriginal?: import('./formatAndTypeChoices.js').ZodexSchema,
 *   schemaContent?: import('./formatAndTypeChoices.js').ZodexSchema,
 * }} cfg
 * @returns {{
 *   domArray: [select: HTMLElement, typeContainer: HTMLElement],
 *   getValue: GetValue,
 *   getType: GetType,
 *   validValuesSet: ValidValuesSet,
 *   setValue: SetValue
 * }}
 */ /**
 * @type {BuildTypeChoices}
 */cov_46dnclk9m().s[0]++;export const buildTypeChoices=({format,typeNamespace,value,setValue=(cov_46dnclk9m().b[0][0]++,false),state,// itemIndex = 0,
keySelectClass,requireObject,objectHasValue,topRoot,formats=(cov_46dnclk9m().b[1][0]++,new Formats()),types=(cov_46dnclk9m().b[2][0]++,new Types()),schema,schemaOriginal,schemaContent})=>{cov_46dnclk9m().f[0]++;// console.log('format', format, 'state', state, 'path', typeNamespace);
const typeAndSchemaInfo=(cov_46dnclk9m().s[1]++,requireObject?(cov_46dnclk9m().b[3][0]++,{typeOptions:[types.getOptionForType('object')],schemaObjects:undefined}):(cov_46dnclk9m().b[3][1]++,types.getTypeOptionsForFormatAndState(format,state,schemaContent,schemaOriginal)));const{typeOptions}=(cov_46dnclk9m().s[2]++,typeAndSchemaInfo);const schemaObjs=(cov_46dnclk9m().s[3]++,typeAndSchemaInfo.schemaObjects);let editUI;/** @type {GetValue} */cov_46dnclk9m().s[4]++;const $getValue=(stateObj,currentPath)=>{cov_46dnclk9m().f[1]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[5]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[6]++;return types.getValueForRoot(root,/** @type {import('./types.js').StateObject} */{typeNamespace,formats,format,types,...stateObj},currentPath);};const sel=(/** @type {HTMLSelectElement} */cov_46dnclk9m().s[7]++,jml('select',{hidden:(cov_46dnclk9m().b[4][0]++,requireObject)||(cov_46dnclk9m().b[4][1]++,typeOptions.length===1),class:`typeChoices-${typeNamespace}${keySelectClass?(cov_46dnclk9m().b[5][0]++,' '+keySelectClass):(cov_46dnclk9m().b[5][1]++,'')}`,// is: 'type-choices',
$custom:{$getValue,/** @type {SetType} */$setType({type,baseValue,bringIntoFocus}){cov_46dnclk9m().f[2]++;cov_46dnclk9m().s[8]++;this.value=type;cov_46dnclk9m().s[9]++;this.$setStyles();cov_46dnclk9m().s[10]++;this.$addAndValidateEditUI({baseValue,bringIntoFocus});},/**
       * @type {(info: {type: string}) => void} cfg
       */$setTypeNoEditUI({type}){cov_46dnclk9m().f[3]++;cov_46dnclk9m().s[11]++;this.value=type;cov_46dnclk9m().s[12]++;this.$setStyles();},/** @type {SetStyles} */$setStyles(){cov_46dnclk9m().f[4]++;const{value:type}=(cov_46dnclk9m().s[13]++,this);cov_46dnclk9m().s[14]++;this.dataset.type=type;// Used for styling
const parEl=(cov_46dnclk9m().s[15]++,this.parentElement);cov_46dnclk9m().s[16]++;if(parEl.nodeName.toLowerCase()==='fieldset'){cov_46dnclk9m().b[6][0]++;cov_46dnclk9m().s[17]++;parEl.dataset.type=type;cov_46dnclk9m().s[18]++;DOM.filterChildElements(parEl,'legend').forEach(legend=>{cov_46dnclk9m().f[5]++;cov_46dnclk9m().s[19]++;legend.dataset.type=type;});}else{cov_46dnclk9m().b[6][1]++;}},$getTypeRoot(){cov_46dnclk9m().f[6]++;const container=(cov_46dnclk9m().s[20]++,this.$getContainer());/* istanbul ignore if -- How to replicate? */cov_46dnclk9m().s[21]++;if(!container){return false;}else{cov_46dnclk9m().b[7][0]++;}cov_46dnclk9m().s[22]++;return $e(container,'div[data-type]');},/** @type {AddAndValidateEditUI} */$addAndValidateEditUI({baseValue,bringIntoFocus,schemaObject}=(cov_46dnclk9m().b[8][0]++,{})){cov_46dnclk9m().f[7]++;const{value:type}=(cov_46dnclk9m().s[23]++,this);cov_46dnclk9m().s[24]++;if(!type){cov_46dnclk9m().b[9][0]++;cov_46dnclk9m().s[25]++;return;}else{cov_46dnclk9m().b[9][1]++;}let topRoot=(cov_46dnclk9m().s[26]++,this.$getTopRoot());// Todo (low): Try to avoid need for `baseValue`
//    (needed by arrayNonindexKeys for setting an array
//    length and avoiding errors); could set all
//    values through here?
cov_46dnclk9m().s[27]++;editUI=types.getUIForModeAndType({readonly:false,typeNamespace,type,bringIntoFocus,hasValue:(cov_46dnclk9m().b[10][0]++,type==='arrayNonindexKeys')&&(cov_46dnclk9m().b[10][1]++,baseValue),value:baseValue,buildTypeChoices,format,topRoot,schemaContent:(cov_46dnclk9m().b[11][0]++,schemaOriginal)??(cov_46dnclk9m().b[11][1]++,schemaContent),specificSchemaObject:schemaObject});cov_46dnclk9m().s[28]++;this.$addEditUI({editUI});cov_46dnclk9m().s[29]++;this.$validate();cov_46dnclk9m().s[30]++;topRoot=this.$getTopRoot();// May be existing now
// Needed; Array/object ref somewhere could now be valid or invalid
cov_46dnclk9m().s[31]++;types.validateAllReferences({topRoot});},/** @type {AddTypeAndEditUI} */$addTypeAndEditUI({type,editUI}){cov_46dnclk9m().f[8]++;cov_46dnclk9m().s[32]++;this.$setTypeNoEditUI({type});cov_46dnclk9m().s[33]++;this.$addEditUI({editUI});},/**
       * @type {(info: {editUI: HTMLElement}) => void}
       */$addEditUI({editUI}){cov_46dnclk9m().f[9]++;const container=(cov_46dnclk9m().s[34]++,this.$getContainer());cov_46dnclk9m().s[35]++;DOM.removeChildren(container);cov_46dnclk9m().s[36]++;jml(editUI,container);},$getContainer(){cov_46dnclk9m().f[10]++;cov_46dnclk9m().s[37]++;return this.nextElementSibling;},$getTopRoot(){cov_46dnclk9m().f[11]++;cov_46dnclk9m().s[38]++;return(cov_46dnclk9m().b[12][0]++,topRoot)||(cov_46dnclk9m().b[12][1]++,this.$getTypeRoot());},/**
       * @returns {boolean}
       */$validate(){cov_46dnclk9m().f[12]++;const{value:type}=(cov_46dnclk9m().s[39]++,this);const container=(cov_46dnclk9m().s[40]++,this.$getContainer());cov_46dnclk9m().s[41]++;if(!container.firstElementChild){cov_46dnclk9m().b[13][0]++;cov_46dnclk9m().s[42]++;return false;}else{cov_46dnclk9m().b[13][1]++;}const editUI=(cov_46dnclk9m().s[43]++,container.firstElementChild);cov_46dnclk9m().s[44]++;return types.validate({type,root:editUI,topRoot:this.$getTopRoot()});}},$on:{change(e){cov_46dnclk9m().f[13]++;cov_46dnclk9m().s[45]++;// We don't want form `onchange` to run `$checkForKeyDuplicates`
//   again (through `addAndValidateEditUI`->`validateAllReferences`)
e?.stopPropagation();/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[46]++;this.$addAndValidateEditUI({schemaObject:schemaObjs?(cov_46dnclk9m().b[14][0]++,schemaObjs[Number(/** @type {HTMLSelectElement} */e.target.selectedOptions[0].dataset.idx)]):(cov_46dnclk9m().b[14][1]++,undefined)});/** @type {TypeChoicesElementAPI} */cov_46dnclk9m().s[47]++;this.$setStyles();}}},[['option',{value:''},['(Choose a type)']],// @ts-expect-error Apparent TS bug
...typeOptions.map(([optText,optAtts],idx)=>{cov_46dnclk9m().f[14]++;cov_46dnclk9m().s[48]++;return['option',{...optAtts,dataset:schemaObjs?(cov_46dnclk9m().b[15][0]++,{idx}):(cov_46dnclk9m().b[15][1]++,{})},[optText]];})]));cov_46dnclk9m().s[49]++;if(typeOptions.length===1){cov_46dnclk9m().b[16][0]++;cov_46dnclk9m().s[50]++;setTimeout(()=>{cov_46dnclk9m().f[15]++;cov_46dnclk9m().s[51]++;sel.selectedIndex=1;cov_46dnclk9m().s[52]++;sel.dispatchEvent(new Event('change'));});}else{cov_46dnclk9m().b[16][1]++;cov_46dnclk9m().s[53]++;if((cov_46dnclk9m().b[18][0]++,setValue)||(cov_46dnclk9m().b[18][1]++,requireObject)&&(cov_46dnclk9m().b[18][2]++,!objectHasValue)){cov_46dnclk9m().b[17][0]++;cov_46dnclk9m().s[54]++;setTimeout(async()=>{cov_46dnclk9m().f[16]++;cov_46dnclk9m().s[55]++;if(!setValue){cov_46dnclk9m().b[19][0]++;cov_46dnclk9m().s[56]++;// if (requireObject && !objectHasValue) {
// Todo (low): We could auto-populate keypath if has
//   keypath (and we probably also only want if
//   not autoincrement)
value={};}else{cov_46dnclk9m().b[19][1]++;}cov_46dnclk9m().s[57]++;try{const rootEditUI=(cov_46dnclk9m().s[58]++,await formats.getControlsForFormatAndValue(types,format,value,{readonly:false,typeNamespace,schema,schemaContent,formats,types}));const type=(cov_46dnclk9m().s[59]++,Types.getTypeForRoot(/** @type {HTMLDivElement} */rootEditUI));// eslint-disable-next-line @stylistic/max-len -- Long
/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[60]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}catch(err){/* istanbul ignore next -- At least some errors handled earlier */dialogs.alert({message:'The object to be added had types not supported '+'by the current format.'});/* istanbul ignore next -- How to trigger? */console.log('err',err);}});}else{cov_46dnclk9m().b[17][1]++;}}const typeContainer=(cov_46dnclk9m().s[61]++,jml('div',{class:'typeContainer'}));cov_46dnclk9m().s[62]++;return{domArray:[sel,typeContainer],/** @type {GetValue} */getValue:$getValue,/** @type {GetType} */getType(){cov_46dnclk9m().f[17]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[63]++,$e(typeContainer,'div[data-type]'));cov_46dnclk9m().s[64]++;return Types.getTypeForRoot(root);},/** @type {ValidValuesSet} */validValuesSet(){cov_46dnclk9m().f[18]++;const root=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[65]++,$e(typeContainer,'div[data-type]'));const form=(/** @type {HTMLFormElement} */cov_46dnclk9m().s[66]++,root.closest('form'));cov_46dnclk9m().s[67]++;return Types.validValuesSet({form,typeNamespace});},/** @type {SetValue} */async setValue(value,stateObj){cov_46dnclk9m().f[19]++;const rootEditUI=(/** @type {HTMLDivElement} */cov_46dnclk9m().s[68]++,await formats.getControlsForFormatAndValue(types,format,value,stateObj));const type=(cov_46dnclk9m().s[69]++,Types.getTypeForRoot(rootEditUI));/** @type {HTMLSelectElement & {$addTypeAndEditUI: AddTypeAndEditUI}} */cov_46dnclk9m().s[70]++;sel.$addTypeAndEditUI({type,editUI:rootEditUI});}};};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,